function getForm(e){return"data="+JSON.stringify(e)}var configMessage={email:"",password:"",device_id:"",country_code:"",send_at:"1 second",expires_at:"1 hour"},configMessagesForm=new Vue({el:"#message-settings-section",data:{config:configMessage},mounted:function(){this.getConfig()},methods:{confirmPhone:function(){},getConfig:function(){var e,t=this;(e=axios.get(BASE_URL+"messages/get_config")).then(function(e){e.data.config&&(t.config=e.data.config)}),e.catch(function(e){console.log(e)})},saveSettings:function(e){var t,i,a;t=this.config,i="data="+JSON.stringify(t),(a=axios.post(BASE_URL+"messages/save_config",i)).then(function(e){displayMessage(e.data.mensaje)}),a.catch(function(e){console.log(e)})}}}),sendMessageApp=new Vue({el:"#send-message-modal",data:{hide_clients:!0,hide_numbers:!0,message_data:{tipo:"",clientes:"",numeros:"",mensaje:""}},mounted:function(){this.initSelect2()},computed:{letters_count:function(){return this.message_data.mensaje.length}},methods:{sendMessage:function(){var e,t;isEmpty([this.message_data.tipo,this.message_data.mensaje])?swal("Campos Requeridos","Por favor selecciones el tipo de mensaje y escriba su mensaje"):(e="data="+JSON.stringify(this.message_data),(t=axios.post(BASE_URL+"messages/send_message",e)).then(function(e){displayMessage(e.data.mensaje)}),t.catch(function(e){console.log(e)}))},initSelect2:function(){var e={dropdownParent:$("#send-message-modal")},t=$("#message-type");t.select2(e);var i={clients:$("#clients-for-message").select2({dropdownParent:$("#send-message-modal"),ajax:{url:BASE_URL+"messages/search_clients",dataType:"json",delay:250,data:function(e){return{q:e.term,page:e.page}},processResults:function(e,t){return t.page=t.page||1,{results:e.items,pagination:{more:30*t.page<e.total_count}}},cache:!0}}),messageType:t};this.selec2Liteners(i)},selec2Liteners:function(e){var t=this;e.messageType.on("select2:select",function(e){e.params.data.element.attributes;var i=e.params.data.id;t.message_data.tipo=i,"otros"==i?(t.hide_clients=!0,t.hide_numbers=!1):"personalizado"==i?(t.hide_numbers=!0,t.hide_clients=!1):(t.hide_clients=!0,t.hide_numbers=!0)}),e.messageType.select2("val","mora"),e.clients.on("select2:select",function(i){for(var a=e.clients.select2("data"),n=[],s=0;s<a.length;s++)n.push({nombre_completo:a[s].text,celular:a[s].id});t.message_data.clientes=n})}}}),paymentsReport=new Vue({el:"#recibos",data:{table:"",tableHTML:"",total:"",between:{first_date:"",second_date:"",text:""}},mounted:function(){"notificaciones"==currentPage&&this.getReport()},filters:{currencyFormat:function(e){return"RD$ "+CurrencyFormat(e)}},methods:{getReport:function(){var e=this,t="data="+JSON.stringify(this.between);axios.post(BASE_URL+"payment/get_receipts/",t).then(function(t){e.fillTable(t.data.content),e.total=t.data.acum})},fillTable:function(e){var t=$("#receipts-table");t.bootstrapTable("destroy"),t.find("tbody").html(e),t.bootstrapTable(),t.find("tbody").css({display:"table-row-group"})}}}),RetirementReport=new Vue({el:"#retiros",data:{table:"",tableHTML:"",between:{first_date:"",second_date:""}},mounted:function(){"notificaciones"==currentPage&&this.getReport()},methods:{getReport:function(){var e=this,t="data="+JSON.stringify(this.between);axios.post(BASE_URL+"contract/getCancelations/",t).then(function(t){e.fillTable(t.data.content)})},fillTable:function(e){var t=$("#cancelation-table");t.bootstrapTable("destroy"),t.find("tbody").html(e),t.bootstrapTable(),t.find("tbody").css({display:"table-row-group"})}}}),ticketListView=new Vue({el:"#averias-list-view",data:{dataSearch:{text:"",state:"por reparar"},tickets:[],hide:!1},mounted:function(){this.itemClickListener();var e=this;busAveria.$on("tickets-listed",function(){e.itemClickListener()})},methods:{search:function(){var e="data="+JSON.stringify(this.dataSearch),t=axios.post(BASE_URL+"api/averias/search",e);t.then(function(e){this.fillAveriasList(e.data)}),t.catch(function(){console.error(res.data.mensaje)})},fillAveriasList:function(e){$("#averia-item-list").html(e),ticketListView.itemClickListener()},itemClickListener:function(){$("#averias-list-view .averia-item").on("click",function(){var e=$(this).find(".code").text().trim();ticketView.getTicket(e)})}}}),emptyTicket={id_averia:"",id_cliente:"",cliente:"",direccion:"",descripcion:"",celular:"",fecha:"",estado:"",fecha_reparacion:"",tecnico:"",codigo:""},ticketView=new Vue({el:"#ticket-view",data:{classes:{hide:!0},mode:{newComment:!1,edit:!1},new_comment:"",comments:[],ticket:emptyTicket},created:function(){$("#ticket-view").removeClass("invisible")},methods:{getTicket:function(e){var t="data="+JSON.stringify({id_averia:e});axios.post(BASE_URL+"api/averias/get_averia",t).then(function(e){var t=e.data;ticketView.classes.hide=!1,ticketListView.hide=!0,ticketView.ticket=t.ticket,ticketView.comments=t.comments})},quit:function(){this.ticket=emptyTicket,this.comments=null,this.classes.hide=!0,this.closeCommentMode(),ticketListView.hide=!1},print:function(){print()},startComment:function(){this.mode.newComment=!0},addComment:function(){var e=getForm({id_averia:this.ticket.id_averia,descripcion:this.new_comment}),t=this;axios.post(BASE_URL+"api/averias/add_comment",e).then(function(e){t.getComments(),t.closeCommentMode(),displayMessage(e.data.mensaje)})},_deleteComment:function(e){var t=e.target.parentNode.parentNode,i=e.target.parentNode.attributes["data-id"].value,a=this;t.classList.add("to-delete"),swal({title:"EstÃ¡ Seguro?",text:"Seguro de que eliminar este reporte?",type:"warning",showCancelButton:!0,confirmButtonText:"Eliminar",cancelButtonText:"Cancelar"}).then(function(){a.deleteComment(i),t.classList.remove("to-delete")}).catch(function(){t.classList.remove("to-delete")})},deleteComment:function(e){var t=this,i=getForm({id_reporte:e});axios.post(BASE_URL+"api/averias/delete_comment",i).then(function(e){t.getComments(),displayMessage(e.data.mensaje)})},editComment:function(){},closeCommentMode:function(){this.mode.newComment=!1,this.new_comment=""},getComments:function(){var e=getForm({id_averia:this.ticket.id_averia}),t=this;axios.post(BASE_URL+"api/averias/get_comments",e).then(function(e){t.comments=e.data.comments})},updateDescription:function(){this.updateTicket(["id_averia","descripcion","tecnico","estado","fecha_reparacion"])},updateState:function(){"por reparar"==this.ticket.estado?this.ticket.fecha_reparacion="":this.ticket.fecha_reparacion=moment().format("YYYY-MM-DD")},updateTicket:function(e){this.closeEditMode();var t=getForm(this.getFields(e));axios.post(BASE_URL+"api/averias/update_averia",t).then(function(e){ticketListView.search(),displayMessage(e.data.mensaje)})},deleteTicket:function(){console.info("deleted")},closeEditMode:function(){this.mode.edit=!1},enterEditMode:function(){this.mode.edit=!0},getFields:function(e){var t={},i=this;return e.forEach(function(e){t[e]=i.ticket[e]},this),t}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRpY2tldHMuanMiLCJNZXNzYWdlcy5qcyIsIlBheW1lbnRzLmpzIiwiUmV0aXJlbWVudHMuanMiXSwibmFtZXMiOlsiZ2V0Rm9ybSIsIm9iamVjdCIsIkpTT04iLCJzdHJpbmdpZnkiLCJjb25maWdNZXNzYWdlIiwiZW1haWwiLCJwYXNzd29yZCIsImRldmljZV9pZCIsImNvdW50cnlfY29kZSIsInNlbmRfYXQiLCJleHBpcmVzX2F0IiwiY29uZmlnTWVzc2FnZXNGb3JtIiwiVnVlIiwiZWwiLCJkYXRhIiwiY29uZmlnIiwibW91bnRlZCIsInRoaXMiLCJnZXRDb25maWciLCJtZXRob2RzIiwiY29uZmlybVBob25lIiwic2VuZCIsInNlbGYiLCJheGlvcyIsImdldCIsIkJBU0VfVVJMIiwidGhlbiIsInJlcyIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwic2F2ZVNldHRpbmdzIiwiZSIsImZvcm0iLCJwb3N0IiwiZGlzcGxheU1lc3NhZ2UiLCJtZW5zYWplIiwiZXJyIiwic2VuZE1lc3NhZ2VBcHAiLCJoaWRlX2NsaWVudHMiLCJoaWRlX251bWJlcnMiLCJtZXNzYWdlX2RhdGEiLCJ0aXBvIiwiY2xpZW50ZXMiLCJudW1lcm9zIiwiaW5pdFNlbGVjdDIiLCJjb21wdXRlZCIsImxldHRlcnNfY291bnQiLCJsZW5ndGgiLCJzZW5kTWVzc2FnZSIsImlzRW1wdHkiLCJzd2FsIiwib3B0aW9ucyIsImRyb3Bkb3duUGFyZW50IiwiJCIsInNlbGVjdE1lc3NhZ2VUeXBlIiwic2VsZWN0MiIsInNlbGVjdHMiLCJjbGllbnRzIiwiYWpheCIsInVybCIsImRhdGFUeXBlIiwiZGVsYXkiLCJwYXJhbXMiLCJxIiwidGVybSIsInBhZ2UiLCJwcm9jZXNzUmVzdWx0cyIsInJlc3VsdHMiLCJpdGVtcyIsInBhZ2luYXRpb24iLCJtb3JlIiwidG90YWxfY291bnQiLCJjYWNoZSIsIm1lc3NhZ2VUeXBlIiwic2VsZWMyTGl0ZW5lcnMiLCJvbiIsImVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwiaWQiLCJpIiwicHVzaCIsIm5vbWJyZV9jb21wbGV0byIsInRleHQiLCJjZWx1bGFyIiwicGF5bWVudHNSZXBvcnQiLCJ0YWJsZSIsInRhYmxlSFRNTCIsInRvdGFsIiwiYmV0d2VlbiIsImZpcnN0X2RhdGUiLCJzZWNvbmRfZGF0ZSIsImN1cnJlbnRQYWdlIiwiZ2V0UmVwb3J0IiwiZmlsdGVycyIsImN1cnJlbmN5Rm9ybWF0IiwibnVtYmVyIiwiQ3VycmVuY3lGb3JtYXQiLCJmaWxsVGFibGUiLCJjb250ZW50IiwiYWN1bSIsIiR0YWJsZSIsImJvb3RzdHJhcFRhYmxlIiwiZmluZCIsImh0bWwiLCJjc3MiLCJkaXNwbGF5IiwiUmV0aXJlbWVudFJlcG9ydCIsInRpY2tldExpc3RWaWV3IiwiZGF0YVNlYXJjaCIsInN0YXRlIiwidGlja2V0cyIsImhpZGUiLCJpdGVtQ2xpY2tMaXN0ZW5lciIsImJ1c0F2ZXJpYSIsIiRvbiIsInNlYXJjaCIsImZpbGxBdmVyaWFzTGlzdCIsIiRjb250ZW50IiwiaWRfYXZlcmlhIiwidHJpbSIsInRpY2tldFZpZXciLCJnZXRUaWNrZXQiLCJlbXB0eVRpY2tldCIsImlkX2NsaWVudGUiLCJjbGllbnRlIiwiZGlyZWNjaW9uIiwiZGVzY3JpcGNpb24iLCJmZWNoYSIsImVzdGFkbyIsImZlY2hhX3JlcGFyYWNpb24iLCJ0ZWNuaWNvIiwiY29kaWdvIiwiY2xhc3NlcyIsIm1vZGUiLCJuZXdDb21tZW50IiwiZWRpdCIsIm5ld19jb21tZW50IiwiY29tbWVudHMiLCJ0aWNrZXQiLCJjcmVhdGVkIiwicmVtb3ZlQ2xhc3MiLCJxdWl0IiwiY2xvc2VDb21tZW50TW9kZSIsInByaW50Iiwic3RhcnRDb21tZW50IiwiYWRkQ29tbWVudCIsImdldENvbW1lbnRzIiwiX2RlbGV0ZUNvbW1lbnQiLCJjb21tZW50SXRlbSIsInRhcmdldCIsInBhcmVudE5vZGUiLCJpZENvbW1lbnQiLCJ2YWx1ZSIsImNsYXNzTGlzdCIsImFkZCIsInRpdGxlIiwidHlwZSIsInNob3dDYW5jZWxCdXR0b24iLCJjb25maXJtQnV0dG9uVGV4dCIsImNhbmNlbEJ1dHRvblRleHQiLCJkZWxldGVDb21tZW50IiwicmVtb3ZlIiwiaWRfcmVwb3J0ZSIsImVkaXRDb21tZW50IiwidXBkYXRlRGVzY3JpcHRpb24iLCJ1cGRhdGVUaWNrZXQiLCJ1cGRhdGVTdGF0ZSIsIm1vbWVudCIsImZvcm1hdCIsImZpZWxkcyIsImNsb3NlRWRpdE1vZGUiLCJnZXRGaWVsZHMiLCJkZWxldGVUaWNrZXQiLCJpbmZvIiwiZW50ZXJFZGl0TW9kZSIsInNlbGVjdGVkRmllbGRzIiwiZm9yRWFjaCIsImZpZWxkIl0sIm1hcHBpbmdzIjoiQUFnT0EsU0FBQUEsUUFBQUMsR0FDQSxNQUFBLFFBQUFDLEtBQUFDLFVBQUFGLEdDaE9BLElBQUFHLGVBQ0FDLE1BQUEsR0FDQUMsU0FBQSxHQUNBQyxVQUFBLEdBQ0FDLGFBQUEsR0FDQUMsUUFBQSxXQUNBQyxXQUFBLFVBR0FDLG1CQUFBLElBQUFDLEtBQ0FDLEdBQUEsNEJBQ0FDLE1BQ0FDLE9BQUFYLGVBRUFZLFFBQUEsV0FDQUMsS0FBQUMsYUFHQUMsU0FDQUMsYUFBQSxhQUVBRixVQUFBLFdBQ0EsSUFBQUcsRUFDQUMsRUFBQUwsTUFDQUksRUFBQUUsTUFBQUMsSUFBQUMsU0FBQSx3QkFDQUMsS0FBQSxTQUFBQyxHQUNBQSxFQUFBYixLQUFBQyxTQUNBTyxFQUFBUCxPQUFBWSxFQUFBYixLQUFBQyxVQUdBTSxFQUFBTyxNQUFBLFNBQUFDLEdBQ0FDLFFBQUFDLElBQUFGLE1BSUFHLGFBQUEsU0FBQUMsR0FDQSxJQUFBbEIsRUFBQW1CLEVBQUFiLEVBQ0FOLEVBQUFFLEtBQUFGLE9BRUFtQixFQUFBLFFBQUFoQyxLQUFBQyxVQUFBWSxJQUNBTSxFQUFBRSxNQUFBWSxLQUFBVixTQUFBLHVCQUFBUyxJQUNBUixLQUFBLFNBQUFDLEdBQ0FTLGVBQUFULEVBQUFiLEtBQUF1QixXQUVBaEIsRUFBQU8sTUFBQSxTQUFBVSxHQUNBUixRQUFBQyxJQUFBTyxTQU1BQyxl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SCxPQUFBVixPQUNBakgsS0FBQTJILE9BQUFULGlCQUFBLEdBRUFsSCxLQUFBMkgsT0FBQVQsaUJBQUFzQyxTQUFBQyxPQUFBLGVBSUFILGFBQUEsU0FBQUksR0FDQTFKLEtBQUEySixnQkFDQSxJQUFBMUksRUFBQWxDLFFBQUFpQixLQUFBNEosVUFBQUYsSUFDQXBKLE1BQUFZLEtBQUFWLFNBQUEsNEJBQUFTLEdBRUFSLEtBQUEsU0FBQUMsR0FDQWtGLGVBQUFRLFNBQ0FqRixlQUFBVCxFQUFBYixLQUFBdUIsWUFJQXlJLGFBQUEsV0FDQWhKLFFBQUFpSixLQUFBLFlBR0FILGNBQUEsV0FDQTNKLEtBQUFzSCxLQUFBRSxNQUFBLEdBR0F1QyxjQUFBLFdBQ0EvSixLQUFBc0gsS0FBQUUsTUFBQSxHQUdBb0MsVUFBQSxTQUFBRixHQUNBLElBQUFNLEtBQ0EzSixFQUFBTCxLQUtBLE9BSkEwSixFQUFBTyxRQUFBLFNBQUFDLEdBQ0FGLEVBQUFFLEdBQUE3SixFQUFBc0gsT0FBQXVDLElBQ0FsSyxNQUVBZ0siLCJmaWxlIjoiY29tcG9uZW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIiAgdmFyIHRpY2tldExpc3RWaWV3ID0gbmV3IFZ1ZSh7XHJcbiAgICBlbDogJyNhdmVyaWFzLWxpc3QtdmlldycsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgIGRhdGFTZWFyY2g6IHtcclxuICAgICAgICB0ZXh0OiAnJyxcclxuICAgICAgICBzdGF0ZTogJ3BvciByZXBhcmFyJyxcclxuICAgICAgfSxcclxuICAgICAgdGlja2V0czogW10sXHJcbiAgICAgIGhpZGU6IGZhbHNlXHJcbiAgICB9LFxyXG5cclxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgdGhpcy5pdGVtQ2xpY2tMaXN0ZW5lcigpO1xyXG4gICAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgICAgYnVzQXZlcmlhLiRvbigndGlja2V0cy1saXN0ZWQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgc2VsZi5pdGVtQ2xpY2tMaXN0ZW5lcigpXHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgIHNlYXJjaDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBmb3JtID0gJ2RhdGE9JyArIEpTT04uc3RyaW5naWZ5KHRoaXMuZGF0YVNlYXJjaCk7XHJcbiAgICAgICAgdmFyIHNlbmQgPSBheGlvcy5wb3N0KEJBU0VfVVJMICsgJ2FwaS9hdmVyaWFzL3NlYXJjaCcsIGZvcm0pO1xyXG5cclxuICAgICAgICBzZW5kLnRoZW4oZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgdGhpcy5maWxsQXZlcmlhc0xpc3QocmVzLmRhdGEpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIHNlbmQuY2F0Y2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcihyZXMuZGF0YS5tZW5zYWplKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgfSxcclxuXHJcbiAgICAgIGZpbGxBdmVyaWFzTGlzdDogZnVuY3Rpb24gKCRjb250ZW50KSB7XHJcbiAgICAgICAgJCgnI2F2ZXJpYS1pdGVtLWxpc3QnKS5odG1sKCRjb250ZW50KTtcclxuICAgICAgICB0aWNrZXRMaXN0Vmlldy5pdGVtQ2xpY2tMaXN0ZW5lcigpO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgaXRlbUNsaWNrTGlzdGVuZXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcjYXZlcmlhcy1saXN0LXZpZXcgLmF2ZXJpYS1pdGVtJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgdmFyIGlkX2F2ZXJpYSA9ICQodGhpcykuZmluZCgnLmNvZGUnKS50ZXh0KCkudHJpbSgpO1xyXG4gICAgICAgICAgdGlja2V0Vmlldy5nZXRUaWNrZXQoaWRfYXZlcmlhKTtcclxuICAgICAgICB9KVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHZhciBlbXB0eVRpY2tldCA9IHtcclxuICAgIFwiaWRfYXZlcmlhXCI6IFwiXCIsXHJcbiAgICBcImlkX2NsaWVudGVcIjogXCJcIixcclxuICAgIFwiY2xpZW50ZVwiOiBcIlwiLFxyXG4gICAgXCJkaXJlY2Npb25cIjogXCJcIixcclxuICAgIFwiZGVzY3JpcGNpb25cIjogXCJcIixcclxuICAgIFwiY2VsdWxhclwiOiBcIlwiLFxyXG4gICAgXCJmZWNoYVwiOiBcIlwiLFxyXG4gICAgXCJlc3RhZG9cIjogXCJcIixcclxuICAgIFwiZmVjaGFfcmVwYXJhY2lvblwiOiBcIlwiLFxyXG4gICAgXCJ0ZWNuaWNvXCI6IFwiXCIsXHJcbiAgICBcImNvZGlnb1wiOiAnJyxcclxuICB9XHJcbiAgXHJcbiAgdmFyIHRpY2tldFZpZXcgPSBuZXcgVnVlKHtcclxuICAgIGVsOiAnI3RpY2tldC12aWV3JyxcclxuICAgIFxyXG4gICAgZGF0YToge1xyXG4gICAgICBjbGFzc2VzOiB7XHJcbiAgICAgICAgaGlkZTogdHJ1ZVxyXG4gICAgICB9LFxyXG4gICAgICBtb2RlOiB7XHJcbiAgICAgICAgbmV3Q29tbWVudDogZmFsc2UsXHJcbiAgICAgICAgZWRpdDogZmFsc2UsXHJcbiAgICAgIH0sXHJcbiAgICAgIG5ld19jb21tZW50OiAnJyxcclxuICAgICAgY29tbWVudHM6IFtdLFxyXG4gICAgICB0aWNrZXQ6IGVtcHR5VGlja2V0XHJcbiAgICB9LFxyXG4gICAgY3JlYXRlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAkKCcjdGlja2V0LXZpZXcnKS5yZW1vdmVDbGFzcygnaW52aXNpYmxlJylcclxuICAgIH0sXHJcblxyXG4gICAgbWV0aG9kczoge1xyXG4gICAgICBnZXRUaWNrZXQ6IGZ1bmN0aW9uIChpZF9hdmVyaWEpIHtcclxuICAgICAgICB2YXIgZm9ybSA9ICdkYXRhPScgKyBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICBpZF9hdmVyaWE6IGlkX2F2ZXJpYVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdmFyIHNlbmQgPSBheGlvcy5wb3N0KEJBU0VfVVJMICsgJ2FwaS9hdmVyaWFzL2dldF9hdmVyaWEnLCBmb3JtKTtcclxuICAgICAgICBcclxuICAgICAgICBzZW5kLnRoZW4oZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgdmFyIGRhdGEgPSByZXMuZGF0YTtcclxuICAgICAgICAgIHRpY2tldFZpZXcuY2xhc3Nlcy5oaWRlID0gZmFsc2U7XHJcbiAgICAgICAgICB0aWNrZXRMaXN0Vmlldy5oaWRlID0gdHJ1ZTtcclxuICAgICAgICAgIHRpY2tldFZpZXcudGlja2V0ID0gZGF0YS50aWNrZXQ7XHJcbiAgICAgICAgICB0aWNrZXRWaWV3LmNvbW1lbnRzID0gZGF0YS5jb21tZW50cztcclxuICAgICAgICB9KVxyXG4gICAgICB9LFxyXG5cclxuICAgICAgcXVpdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMudGlja2V0ID0gZW1wdHlUaWNrZXQ7XHJcbiAgICAgICAgdGhpcy5jb21tZW50cyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jbGFzc2VzLmhpZGUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuY2xvc2VDb21tZW50TW9kZSgpO1xyXG4gICAgICAgIHRpY2tldExpc3RWaWV3LmhpZGUgPSBmYWxzZTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIHByaW50OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcHJpbnQoKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIHN0YXJ0Q29tbWVudDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMubW9kZS5uZXdDb21tZW50ID0gdHJ1ZTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIGFkZENvbW1lbnQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZm9ybSA9IGdldEZvcm0oe2lkX2F2ZXJpYTogdGhpcy50aWNrZXQuaWRfYXZlcmlhLCBkZXNjcmlwY2lvbjogdGhpcy5uZXdfY29tbWVudH0pO1xyXG4gICAgICAgIHZhciBzZW5kID0gYXhpb3MucG9zdChCQVNFX1VSTCArICdhcGkvYXZlcmlhcy9hZGRfY29tbWVudCcsZm9ybSk7XHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHNlbmQudGhlbiggZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgc2VsZi5nZXRDb21tZW50cygpO1xyXG4gICAgICAgICAgc2VsZi5jbG9zZUNvbW1lbnRNb2RlKClcclxuICAgICAgICAgIGRpc3BsYXlNZXNzYWdlKHJlcy5kYXRhLm1lbnNhamUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgX2RlbGV0ZUNvbW1lbnQ6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgdmFyIGNvbW1lbnRJdGVtID0gZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlXHJcbiAgICAgICAgdmFyIGlkQ29tbWVudCA9IGUudGFyZ2V0LnBhcmVudE5vZGUuYXR0cmlidXRlc1snZGF0YS1pZCddLnZhbHVlXHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIGNvbW1lbnRJdGVtLmNsYXNzTGlzdC5hZGQoJ3RvLWRlbGV0ZScpO1xyXG5cclxuICAgICAgICBzd2FsKHtcclxuICAgICAgICAgIHRpdGxlOiAnRXN0w6EgU2VndXJvPycsXHJcbiAgICAgICAgICB0ZXh0OiBcIlNlZ3VybyBkZSBxdWUgZWxpbWluYXIgZXN0ZSByZXBvcnRlP1wiLFxyXG4gICAgICAgICAgdHlwZTogJ3dhcm5pbmcnLFxyXG4gICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSxcclxuICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAnRWxpbWluYXInLFxyXG4gICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ0NhbmNlbGFyJ1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24oKXtcclxuICAgICAgICAgIHNlbGYuZGVsZXRlQ29tbWVudChpZENvbW1lbnQpO1xyXG4gICAgICAgICAgY29tbWVudEl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgndG8tZGVsZXRlJylcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBjb21tZW50SXRlbS5jbGFzc0xpc3QucmVtb3ZlKCd0by1kZWxldGUnKVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH0sXHJcblxyXG4gICAgICBkZWxldGVDb21tZW50OiBmdW5jdGlvbiAoaWRDb21tZW50KXtcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgdmFyIGZvcm0gPSBnZXRGb3JtKHsgaWRfcmVwb3J0ZTogaWRDb21tZW50fSk7XHJcbiAgICAgICAgdmFyIHNlbmQgPSBheGlvcy5wb3N0KEJBU0VfVVJMICsgJ2FwaS9hdmVyaWFzL2RlbGV0ZV9jb21tZW50Jyxmb3JtKTtcclxuXHJcbiAgICAgICAgc2VuZC50aGVuKCBmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICBzZWxmLmdldENvbW1lbnRzKCk7XHJcbiAgICAgICAgICBkaXNwbGF5TWVzc2FnZShyZXMuZGF0YS5tZW5zYWplKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIGVkaXRDb21tZW50OiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICB9LFxyXG4gICAgICBcclxuICAgICAgY2xvc2VDb21tZW50TW9kZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMubW9kZS5uZXdDb21tZW50ID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5uZXdfY29tbWVudCA9ICcnO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgZ2V0Q29tbWVudHM6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgZm9ybSA9IGdldEZvcm0oe2lkX2F2ZXJpYTogdGhpcy50aWNrZXQuaWRfYXZlcmlhfSk7XHJcbiAgICAgICAgdmFyIHNlbmQgPSBheGlvcy5wb3N0KEJBU0VfVVJMICsgJ2FwaS9hdmVyaWFzL2dldF9jb21tZW50cycsZm9ybSk7XHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzXHJcbiAgICAgICAgc2VuZC50aGVuKCBmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICBzZWxmLmNvbW1lbnRzID0gcmVzLmRhdGEuY29tbWVudHM7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0sXHJcblxyXG4gICAgICB1cGRhdGVEZXNjcmlwdGlvbjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMudXBkYXRlVGlja2V0KFsnaWRfYXZlcmlhJywnZGVzY3JpcGNpb24nLCd0ZWNuaWNvJywnZXN0YWRvJywnZmVjaGFfcmVwYXJhY2lvbiddKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIHVwZGF0ZVN0YXRlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudGlja2V0LmVzdGFkbyA9PSAncG9yIHJlcGFyYXInKSB7XHJcbiAgICAgICAgICB0aGlzLnRpY2tldC5mZWNoYV9yZXBhcmFjaW9uID0gJydcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy50aWNrZXQuZmVjaGFfcmVwYXJhY2lvbiA9IG1vbWVudCgpLmZvcm1hdCgnWVlZWS1NTS1ERCcpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSxcclxuXHJcbiAgICAgIHVwZGF0ZVRpY2tldDogZnVuY3Rpb24gKGZpZWxkcykge1xyXG4gICAgICAgIHRoaXMuY2xvc2VFZGl0TW9kZSgpO1xyXG4gICAgICAgIHZhciBmb3JtID0gZ2V0Rm9ybSh0aGlzLmdldEZpZWxkcyhmaWVsZHMpKTtcclxuICAgICAgICB2YXIgc2VuZCA9IGF4aW9zLnBvc3QoQkFTRV9VUkwgKyAnYXBpL2F2ZXJpYXMvdXBkYXRlX2F2ZXJpYScsZm9ybSk7XHJcblxyXG4gICAgICAgIHNlbmQudGhlbiggZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgdGlja2V0TGlzdFZpZXcuc2VhcmNoKCk7XHJcbiAgICAgICAgICBkaXNwbGF5TWVzc2FnZShyZXMuZGF0YS5tZW5zYWplKVxyXG4gICAgICAgIH0pXHJcbiAgICAgIH0sXHJcblxyXG4gICAgICBkZWxldGVUaWNrZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zb2xlLmluZm8oJ2RlbGV0ZWQnKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIGNsb3NlRWRpdE1vZGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0aGlzLm1vZGUuZWRpdCA9IGZhbHNlO1xyXG4gICAgICB9LFxyXG5cclxuICAgICAgZW50ZXJFZGl0TW9kZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMubW9kZS5lZGl0ID0gdHJ1ZTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIGdldEZpZWxkczogZnVuY3Rpb24gKGZpZWxkcykge1xyXG4gICAgICAgIHZhciBzZWxlY3RlZEZpZWxkcyA9IHt9O1xyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICBmaWVsZHMuZm9yRWFjaChmdW5jdGlvbihmaWVsZCkge1xyXG4gICAgICAgICAgc2VsZWN0ZWRGaWVsZHNbZmllbGRdID0gc2VsZi50aWNrZXRbZmllbGRdXHJcbiAgICAgICAgfSwgdGhpcyk7XHJcblxyXG4gICAgICAgIHJldHVybiBzZWxlY3RlZEZpZWxkcztcclxuICAgICAgfVxyXG5cclxuICAgIH1cclxuICB9KVxyXG5cclxuICBmdW5jdGlvbiBnZXRGb3JtKG9iamVjdCl7XHJcbiAgICByZXR1cm4gXCJkYXRhPVwiICsgSlNPTi5zdHJpbmdpZnkob2JqZWN0KTtcclxuICB9XHJcbiIsIlxyXG52YXIgY29uZmlnTWVzc2FnZSA9IHtcclxuICBlbWFpbDogJycsXHJcbiAgcGFzc3dvcmQ6ICcnLFxyXG4gIGRldmljZV9pZDogJycsXHJcbiAgY291bnRyeV9jb2RlOiAnJyxcclxuICBzZW5kX2F0OiAnMSBzZWNvbmQnLFxyXG4gIGV4cGlyZXNfYXQ6ICcxIGhvdXInXHJcbn1cclxuXHJcbnZhciBjb25maWdNZXNzYWdlc0Zvcm0gPSBuZXcgVnVlKHtcclxuICBlbDogJyNtZXNzYWdlLXNldHRpbmdzLXNlY3Rpb24nLFxyXG4gIGRhdGE6IHtcclxuICAgIGNvbmZpZzogY29uZmlnTWVzc2FnZVxyXG4gIH0sXHJcbiAgbW91bnRlZDogZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy5nZXRDb25maWcoKVxyXG4gIH0sXHJcblxyXG4gIG1ldGhvZHM6IHtcclxuICAgIGNvbmZpcm1QaG9uZTogZnVuY3Rpb24gKCkge30sXHJcblxyXG4gICAgZ2V0Q29uZmlnOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHZhciBzZW5kXHJcbiAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgc2VuZCA9IGF4aW9zLmdldChCQVNFX1VSTCArICdtZXNzYWdlcy9nZXRfY29uZmlnJylcclxuICAgICAgc2VuZC50aGVuKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICBpZihyZXMuZGF0YS5jb25maWcpe1xyXG4gICAgICAgICAgc2VsZi5jb25maWcgPSByZXMuZGF0YS5jb25maWdcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICAgIHNlbmQuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXHJcbiAgICAgIH0pXHJcbiAgICB9LFxyXG5cclxuICAgIHNhdmVTZXR0aW5nczogZnVuY3Rpb24gKGUpIHtcclxuICAgICAgdmFyIGNvbmZpZywgZm9ybSwgc2VuZFxyXG4gICAgICBjb25maWcgPSB0aGlzLmNvbmZpZ1xyXG5cclxuICAgICAgZm9ybSA9ICdkYXRhPScgKyBKU09OLnN0cmluZ2lmeShjb25maWcpXHJcbiAgICAgIHNlbmQgPSBheGlvcy5wb3N0KEJBU0VfVVJMICsgJ21lc3NhZ2VzL3NhdmVfY29uZmlnJywgZm9ybSlcclxuICAgICAgc2VuZC50aGVuKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICBkaXNwbGF5TWVzc2FnZShyZXMuZGF0YS5tZW5zYWplKVxyXG4gICAgICB9KVxyXG4gICAgICBzZW5kLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnIpXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG59KVxyXG5cclxudmFyIHNlbmRNZXNzYWdlQXBwID0gbmV3IFZ1ZSh7XHJcbiAgZWw6ICcjc2VuZC1tZXNzYWdlLW1vZGFsJyxcclxuXHJcbiAgZGF0YToge1xyXG4gICAgaGlkZV9jbGllbnRzOiB0cnVlLFxyXG4gICAgaGlkZV9udW1iZXJzOiB0cnVlLFxyXG5cclxuICAgIG1lc3NhZ2VfZGF0YToge1xyXG4gICAgICB0aXBvOiAnJyxcclxuICAgICAgY2xpZW50ZXM6ICcnLFxyXG4gICAgICBudW1lcm9zOiAnJyxcclxuICAgICAgbWVuc2FqZTogJydcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7XHJcbiAgICB0aGlzLmluaXRTZWxlY3QyKClcclxuICB9LFxyXG5cclxuICBjb21wdXRlZDoge1xyXG4gICAgbGV0dGVyc19jb3VudDogZnVuY3Rpb24gKCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5tZXNzYWdlX2RhdGEubWVuc2FqZS5sZW5ndGhcclxuICAgIH1cclxuICB9LFxyXG5cclxuICBtZXRob2RzOiB7XHJcbiAgICBzZW5kTWVzc2FnZTogZnVuY3Rpb24gKCkge1xyXG4gICAgICB2YXIgZm9ybSwgc2VuZFxyXG5cclxuICAgICAgaWYgKCFpc0VtcHR5KFt0aGlzLm1lc3NhZ2VfZGF0YS50aXBvLCB0aGlzLm1lc3NhZ2VfZGF0YS5tZW5zYWplXSkpIHtcclxuICAgICAgICBmb3JtID0gJ2RhdGE9JyArIEpTT04uc3RyaW5naWZ5KHRoaXMubWVzc2FnZV9kYXRhKVxyXG4gICAgICAgIHNlbmQgPSBheGlvcy5wb3N0KEJBU0VfVVJMICsgJ21lc3NhZ2VzL3NlbmRfbWVzc2FnZScsIGZvcm0pXHJcbiAgICAgICAgc2VuZC50aGVuKGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgIGRpc3BsYXlNZXNzYWdlKHJlcy5kYXRhLm1lbnNhamUpXHJcbiAgICAgICAgfSlcclxuICAgICAgICBzZW5kLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKGVycilcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzd2FsKCdDYW1wb3MgUmVxdWVyaWRvcycsICdQb3IgZmF2b3Igc2VsZWNjaW9uZXMgZWwgdGlwbyBkZSBtZW5zYWplIHkgZXNjcmliYSBzdSBtZW5zYWplJylcclxuICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBpbml0U2VsZWN0MjogZnVuY3Rpb24gKCkge1xyXG4gICAgICB2YXIgc2VsZiA9IHRoaXNcclxuICAgICAgdmFyIG9wdGlvbnMgPSB7XHJcbiAgICAgICAgZHJvcGRvd25QYXJlbnQ6ICQoJyNzZW5kLW1lc3NhZ2UtbW9kYWwnKVxyXG4gICAgICB9XHJcblxyXG4gICAgICB2YXIgc2VsZWN0TWVzc2FnZVR5cGUgPSAkKCcjbWVzc2FnZS10eXBlJylcclxuICAgICAgc2VsZWN0TWVzc2FnZVR5cGUuc2VsZWN0MihvcHRpb25zKVxyXG4gICAgICB2YXIgc2VsZWN0Q2xpZW50c0Zvck1lc3NhZ2UgPSAkKCcjY2xpZW50cy1mb3ItbWVzc2FnZScpLnNlbGVjdDIoe1xyXG4gICAgICAgIGRyb3Bkb3duUGFyZW50OiAkKCcjc2VuZC1tZXNzYWdlLW1vZGFsJyksXHJcbiAgICAgICAgYWpheDoge1xyXG4gICAgICAgICAgdXJsOiBCQVNFX1VSTCArICdtZXNzYWdlcy9zZWFyY2hfY2xpZW50cycsXHJcbiAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxyXG4gICAgICAgICAgZGVsYXk6IDI1MCxcclxuICAgICAgICAgIGRhdGE6IGZ1bmN0aW9uIChwYXJhbXMpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICBxOiBwYXJhbXMudGVybSxcclxuICAgICAgICAgICAgICBwYWdlOiBwYXJhbXMucGFnZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgIHByb2Nlc3NSZXN1bHRzOiBmdW5jdGlvbiAoZGF0YSwgcGFyYW1zKSB7XHJcbiAgICAgICAgICAgIHBhcmFtcy5wYWdlID0gcGFyYW1zLnBhZ2UgfHwgMVxyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgIHJlc3VsdHM6IGRhdGEuaXRlbXMsXHJcbiAgICAgICAgICAgICAgcGFnaW5hdGlvbjoge1xyXG4gICAgICAgICAgICAgICAgbW9yZTogKHBhcmFtcy5wYWdlICogMzApIDwgZGF0YS50b3RhbF9jb3VudFxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGNhY2hlOiB0cnVlXHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG5cclxuICAgICAgdmFyIHNlbGVjdHMgPSB7XHJcbiAgICAgICAgY2xpZW50czogc2VsZWN0Q2xpZW50c0Zvck1lc3NhZ2UsXHJcbiAgICAgICAgbWVzc2FnZVR5cGU6IHNlbGVjdE1lc3NhZ2VUeXBlXHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5zZWxlYzJMaXRlbmVycyhzZWxlY3RzKVxyXG4gICAgfSxcclxuXHJcbiAgICBzZWxlYzJMaXRlbmVyczogZnVuY3Rpb24gKHNlbGVjdHMpIHtcclxuICAgICAgdmFyIHNlbGYgPSB0aGlzXHJcbiAgICAgIHNlbGVjdHMubWVzc2FnZVR5cGUub24oJ3NlbGVjdDI6c2VsZWN0JywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICB2YXIgc2VsZWN0ID0gZS5wYXJhbXMuZGF0YS5lbGVtZW50XHJcbiAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBzZWxlY3QuYXR0cmlidXRlc1xyXG4gICAgICAgIHZhciB0aXBvID0gZS5wYXJhbXMuZGF0YS5pZFxyXG4gICAgICAgIHNlbGYubWVzc2FnZV9kYXRhLnRpcG8gPSB0aXBvXHJcblxyXG4gICAgICAgIGlmICh0aXBvID09ICdvdHJvcycpIHtcclxuICAgICAgICAgIHNlbGYuaGlkZV9jbGllbnRzID0gdHJ1ZVxyXG4gICAgICAgICAgc2VsZi5oaWRlX251bWJlcnMgPSBmYWxzZVxyXG4gICAgICAgIH0gZWxzZSBpZiAodGlwbyA9PSAncGVyc29uYWxpemFkbycpIHtcclxuICAgICAgICAgIHNlbGYuaGlkZV9udW1iZXJzID0gdHJ1ZVxyXG4gICAgICAgICAgc2VsZi5oaWRlX2NsaWVudHMgPSBmYWxzZVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBzZWxmLmhpZGVfY2xpZW50cyA9IHRydWVcclxuICAgICAgICAgIHNlbGYuaGlkZV9udW1iZXJzID0gdHJ1ZVxyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuXHJcbiAgICAgIHNlbGVjdHMubWVzc2FnZVR5cGUuc2VsZWN0MigndmFsJywnbW9yYScpO1xyXG5cclxuICAgICAgc2VsZWN0cy5jbGllbnRzLm9uKCdzZWxlY3QyOnNlbGVjdCcsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgdmFyIGNsaWVudGVzID0gc2VsZWN0cy5jbGllbnRzLnNlbGVjdDIoJ2RhdGEnKVxyXG4gICAgICAgIHZhciBpdGVtcyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2xpZW50ZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGl0ZW1zLnB1c2goe1xyXG4gICAgICAgICAgICAnbm9tYnJlX2NvbXBsZXRvJzogY2xpZW50ZXNbaV0udGV4dCxcclxuICAgICAgICAgICAgJ2NlbHVsYXInOiBjbGllbnRlc1tpXS5pZFxyXG4gICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgc2VsZi5tZXNzYWdlX2RhdGEuY2xpZW50ZXMgPSBpdGVtc1xyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gIH1cclxufSkiLCJ2YXIgcGF5bWVudHNSZXBvcnQgPSBuZXcgVnVlKHtcclxuICBlbDogJyNyZWNpYm9zJyxcclxuICBkYXRhOiB7XHJcbiAgIHRhYmxlOiAnJyxcclxuICAgdGFibGVIVE1MOiAnJyxcclxuICAgdG90YWw6ICcnLFxyXG4gICBiZXR3ZWVuOiB7XHJcbiAgICAgZmlyc3RfZGF0ZTogJycsXHJcbiAgICAgc2Vjb25kX2RhdGU6ICcnLFxyXG4gICAgIHRleHQ6ICcnXHJcbiAgIH1cclxuICB9LFxyXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmIChjdXJyZW50UGFnZSA9PSAnbm90aWZpY2FjaW9uZXMnKSB7XHJcbiAgICAgIHRoaXMuZ2V0UmVwb3J0KCk7XHJcbiAgICB9XHJcbiAgfSxcclxuICBmaWx0ZXJzOiB7XHJcbiAgICBjdXJyZW5jeUZvcm1hdDogZnVuY3Rpb24obnVtYmVyKXtcclxuICAgICAgcmV0dXJuIFwiUkQkIFwiKyBDdXJyZW5jeUZvcm1hdChudW1iZXIpO1xyXG4gICAgfSxcclxuICB9LFxyXG5cclxuICBtZXRob2RzOiB7XHJcbiAgICBnZXRSZXBvcnQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICB2YXIgZm9ybSA9ICdkYXRhPScgKyBKU09OLnN0cmluZ2lmeSh0aGlzLmJldHdlZW4pXHJcbiAgICAgIGF4aW9zLnBvc3QoQkFTRV9VUkwgKyAncGF5bWVudC9nZXRfcmVjZWlwdHMvJywgZm9ybSlcclxuICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgIHNlbGYuZmlsbFRhYmxlKHJlcy5kYXRhLmNvbnRlbnQpXHJcbiAgICAgICAgc2VsZi50b3RhbCA9IHJlcy5kYXRhLmFjdW07XHJcbiAgICAgIH0pXHJcbiAgICB9LFxyXG5cclxuICAgIGZpbGxUYWJsZTogZnVuY3Rpb24oY29udGVudCkge1xyXG4gICAgICB2YXIgJHRhYmxlID0gJCgnI3JlY2VpcHRzLXRhYmxlJylcclxuICAgICAgJHRhYmxlLmJvb3RzdHJhcFRhYmxlKCdkZXN0cm95Jyk7XHJcbiAgICAgICR0YWJsZS5maW5kKCd0Ym9keScpLmh0bWwoY29udGVudCk7XHJcbiAgICAgICR0YWJsZS5ib290c3RyYXBUYWJsZSgpO1xyXG4gICAgICAkdGFibGUuZmluZCgndGJvZHknKS5jc3Moe2Rpc3BsYXk6XCJ0YWJsZS1yb3ctZ3JvdXBcIn0pO1xyXG4gICAgfVxyXG4gIH1cclxufSkiLCJ2YXIgUmV0aXJlbWVudFJlcG9ydCA9IG5ldyBWdWUoe1xyXG4gIGVsOiAnI3JldGlyb3MnLFxyXG4gIGRhdGE6IHtcclxuICAgdGFibGU6ICcnLFxyXG4gICB0YWJsZUhUTUw6ICcnLFxyXG4gICBiZXR3ZWVuOiB7XHJcbiAgICAgZmlyc3RfZGF0ZTogJycsXHJcbiAgICAgc2Vjb25kX2RhdGU6ICcnXHJcbiAgIH1cclxuICB9LFxyXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmIChjdXJyZW50UGFnZSA9PSAnbm90aWZpY2FjaW9uZXMnKSB7XHJcbiAgICAgIHRoaXMuZ2V0UmVwb3J0KCk7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgbWV0aG9kczoge1xyXG4gICAgZ2V0UmVwb3J0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgdmFyIGZvcm0gPSAnZGF0YT0nICsgSlNPTi5zdHJpbmdpZnkodGhpcy5iZXR3ZWVuKVxyXG4gICAgICBheGlvcy5wb3N0KEJBU0VfVVJMICsgJ2NvbnRyYWN0L2dldENhbmNlbGF0aW9ucy8nLCBmb3JtKVxyXG4gICAgICAudGhlbihmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgc2VsZi5maWxsVGFibGUocmVzLmRhdGEuY29udGVudClcclxuICAgICAgfSlcclxuICAgIH0sXHJcblxyXG4gICAgZmlsbFRhYmxlOiBmdW5jdGlvbihjb250ZW50KSB7XHJcbiAgICAgIHZhciAkdGFibGUgPSAkKCcjY2FuY2VsYXRpb24tdGFibGUnKVxyXG4gICAgICAkdGFibGUuYm9vdHN0cmFwVGFibGUoJ2Rlc3Ryb3knKTtcclxuICAgICAgJHRhYmxlLmZpbmQoJ3Rib2R5JykuaHRtbChjb250ZW50KTtcclxuICAgICAgJHRhYmxlLmJvb3RzdHJhcFRhYmxlKCk7XHJcbiAgICAgICR0YWJsZS5maW5kKCd0Ym9keScpLmNzcyh7ZGlzcGxheTpcInRhYmxlLXJvdy1ncm91cFwifSk7XHJcbiAgICB9XHJcbiAgfVxyXG59KSJdfQ==
