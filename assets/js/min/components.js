function fillBSTable(e,t){var a=$(e);a.bootstrapTable("destroy"),a.find("tbody").html(t),a.bootstrapTable(),$(".pull-right.search").addClass("hide"),a.find("tbody").css({display:"table-row-group"}),a.addClass("innertable")}function filterBSTable(e,t){$(e).bootstrapTable("filterBy",{estado:t})}function isCurrentPage(e){return getCurrentPage()==e}function getCurrentPage(){var e=$("title").text().split(" ");return e=e[4].toLowerCase().trim()}function cierreCajaFunctions(){function e(){return moment().format("YYYY-MM-DD")}var t={total1:0,total5:0,total10:0,total20:0,total25:0,total50:0,total100:0,total200:0,total500:0,total1000:0,total2000:0},a=[{fecha:e(),descripcion:"hola",monto:2e3,id_gasto:1}],o=$("#autor-cierre").text().trim(),s=new Vue({el:"#app-cierre",data:{isHide:!1,fecha:e(),data_cierre:{autor:o,pagos_facturas:0,pagos_extras:0,pagos_efectivo:0,pagos_banco:0,total_ingresos:0,efectivo_caja:0,total_descuadre:0,total_gastos:0,banco:0},conteo:t,suma:0,gasto:{fecha:"",descripcion:"",monto:""},gastos:a},mounted:function(){this.getGastos(),this.setIngresos()},created:function(){$(".will-load").css({visibility:"visible"})},filters:{currencyFormat:function(e){return CurrencyFormat(e)}},methods:{changeTotal:function(e){var a=e.srcElement.attributes["data-unit"].value,o=e.srcElement.value;t["total"+a]=o*a*1},addGasto:function(t){var a=this.gasto;a.fecha=e(),form="data="+JSON.stringify(a);var o=axios.post(BASE_URL+"caja/add_gasto",form);o.then(function(e){var t=e.data;displayMessage(t.mensaje),s.fillGastos(t.gastos,"normal"),s.setGastoTotal(t.total_gastos)}),o.catch(function(){console.log(error)})},fillGastos:function(e,t){"group"==t?null!=e||e.length>0?s.gastos=e:s.gastos=[]:s.gastos.push(JSON.parse(e)[0])},setGastoTotal:function(e){this.data_cierre.total_gastos=e},getGasto:function(e){var t=this.gasto;form="data="+JSON.stringify(t),connectAndSend("caja/get_gasto",!1,null,s.fillGastos,form,null,null)},deleteGasto:function(t){var a=t.target;"i"==a.localname&&(a=a.parentElement);var o=a.attributes["data-id"].value;swal({title:"Está Seguro?",text:"Seguro de que quiere eliminar este gasto?",type:"warning",showCancelButton:!0,confirmButtonText:"Estoy Seguro!",cancelButtonText:"Cancelar"}).then(function(){form="data="+JSON.stringify({id:o,fecha:e()});var t=axios.post(BASE_URL+"caja/delete_gasto",form);t.then(function(e){var t=e.data;displayMessage(t.mensaje),s.fillGastos(t.gastos,"group"),s.setGastoTotal(t.total_gastos)}),t.catch(function(e){})})},getGastos:function(){var t={fecha:e()};form="data="+JSON.stringify(t);var a=axios.post(BASE_URL+"caja/get_gastos",form);a.then(function(e){var t=e.data;displayMessage(t.mensaje),s.fillGastos(t.gastos,"group"),s.setGastoTotal(t.total_gastos)}),a.catch(function(){console.log(error)})},setIngresos:function(){var t="data="+JSON.stringify({fecha:e()}),a=this.data_cierre,o=axios.post(BASE_URL+"caja/get_ingresos",t);o.then(function(e){var t=e.data;a.pagos_facturas=t.pagos_facturas,a.pagos_extras=t.pagos_extras,a.pagos_efectivo=t.pagos_efectivo,a.pagos_banco=t.pagos_banco,a.total_ingresos=parseFloat(t.pagos_facturas)+parseFloat(a.pagos_extras),a.total_descuadre=-a.pagos_efectivo+a.efectivo_caja}),o.catch(function(){console.log(error)})},cerrarCaja:function(){var e=this,t=this.data_cierre;window.cierre=t,0!=t.total_descuadre?swal({title:"Está Seguro?",text:"Hay un descuadre en la caja, quiere hacer el cierre de todos modos?",type:"warning",showCancelButton:!0,confirmButtonText:"Si",cancelButtonText:"No"}).then(function(){e.cerrar(t)}):e.cerrar(t)},cerrar:function(t){t.fecha=e(),form="data="+JSON.stringify(t);var a=axios.post(BASE_URL+"caja/add_cierre",form);a.then(function(e){var a=e.data;displayMessage(a.mensaje),self.isHide=!0,appSummaryView.isHide=!1,appSummaryView.cierre=t,$("#app-cierre").addClass("hide"),$(".top-nav").addClass("hide"),$("#print-view").css({visibility:"visible"})}),a.catch(function(){console.log(error)})}},computed:{getTotal:function(e){var a=t,o=this.data_cierre,s=function(e){for(var t=0,a=0;a<e.length;a++)t+=parseFloat(e[a]);return t}([a.total1,a.total5,a.total10,a.total20,a.total25,a.total50,a.total100,a.total200,a.total500,a.total1000,a.total2000]);return this.suma=s,o.efectivo_caja=s.toFixed(2),o.total_descuadre=parseFloat(-o.pagos_efectivo)+parseFloat(o.efectivo_caja),o.banco=parseFloat(o.pagos_banco)+parseFloat(o.pagos_efectivo)-parseFloat(o.total_gastos)+parseFloat(o.total_descuadre),this.suma},decimals:function(){["pagos_facturas","pagos_extra","pagos_efectivo","pagos_banco","total_ingresos","efectivo_caja","total_descuadre","total_gasto","banco"].forEach(function(e){this.data_cierre[e]=this.data_cierre[e].toFixed(2)},this)}}});window.appCierre=s}function fetchReportData(){var e=axios.get(BASE_URL+"caja/get_last_cierre");e.then(function(e){cajaWeekChart(e.data),appVistaDetalle.cierre=e.data.cierre}),e.catch(function(e){});var t="data="+JSON.stringify({year:moment().format("YYYY")});axios.post(BASE_URL+"caja/get_year_info",t).then(function(e){yearChart(e.data.gastos,e.data.ganancias)})}function cajaWeekChart(e){var t=$("#ganancias-chart"),a={type:"bar",data:{labels:e.labels,datasets:[{label:"Valores",data:e.values,backgroundColor:[colors.lightBlue6,colors.lightBlue6,colors.blue7,window.chartColors.blue,window.chartColors.green,colors.blueGreen,window.chartColors.red,window.chartColors.red,window.chartColors.blue]}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{yAxes:[{ticks:{callback:function(e,t,a){return""!=e&&null!=e||(e=0),"RD$ "+CurrencyFormat(e)}}}],xAxes:[{ticks:{callback:function(e,t,a){return e.replace(/_/g," ")}}}]},tooltips:{callbacks:{label:function(e,t){return"RD$ "+CurrencyFormat(e.yLabel)}}},title:{display:!0,text:"Datos del ultimo cierre. hecho por "+e.autor+" el dia "+e.fecha}}};new Chart(t,a)}function yearChart(e,t){var a=$("#ganancias-mes-chart"),o={labels:meses,datasets:[{label:"Gastos",backgroundColor:window.chartColors.red,borderColor:window.chartColors.red,data:e,fill:!1},{label:"Banco(Ganancias)",fill:!1,backgroundColor:window.chartColors.blue,borderColor:window.chartColors.blue,data:t}]},s={responsive:!0,maintainAspectRatio:!1,scales:{yAxes:[{ticks:{callback:function(e,t,a){return"RD$ "+CurrencyFormat(e)}}}]},tooltips:{callbacks:{label:function(e,t){return"RD$ "+CurrencyFormat(e.yLabel)}}},title:{display:!0,text:"Registros de cierre Este ultimo año"}};new Chart(a,{type:"line",data:o,options:s})}function getForm(e){return"data="+JSON.stringify(e)}var acountView=new Vue({el:"#acount-section",data:{user:{user_id:"",nickname:"",name:"",lastname:"",dni:"",type:"",email:""},isChangePassword:!1,currentPassword:"",newPassword:"",passwordConfirm:"",states:{"has-error":!1,"has-success":!1,button:!0}},mounted:function(){"cuenta"==currentPage&&this.getUser()},methods:{getUser:function(){var e=this,t=$("#acount-user-id").val(),a="data="+JSON.stringify({user_id:t});axios.post(BASE_URL+"user/get_user",a).then(function(t){var a=t.data.user;a.fullname=a.name+" "+a.lastname,e.user=a})},updateInfo:function(){this.isChangePassword?this.changePassword():this.changeEmail()},changePassword:function(){if(this.states["has-success"]){var e="data="+JSON.stringify({user_id:this.user.user_id,current_password:this.currentPassword,new_password:this.newPassword});axios.post(BASE_URL+"user/update_password",e).then(function(e){displayMessage(e.data.message),window.location=BASE_URL+"app/logut"})}else displayMessage("Las contraseñas no conciden")},changeEmail:function(){var e=this.user;swal({title:"Contraseña",input:"password"}).then(function(t){var a="data="+JSON.stringify({user_id:e.user_id,password:t,field:"email",value:e.email});axios.post(BASE_URL+"user/update_field",a).then(function(e){displayMessage(e.data.message)})})},confirmPasswordServer:function(e){var t="data="+JSON.stringify({user_id:this.user.user_id,current_password:e});return new Promise(function(e,a){axios.post(BASE_URL+"user/confirm_password",t).then(function(t){e(t.data.is_correct)})})},confirmPassword:function(){var e=this;this.confirmPasswordServer(this.currentPassword).then(function(t){e.isChangePassword=t})},checkPassword:function(){this.newPassword==this.passwordConfirm&&this.changePassword?(this.setStates(!0,!1),this.states.button=!0):this.changePassword?(this.setStates(!1,!0),this.states.button=!1):this.setStates(!1,!1)},setStates:function(e,t){this.states["has-success"]=e,this.states["has-error"]=t}}});(isCurrentPage("cierre")||isCurrentPage("cierre2"))&&cierreCajaFunctions(),Vue.component("summary-print-view",{template:'    <div class="print-container">      <div class="__header">      <h2 class="__title t-center"> {{title}}</h2>      </div>      <div class="__body">      <printeable></printeable>      </div>    <div>        ',props:["somevalue"],methods:{goBack:function(){appSummaryView.isHide=!0,window.appCierre.isHide=!1,self.isHide=!0,$(".top-nav").removeClass("hide"),$("#app-cierre").removeClass("hide")}},data:function(){return{back:{link:"somelink",text:"volver a cierre"},foward:{link:BASE_URL+"app/logout",text:"cerrar session"},title:"Resumen de cierre de hoy"}}});var appSummaryView=new Vue({el:"#print-view",data:{isHide:!0,back:{link:"somelink",text:"volver a cierre"},foward:{link:BASE_URL+"app/logout",text:"cerrar session"},cierre:{autor:"",pagos_facturas:0,pagos_extras:0,pagos_efectivo:0,pagos_banco:0,total_ingresos:0,efectivo_caja:0,total_descuadre:0,total_gastos:0,banco:0}},filters:{currencyFormat:function(e){return"RD$ "+CurrencyFormat(e)},spanishDateFormat:function(e){return moment.locale("es-DO"),moment(e).format("dddd DD [de] MMMM [del] YYYY")}},methods:{goBack:function(){appSummaryView.isHide=!0,window.appCierre.isHide=!1,self.isHide=!0,$(".top-nav").removeClass("hide"),$("#app-cierre").removeClass("hide")},print:function(){print()}}}),closeReport=new Vue({el:"#cierres",data:{table:"",tableHTML:"",hasTotals:!1,totals:!1,between:{first_date:"",second_date:"",text:""}},mounted:function(){"informes"==currentPage&&this.getReport()},filters:{currencyFormat:function(e){return"RD$ "+CurrencyFormat(e)}},methods:{getReport:function(){var e=this,t="data="+JSON.stringify(this.between);axios.post(BASE_URL+"caja/get_cierres/true",t).then(function(t){e.fillTable(t.data.content),e.hasTotals=!0,e.totals=t.data.acum})},fillTable:function(e){fillBSTable("#cierres-table",e)}}}),expensesReport=new Vue({el:"#gastos",data:{table:"",tableHTML:"",total:"",between:{first_date:"",second_date:"",text:""}},mounted:function(){"informes"==currentPage&&this.getReport()},filters:{currencyFormat:function(e){return"RD$ "+CurrencyFormat(e)}},methods:{getReport:function(){var e=this,t="data="+JSON.stringify(this.between);axios.post(BASE_URL+"caja/get_gastos/true",t).then(function(t){e.fillTable(t.data.content),e.total=t.data.acum})},fillTable:function(e){fillBSTable("#gastos-table",e)}}}),listExtras="",reciboReset={id_pago:0,id_contrato:0,id_servicio:0,id_empleado:0,fecha_pago:"",concepto:"extra",detalles_extra:"",cuota:"",mora:"",monto_extra:"",total:"",estado:"",fecha_limite:"",complete_date:"",descuento:"",razon_descuento:"",deuda:"",abono_a:"",tipo:"",generado:""},appPagoExtra=new Vue({el:"#app-pago-extra",data:{recibo:{id_pago:0,id_contrato:0,id_servicio:0,id_empleado:0,fecha_pago:"dd/mm/yyyy",concepto:"extra",detalles_extra:"",cuota:"",mora:"",monto_extra:"",total:"",estado:"",fecha_limite:"",complete_date:"",descuento:"",razon_descuento:"",deuda:"",abono_a:"",tipo:"",generado:""},visible:!1,pagado:!1,extra:{controls:"",id_extra:"",id_servicio:"",checkbox:"",fecha:"",concepto:"",ultimo_pago:"",monto_pagado:"",monto_total:"",estado:""},firstControls:{hide:!1}},filters:{},computed:{url_recibo:function(){return BASE_URL+"process/getrecibo/"+this.recibo.id_pago},hide_recibo:function(){return"pagado"!=this.recibo.estado&&(this.hide_recibo=!0)},isPagado:function(){return this.pagado="pagado"==this.recibo.estado,this.pagado}},methods:{goBack:function(){extraTable.el.parents(".bootstrap-table").removeClass("hide"),this.visible=!1,this.extra={concepto:""},extraTable.refresh(listExtras)},generatePayment:function(){if(this.pagado||0==this.recibo.id_pago){var e="data="+JSON.stringify(this.extra),t=axios.post(BASE_URL+"extra/generate_extra_payment",e);t.then(function(e){var t=e.data;displayMessage(t.mensaje),selectExtraPayment.html(t.pagos).change()}),t.catch(function(){})}else displayMessage(MESSAGE_INFO+" Debe realizar este pago antes de crear uno nuevo")},getPayment:function(e){var t="data="+JSON.stringify({id_pago:e}),a=this;axios.post(BASE_URL+"extra/get_payment",t).then(function(e){var t=e.data;t.recibo&&(a.recibo=t.recibo)})},applyPayment:function(){0!=this.recibo.id_pago?this.sender("extra/apply_payment"):displayMessage(MESSAGE_INFO+" Debe generar un pago primero")},editPayment:function(){this.sender("extra/edit_payment")},sender:function(e){var t=this,a=this.prepareData(),o=a.info,s=a.data,i="data="+JSON.stringify(s)+"&info="+JSON.stringify(o),n=axios.post(BASE_URL+e,i);n.then(function(e){var a=e.data;listExtras=a.extras,t.getPayments(t.extra.id_extra),displayMessage(a.mensaje)}),n.catch(function(e){console.log(e)})},prepareData:function(e){return{data:{concepto:"extra -",detalles_extra:(e=this.recibo).detalles_extra,fecha_pago:e.fecha_pago,cuota:e.cuota,total:e.cuota,estado:"pagado",tipo:e.tipo,generado:!0},info:{id_extra:e.id_extra,id_pago:e.id_pago}}},getPayments:function(e){var t=this,a="data="+JSON.stringify({id_extra:e});axios.post(BASE_URL+"extra/get_extra_payment_of",a).then(function(e){var a=e.data;a.pagos||(t.recibo=reciboReset),selectExtraPayment.html(a.pagos).change()})},deletePayment:function(){var e=this,t=this.recibo,a={id_extra:t.id_extra,id_pago:t.id_pago},o="data="+JSON.stringify(a),s=axios.post(BASE_URL+"extra/delete_payment",o);s.then(function(t){var a=t.data;displayMessage(a.mensaje),e.getPayments(e.extra.id_extra)}),s.catch(function(e){console.log(e)})}}});bus.$on("row-selected",function(e){extraTable.el.parents(".bootstrap-table").addClass("hide"),appPagoExtra.visible=!0,appPagoExtra.extra=e,listExtras=extraTable.el.find("tbody").html(),appPagoExtra.getPayments(e.id_extra)});var selectExtraPayment=$("#select-extra-payment");selectExtraPayment.on("change",function(){var e=selectExtraPayment.val();appPagoExtra.getPayment(e)});var extraSection=new Vue({el:"#extra-section",data:{content:"",search:{text:"",state:"activo"},totales:{pagado:0,pendiente:0,total_vendido:0},tableId:"#extra-table-full"},mounted:function(){"extras"==currentPage&&this.getData()},filters:{currencyFormat:function(e){return"RD$ "+CurrencyFormat(e)}},methods:{filter:function(e){filterBSTable(this.tableId,this.filterValue)},getData:function(){var e=this,t="data="+JSON.stringify(this.search);axios.post(BASE_URL+"extra/get_all",t).then(function(t){e.fillTable(t.data.content),e.totales=t.data.totales})},fillTable:function(e){fillBSTable("#extra-table-full",e)}}}),configMessage={email:"",password:"",device_id:"",country_code:"",send_at:"1 second",expires_at:"1 hour"},configMessagesForm=new Vue({el:"#message-settings-section",data:{config:configMessage},mounted:function(){"administrador"==currentPage&&this.getConfig()},methods:{confirmPhone:function(){},getConfig:function(){var e,t=this;(e=axios.get(BASE_URL+"messages/get_config")).then(function(e){e.data.config&&(t.config=e.data.config)}),e.catch(function(e){console.log(e)})},saveSettings:function(e){var t,a,o;t=this.config,a="data="+JSON.stringify(t),(o=axios.post(BASE_URL+"messages/save_config",a)).then(function(e){displayMessage(e.data.mensaje)}),o.catch(function(e){console.log(e)})}}}),sendMessageApp=new Vue({el:"#send-message-modal",data:{hide_clients:!0,hide_numbers:!0,message_data:{tipo:"",clientes:"",numeros:"",mensaje:""}},mounted:function(){this.initSelect2()},computed:{letters_count:function(){return this.message_data.mensaje.length}},methods:{sendMessage:function(){var e,t;isEmpty([this.message_data.tipo,this.message_data.mensaje])?swal("Campos Requeridos","Por favor selecciones el tipo de mensaje y escriba su mensaje"):(e="data="+JSON.stringify(this.message_data),(t=axios.post(BASE_URL+"messages/send_message",e)).then(function(e){displayMessage(e.data.mensaje)}),t.catch(function(e){console.log(e)}))},initSelect2:function(){var e={dropdownParent:$("#send-message-modal")},t=$("#message-type");t.select2(e);var a={clients:$("#clients-for-message").select2({dropdownParent:$("#send-message-modal"),ajax:{url:BASE_URL+"messages/search_clients",dataType:"json",delay:250,data:function(e){return{q:e.term,page:e.page}},processResults:function(e,t){return t.page=t.page||1,{results:e.items,pagination:{more:30*t.page<e.total_count}}},cache:!0}}),messageType:t};this.selec2Liteners(a)},selec2Liteners:function(e){var t=this;e.messageType.on("select2:select",function(e){e.params.data.element.attributes;var a=e.params.data.id;t.message_data.tipo=a,"otros"==a?(t.hide_clients=!0,t.hide_numbers=!1):"personalizado"==a?(t.hide_numbers=!0,t.hide_clients=!1):(t.hide_clients=!0,t.hide_numbers=!0)}),e.messageType.select2("val","mora"),e.clients.on("select2:select",function(a){for(var o=e.clients.select2("data"),s=[],i=0;i<o.length;i++)s.push({nombre_completo:o[i].text,celular:o[i].id});t.message_data.clientes=s})}}}),paymentsReport=new Vue({el:"#recibos",data:{table:"",tableHTML:"",total:"",between:{first_date:"",second_date:"",text:""}},mounted:function(){"notificaciones"==currentPage&&this.getReport()},filters:{currencyFormat:function(e){return"RD$ "+CurrencyFormat(e)}},methods:{getReport:function(){var e=this,t="data="+JSON.stringify(this.between);axios.post(BASE_URL+"payment/get_receipts/",t).then(function(t){e.fillTable(t.data.content),e.total=t.data.acum})},fillTable:function(e){var t=$("#receipts-table");t.bootstrapTable("destroy"),t.find("tbody").html(e),t.bootstrapTable(),t.find("tbody").css({display:"table-row-group"})}}});"reportes"==currentPage&&fetchReportData(),window.chartColors={red:"rgb(255, 99, 132)",orange:"rgb(255, 159, 64)",yellow:"rgb(255, 205, 86)",green:"rgb(75, 192, 192)",blue:"rgb(54, 162, 235)",purple:"rgb(153, 102, 255)",grey:"rgb(201, 203, 207)"};var meses=["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],colors={green:"rgba(0,230,118 ,1)",blueGreen:"rgba(29,233,182 ,1)",blue7:"rgba(25,118,210 ,1)",lightBlue6:"rgba(3,155,229 ,1)",red3:"rgba(229,115,115 ,1)",deepOrange4:"rgba(255,112,67 ,1)"},cierre={autor:"",banco:0,dinero_real_en_caja:0,fecha:"",pago_de_facturas:0,pagos_de_extras:0,pagos_en_efectivo:0,pagos_via_banco:0,total_de_ingresos:0,total_descuadre:0},appVistaDetalle=new Vue({el:"#app-vista-detalle",data:{cierre:cierre},filters:{currencyFormat:function(e){return"RD$ "+CurrencyFormat(e)}},methods:{print:function(){print()}}}),RetirementReport=new Vue({el:"#retiros",data:{table:"",tableHTML:"",between:{first_date:"",second_date:""}},mounted:function(){"notificaciones"==currentPage&&this.getReport()},methods:{getReport:function(){var e=this,t="data="+JSON.stringify(this.between);axios.post(BASE_URL+"contract/getCancelations/",t).then(function(t){e.fillTable(t.data.content)})},fillTable:function(e){var t=$("#cancelation-table");t.bootstrapTable("destroy"),t.find("tbody").html(e),t.bootstrapTable(),t.find("tbody").css({display:"table-row-group"})}}}),ticketListView=new Vue({el:"#averias-list-view",data:{dataSearch:{text:"",state:"por reparar"},tickets:[],hide:!1},mounted:function(){this.itemClickListener();var e=this;busAveria.$on("tickets-listed",function(){e.itemClickListener()})},methods:{search:function(){var e="data="+JSON.stringify(this.dataSearch),t=axios.post(BASE_URL+"api/averias/search",e);t.then(function(e){this.fillAveriasList(e.data)}),t.catch(function(){console.error(res.data.mensaje)})},fillAveriasList:function(e){$("#averia-item-list").html(e),ticketListView.itemClickListener()},itemClickListener:function(){$("#averias-list-view .averia-item").on("click",function(){var e=$(this).find(".code").text().trim();ticketView.getTicket(e)})}}}),emptyTicket={id_averia:"",id_cliente:"",cliente:"",direccion:"",descripcion:"",celular:"",fecha:"",estado:"",fecha_reparacion:"",tecnico:"",codigo:""},ticketView=new Vue({el:"#ticket-view",data:{classes:{hide:!0},mode:{newComment:!1,edit:!1},new_comment:"",comments:[],ticket:emptyTicket},created:function(){$("#ticket-view").removeClass("invisible")},methods:{getTicket:function(e){var t="data="+JSON.stringify({id_averia:e});axios.post(BASE_URL+"api/averias/get_averia",t).then(function(e){var t=e.data;ticketView.classes.hide=!1,ticketListView.hide=!0,ticketView.ticket=t.ticket,ticketView.comments=t.comments})},quit:function(){this.ticket=emptyTicket,this.comments=null,this.classes.hide=!0,this.closeCommentMode(),ticketListView.hide=!1},print:function(){print()},startComment:function(){this.mode.newComment=!0},addComment:function(){var e=getForm({id_averia:this.ticket.id_averia,descripcion:this.new_comment}),t=this;axios.post(BASE_URL+"api/averias/add_comment",e).then(function(e){t.getComments(),t.closeCommentMode(),displayMessage(e.data.mensaje)})},_deleteComment:function(e){var t=e.target.parentNode.parentNode,a=e.target.parentNode.attributes["data-id"].value,o=this;t.classList.add("to-delete"),swal({title:"Está Seguro?",text:"Seguro de que eliminar este reporte?",type:"warning",showCancelButton:!0,confirmButtonText:"Eliminar",cancelButtonText:"Cancelar"}).then(function(){o.deleteComment(a),t.classList.remove("to-delete")}).catch(function(){t.classList.remove("to-delete")})},deleteComment:function(e){var t=this,a=getForm({id_reporte:e});axios.post(BASE_URL+"api/averias/delete_comment",a).then(function(e){t.getComments(),displayMessage(e.data.mensaje)})},editComment:function(){},closeCommentMode:function(){this.mode.newComment=!1,this.new_comment=""},getComments:function(){var e=getForm({id_averia:this.ticket.id_averia}),t=this;axios.post(BASE_URL+"api/averias/get_comments",e).then(function(e){t.comments=e.data.comments})},updateDescription:function(){this.updateTicket(["id_averia","descripcion","tecnico","estado","fecha_reparacion"])},updateState:function(){"por reparar"==this.ticket.estado?this.ticket.fecha_reparacion="":this.ticket.fecha_reparacion=moment().format("YYYY-MM-DD")},updateTicket:function(e){this.closeEditMode();var t=getForm(this.getFields(e));axios.post(BASE_URL+"api/averias/update_averia",t).then(function(e){ticketListView.search(),displayMessage(e.data.mensaje)})},deleteTicket:function(){console.info("deleted")},closeEditMode:function(){this.mode.edit=!1},enterEditMode:function(){this.mode.edit=!0},getFields:function(e){var t={},a=this;return e.forEach(function(e){t[e]=a.ticket[e]},this),t}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
