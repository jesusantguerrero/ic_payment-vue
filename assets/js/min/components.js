function fillBSTable(e,t){var i=$(e);i.bootstrapTable("destroy"),i.find("tbody").html(t),i.bootstrapTable(),$(".pull-right.search").addClass("hide"),i.find("tbody").css({display:"table-row-group"}),i.addClass("innertable")}function filterBSTable(e,t){$(e).bootstrapTable("filterBy",{estado:t})}function getForm(e){return"data="+JSON.stringify(e)}var extraSection=new Vue({el:"#extra-section",data:{content:"",filterValue:"",tableId:"#extra-table-full"},mounted:function(){"extras"==currentPage&&this.getData()},methods:{filter:function(e){filterBSTable(this.tableId,this.filterValue)},getData:function(){var e=this;axios.post(BASE_URL+"extra/get_all").then(function(t){e.fillTable(t.data.content)})},fillTable:function(e){fillBSTable("#extra-table-full",e)}}}),configMessage={email:"",password:"",device_id:"",country_code:"",send_at:"1 second",expires_at:"1 hour"},configMessagesForm=new Vue({el:"#message-settings-section",data:{config:configMessage},mounted:function(){this.getConfig()},methods:{confirmPhone:function(){},getConfig:function(){var e,t=this;(e=axios.get(BASE_URL+"messages/get_config")).then(function(e){e.data.config&&(t.config=e.data.config)}),e.catch(function(e){console.log(e)})},saveSettings:function(e){var t,i,a;t=this.config,i="data="+JSON.stringify(t),(a=axios.post(BASE_URL+"messages/save_config",i)).then(function(e){displayMessage(e.data.mensaje)}),a.catch(function(e){console.log(e)})}}}),sendMessageApp=new Vue({el:"#send-message-modal",data:{hide_clients:!0,hide_numbers:!0,message_data:{tipo:"",clientes:"",numeros:"",mensaje:""}},mounted:function(){this.initSelect2()},computed:{letters_count:function(){return this.message_data.mensaje.length}},methods:{sendMessage:function(){var e,t;isEmpty([this.message_data.tipo,this.message_data.mensaje])?swal("Campos Requeridos","Por favor selecciones el tipo de mensaje y escriba su mensaje"):(e="data="+JSON.stringify(this.message_data),(t=axios.post(BASE_URL+"messages/send_message",e)).then(function(e){displayMessage(e.data.mensaje)}),t.catch(function(e){console.log(e)}))},initSelect2:function(){var e={dropdownParent:$("#send-message-modal")},t=$("#message-type");t.select2(e);var i={clients:$("#clients-for-message").select2({dropdownParent:$("#send-message-modal"),ajax:{url:BASE_URL+"messages/search_clients",dataType:"json",delay:250,data:function(e){return{q:e.term,page:e.page}},processResults:function(e,t){return t.page=t.page||1,{results:e.items,pagination:{more:30*t.page<e.total_count}}},cache:!0}}),messageType:t};this.selec2Liteners(i)},selec2Liteners:function(e){var t=this;e.messageType.on("select2:select",function(e){e.params.data.element.attributes;var i=e.params.data.id;t.message_data.tipo=i,"otros"==i?(t.hide_clients=!0,t.hide_numbers=!1):"personalizado"==i?(t.hide_numbers=!0,t.hide_clients=!1):(t.hide_clients=!0,t.hide_numbers=!0)}),e.messageType.select2("val","mora"),e.clients.on("select2:select",function(i){for(var a=e.clients.select2("data"),n=[],s=0;s<a.length;s++)n.push({nombre_completo:a[s].text,celular:a[s].id});t.message_data.clientes=n})}}}),paymentsReport=new Vue({el:"#recibos",data:{table:"",tableHTML:"",total:"",between:{first_date:"",second_date:"",text:""}},mounted:function(){"notificaciones"==currentPage&&this.getReport()},filters:{currencyFormat:function(e){return"RD$ "+CurrencyFormat(e)}},methods:{getReport:function(){var e=this,t="data="+JSON.stringify(this.between);axios.post(BASE_URL+"payment/get_receipts/",t).then(function(t){e.fillTable(t.data.content),e.total=t.data.acum})},fillTable:function(e){var t=$("#receipts-table");t.bootstrapTable("destroy"),t.find("tbody").html(e),t.bootstrapTable(),t.find("tbody").css({display:"table-row-group"})}}}),RetirementReport=new Vue({el:"#retiros",data:{table:"",tableHTML:"",between:{first_date:"",second_date:""}},mounted:function(){"notificaciones"==currentPage&&this.getReport()},methods:{getReport:function(){var e=this,t="data="+JSON.stringify(this.between);axios.post(BASE_URL+"contract/getCancelations/",t).then(function(t){e.fillTable(t.data.content)})},fillTable:function(e){var t=$("#cancelation-table");t.bootstrapTable("destroy"),t.find("tbody").html(e),t.bootstrapTable(),t.find("tbody").css({display:"table-row-group"})}}}),ticketListView=new Vue({el:"#averias-list-view",data:{dataSearch:{text:"",state:"por reparar"},tickets:[],hide:!1},mounted:function(){this.itemClickListener();var e=this;busAveria.$on("tickets-listed",function(){e.itemClickListener()})},methods:{search:function(){var e="data="+JSON.stringify(this.dataSearch),t=axios.post(BASE_URL+"api/averias/search",e);t.then(function(e){this.fillAveriasList(e.data)}),t.catch(function(){console.error(res.data.mensaje)})},fillAveriasList:function(e){$("#averia-item-list").html(e),ticketListView.itemClickListener()},itemClickListener:function(){$("#averias-list-view .averia-item").on("click",function(){var e=$(this).find(".code").text().trim();ticketView.getTicket(e)})}}}),emptyTicket={id_averia:"",id_cliente:"",cliente:"",direccion:"",descripcion:"",celular:"",fecha:"",estado:"",fecha_reparacion:"",tecnico:"",codigo:""},ticketView=new Vue({el:"#ticket-view",data:{classes:{hide:!0},mode:{newComment:!1,edit:!1},new_comment:"",comments:[],ticket:emptyTicket},created:function(){$("#ticket-view").removeClass("invisible")},methods:{getTicket:function(e){var t="data="+JSON.stringify({id_averia:e});axios.post(BASE_URL+"api/averias/get_averia",t).then(function(e){var t=e.data;ticketView.classes.hide=!1,ticketListView.hide=!0,ticketView.ticket=t.ticket,ticketView.comments=t.comments})},quit:function(){this.ticket=emptyTicket,this.comments=null,this.classes.hide=!0,this.closeCommentMode(),ticketListView.hide=!1},print:function(){print()},startComment:function(){this.mode.newComment=!0},addComment:function(){var e=getForm({id_averia:this.ticket.id_averia,descripcion:this.new_comment}),t=this;axios.post(BASE_URL+"api/averias/add_comment",e).then(function(e){t.getComments(),t.closeCommentMode(),displayMessage(e.data.mensaje)})},_deleteComment:function(e){var t=e.target.parentNode.parentNode,i=e.target.parentNode.attributes["data-id"].value,a=this;t.classList.add("to-delete"),swal({title:"EstÃ¡ Seguro?",text:"Seguro de que eliminar este reporte?",type:"warning",showCancelButton:!0,confirmButtonText:"Eliminar",cancelButtonText:"Cancelar"}).then(function(){a.deleteComment(i),t.classList.remove("to-delete")}).catch(function(){t.classList.remove("to-delete")})},deleteComment:function(e){var t=this,i=getForm({id_reporte:e});axios.post(BASE_URL+"api/averias/delete_comment",i).then(function(e){t.getComments(),displayMessage(e.data.mensaje)})},editComment:function(){},closeCommentMode:function(){this.mode.newComment=!1,this.new_comment=""},getComments:function(){var e=getForm({id_averia:this.ticket.id_averia}),t=this;axios.post(BASE_URL+"api/averias/get_comments",e).then(function(e){t.comments=e.data.comments})},updateDescription:function(){this.updateTicket(["id_averia","descripcion","tecnico","estado","fecha_reparacion"])},updateState:function(){"por reparar"==this.ticket.estado?this.ticket.fecha_reparacion="":this.ticket.fecha_reparacion=moment().format("YYYY-MM-DD")},updateTicket:function(e){this.closeEditMode();var t=getForm(this.getFields(e));axios.post(BASE_URL+"api/averias/update_averia",t).then(function(e){ticketListView.search(),displayMessage(e.data.mensaje)})},deleteTicket:function(){console.info("deleted")},closeEditMode:function(){this.mode.edit=!1},enterEditMode:function(){this.mode.edit=!0},getFields:function(e){var t={},i=this;return e.forEach(function(e){t[e]=i.ticket[e]},this),t}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
