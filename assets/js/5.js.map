{"version":3,"sources":["webpack:///assets/js/5.js","webpack:///src/modules/secciones/RouterSection.vue","webpack:///./src/modules/secciones/components/RouterModal.vue","webpack:///src/modules/secciones/components/RouterModal.vue","webpack:///./src/modules/secciones/components/RouterModal.vue?89a4","webpack:///./src/modules/sharedComponents/Progress.js","webpack:///./src/modules/secciones/RouterSection.vue?9147","webpack:///./src/modules/secciones/RouterSection.vue","webpack:///./src/modules/sharedComponents/DataTable.vue","webpack:///src/modules/sharedComponents/DataTable.vue","webpack:///./node_modules/bootstrap-table/dist/bootstrap-table.js","webpack:///./node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP.js","webpack:///./src/modules/sharedComponents/DataTable.vue?0c45"],"names":["webpackJsonp","153","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__components_RouterModal_vue__","__WEBPACK_IMPORTED_MODULE_1__sharedComponents_DataTable_vue__","__WEBPACK_IMPORTED_MODULE_2__sharedComponents_utils__","__WEBPACK_IMPORTED_MODULE_2__sharedComponents_utils___default","n","__WEBPACK_IMPORTED_MODULE_3__sharedComponents_Progress__","__WEBPACK_IMPORTED_MODULE_3__sharedComponents_Progress___default","heavyLoad","a","components","DataTable","RouterModal","mounted","this","getSectionList","spyLeftNavigation","data","title","parentId","toolbar","content","selectedId","modalMode","options","key","text","sections","sector","nombre","codigo_area","tableOptions","pageSize","pageList","states","stateField","search","state","totales","pagado","pendiente","total_vendido","tableId","methods","save","_this","isEmpty","$toasted","error","play","$http","post","getDataForm","then","res","showMessage","message","type","sectorEmpty","$","modal","stop","getIps","window","appBus","$emit","catch","err","_this2","id_section","ips","updateIpState","IP","form","JSON","stringify","send","displayMessage","mensaje","_this3","get","id","updateState","code","_this4","stateChanges","name","args","self","theOptions","map","option","selectState","join","select","$this","row","html","focus","val","on","removeClass","codigo","event","stopImmediatePropagation","computed","reportUrl","baseURL","cols","field","valign","align","sortable","checkbox","class","154","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterModal_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_23e52ed5_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterModal_vue__","normalizeComponent","Component","155","props","Object","String","modalTitle","156","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","tabindex","role","_m","_v","_s","for","directives","rawName","value","expression","placeholder","domProps","input","$event","target","composing","$set","data-dismiss","click","staticRenderFns","aria-label","aria-hidden","esExports","157","exports","_classCallCheck","instance","Constructor","TypeError","defineProperty","_createClass","defineProperties","i","length","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","Progress","arguments","undefined","$heavy","$body","$line","append","css","overflow","display","remove","default","158","href","change","$$selectedVal","Array","filter","call","o","selected","_value","multiple","_l","section","ids","cell-clicked","modal-mode","data-toggle","data-target","82","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterSection_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1988f582_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterSection_vue__","84","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_357e043f_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__","85","_defineProperty","obj","__WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__","endpoint","init","refresh","watch","intialized","table","$filter","activate","listen","page","bootstrapTable","columns","sortOrder","showRefresh","showColumns","showExport","minimumCountColumns","showPaginationSwitch","pagination","idField","showFooter","clickToSelect","singleSelect","striped","fixed","footer","find","addClass","initialized","customSearch","getSelectedRow","emit","getId","pageNumber","e","resize","$inputSearch","parent","filterWord","applyFilter","86","cachedWidth","sprintf","str","flag","replace","arg","getPropertyFromOther","list","from","to","result","each","item","getFieldIndex","index","column","setFieldIndex","j","k","totalCol","colspan","r","rowspan","inArray","fieldIndex","getScrollBarWidth","w1","w2","inner","outer","offsetWidth","clientWidth","calculateObjectValue","defaultValue","func","names","split","f","apply","concat","compareObjects","objectA","objectB","compareLength","objectAProperties","getOwnPropertyNames","objectBProperties","propName","escapeHTML","getRealDataAttr","dataAttr","attr","auxAttr","toLowerCase","getItemField","escape","hasOwnProperty","p","isIEBrowser","navigator","userAgent","indexOf","match","objectKeys","keys","hasDontEnumBug","toString","propertyIsEnumerable","dontEnums","dontEnumsLength","prop","push","BootstrapTable","el","$el","$el_","clone","timeoutId_","timeoutFooter_","DEFAULTS","classes","sortClass","locale","height","undefinedText","sortName","sortStable","totalField","dataField","method","url","ajax","cache","contentType","dataType","ajaxOptions","queryParams","params","queryParamsType","responseHandler","onlyInfoPagination","paginationLoop","sidePagination","totalRows","paginationHAlign","paginationVAlign","paginationDetailHAlign","paginationPreText","paginationNextText","searchOnEnterKey","strictSearch","searchAlign","selectItemName","showHeader","showToggle","buttonsAlign","smartDisplay","uniqueId","cardView","detailView","detailFormatter","trimOnSearch","toolbarAlign","checkboxHeader","silentSort","maintainSelected","searchTimeOut","searchText","iconSize","buttonsClass","iconsPrefix","icons","paginationSwitchDown","paginationSwitchUp","toggle","detailOpen","detailClose","noop","customSort","rowStyle","rowAttributes","footerStyle","onAll","onClickCell","$element","onDblClickCell","onClickRow","onDblClickRow","onSort","order","onCheck","onUncheck","onCheckAll","rows","onUncheckAll","onCheckSome","onUncheckSome","onLoadSuccess","onLoadError","status","onColumnSwitch","checked","onPageChange","number","size","onSearch","onToggle","onPreBody","onPostBody","onPostHeader","onExpandRow","$detail","onCollapseRow","onRefreshOptions","onRefresh","onResetView","LOCALES","en","formatLoadingMessage","formatRecordsPerPage","formatShowingRows","pageFrom","pageTo","formatDetailPagination","formatSearch","formatNoMatches","formatPaginationSwitch","formatRefresh","formatToggle","formatColumns","formatAllRows","extend","COLUMN_DEFAULTS","radio","checkboxEnabled","titleTooltip","halign","falign","width","visible","switchable","formatter","footerFormatter","events","sorter","cellStyle","searchable","searchFormatter","cardVisible","EVENTS","all.bs.table","click-cell.bs.table","dbl-click-cell.bs.table","click-row.bs.table","dbl-click-row.bs.table","sort.bs.table","check.bs.table","uncheck.bs.table","check-all.bs.table","uncheck-all.bs.table","check-some.bs.table","uncheck-some.bs.table","load-success.bs.table","load-error.bs.table","column-switch.bs.table","page-change.bs.table","search.bs.table","toggle.bs.table","pre-body.bs.table","post-body.bs.table","post-header.bs.table","expand-row.bs.table","collapse-row.bs.table","refresh-options.bs.table","reset-view.bs.table","refresh.bs.table","initLocale","initContainer","initTable","initHeader","initData","initHiddenRows","initFooter","initToolbar","initPagination","initBody","initSearchText","initServer","parts","toUpperCase","fn","locales","$container","insertAfter","$tableContainer","$tableHeader","$tableBody","$tableLoading","$tableFooter","$toolbar","$pagination","after","that","$header","appendTo","isArray","m","y","_id","_class","_data","x","tx","ty","cspan","rspan","fromHtml","visibleColumns","header","fields","styles","formatters","sorters","sortNames","cellStyles","searchables","style","class_","unitWidth","off","closest","children","keyCode","which","hide","show","outerHeight","getCaret","proxy","resetWidth","$selectAll","updateSelected","initSort","timeoutId","_position","sort","b","aa","bb","isNumeric","parseFloat","localeCompare","clearTimeout","setTimeout","currentTarget","$this_","eq","add","$header_","trigger","$keepOpen","$search","switchableCount","showToolbar","togglePagination","toggleView","toggleColumn","trim","initSearch","updatePagination","s","isEmptyObject","filterColumns","grep","parseInt","prop_index","$pageList","$first","$pre","$next","$last","$number","$allSelected","getData","totalPages","pageLst","active","onPageListChange","onPageFirst","onPagePre","onPageNext","onPageLast","onPageNumber","hasClass","resetRows","siblings","initRow","parentDom","csses","data_","attributes","htmlAttributes","hiddenRows","v","value_","id_","rowspan_","colspan_","title_","csses_","disabled","fixedScroll","hasTr","trFragments","document","createDocumentFragment","tr","scrollTo","$td","$tr","cellIndex","getVisibleFields","$selectItem","next","is","resetView","not","substring","silent","query","request","offset","limit","filterColumnsPartial","success","load","_xhr","readyState","abort","th","checkAll","$selectAll_","updateRows","slice","Event","resetHeader","fitHeader","fixedBody","scrollWidth","focused","focusedTemp","scrollHeight","clientHeight","$th","parents","$headerTh","margin-right","outerWidth","visibleFields","$ths","innerWidth","scrollLeft","resetFooter","fitFooter","$footerTd","elWidth","needUpdate","$items","padding","toolbarHeight","paginationHeight","useCurrentPage","prepend","len","values","splice","removeAll","getRowByUniqueId","rowUniqueId","dataRow","Number","removeByUniqueId","updateByUniqueId","allParams","rowId","insertRow","updateRow","showRow","toggleRow","hideRow","getHiddenRows","mergeCells","col","updateCell","reinit","getOptions","getSelections","getAllSelections","checkAll_","uncheckAll","checkInvert","check","check_","uncheck","checkBy","checkBy_","uncheckBy","destroy","insertBefore","showLoading","hideLoading","button","showColumn","hideColumn","getHiddenColumns","getVisibleColumns","toggleAllColumns","showAllColumns","hideAllColumns","filterBy","scrollTop","getScrollPosition","selectPage","prevPage","nextPage","refreshOptions","resetSearch","expandRow_","expand","expandRow","collapseRow","expandAllRows","isSubTable","detailIcon","executeInterval","idInterval","setInterval","last","clearInterval","ex","trs","collapseAllRows","updateFormatText","allowedMethods","Error","removeData","defaults","columnDefaults","utils","jQuery","87","88","cellspacing"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACqB,IAAIC,GAA4DD,EAAoB,KAChFE,EAAgEF,EAAoB,IACpFG,EAAwDH,EAAoB,GAC5EI,EAAgEJ,EAAoBK,EAAEF,GACtFG,EAA2DN,EAAoB,KAC/EO,EAAmEP,EAAoBK,EAAEC,GCyBlHE,EAAA,GAAAD,GAAAE,EAAA,QDc6BV,GAAuB,GAClDW,YCVFC,UAAAT,EAAA,EAEAU,YAAAX,EAAA,GDYEY,QAAS,WACPC,KCXJC,iBDYIX,EAA8DK,ECXlEO,qBDaEC,KAAM,WACJ,OACEC,MCXN,YDYMC,SCXN,yBDYMC,QCXN,iBDYMC,QCXN,GDYMC,WCXN,GDYMC,UCXN,MDYMC,UCXNC,IAAA,OAAAC,KACA,UAAAD,IAAA,UAAAC,KACA,aAAAD,IAAA,aAAAC,KACA,gBAAAD,IAAA,YAAAC,KAEA,gBDOMC,YACAC,QACEC,OCNR,GDOQC,YCLR,IDOMC,cACEC,SCNR,IDOQC,UAAW,GAAI,IAAK,IAAK,ICNjC,KDOQC,QAAS,UAAW,aCN5B,aDOQC,WCLR,UDOMC,QACEV,KCNR,GDOQW,MCLR,UDOMC,SACEC,OCNR,EDOQC,UCNR,EDOQC,cCLR,GDOMC,QCLN,sBDSEC,SACEC,KAAM,WCPV,GAAAC,GAAA/B,IDUkBV,GAA8DK,EAAEqC,QAAQhC,KCT1Fc,QD6BQd,KAAKiC,SAASC,MCPtB,8CDXQxC,ECTRyC,ODUQnC,KAAKoC,MAAMC,KAAK,WAAarC,KAAKS,UAAWT,KAAKsC,YAAYtC,KCTtEc,SAAAyB,KAAA,SAAAC,GDUUT,EAAMU,YAAYD,EAAIrC,KCRhCuC,SDSwC,YAA1BF,EAAIrC,KAAKuC,QAAQC,OACnBZ,ECRZa,cDSYC,EAAE,iBAAiBC,MCR/B,SDUUpD,ECRVqD,ODSUhB,ECRViB,SDSUC,OAAOC,OAAOC,MCRxB,eDSkC,SAApBpB,EAAMtB,WACRoC,EAAE,iBAAiBC,MCR/B,UAEAM,MAAA,SAAAC,GDSU3D,ECPVqD,ODQUhB,EAAME,SAASC,MCPzBmB,ODaIL,OAAQ,WCNZ,GAAAM,GAAAtD,IDSUA,MAAKQ,YACPR,KAAKoC,MAAMC,KAAK,kBAAmBrC,KAAKsC,aAAciB,WAAYvD,KCR1EQ,cAAA+B,KAAA,SAAAC,GDSUc,EAAO/C,QAAUiC,EAAIrC,KCP/BqD,MACAJ,MAAA,SAAAC,GDQUC,EAAOrB,SAASC,MCN1BmB,MDUII,cAAe,SAAuBC,GACpC,GAAIC,GAAO,QAAUC,KAAKC,UAAUH,GAAM,eAAiBE,KAAKC,WAC9D7E,OCJR,MDMMgB,MAAK8D,KAAK,cCLhBH,GAAApB,KAAA,SAAAC,GDMQuB,eAAevB,EAAIrC,KCJ3B6D,YDOIpB,YAAa,WACX5C,KAAK4C,aACH7B,OCHR,GDIQC,YCFR,KDKIf,eAAgB,WCFpB,GAAAgE,GAAAjE,IDKMN,GCJNyC,ODKMnC,KAAKoC,MAAM8B,ICJjB,6BAAA3B,KAAA,SAAAC,GDKQyB,EAAOpD,SAAW2B,EAAIrC,KCH9BU,SDIQoD,EAAOzD,WAAayD,EAAOpD,SAAS,GCH5CsD,GDIQF,ECHRjB,SDIQtD,ECHRqD,UDMIqB,YAAa,SAAqBC,EAAM9C,GCF5C,GAAA+C,GAAAtE,IDKMA,MAAKoC,MAAMC,KAAK,oBAAqBrC,KAAKsC,aAAc+B,KAAMA,ECJpE9C,WAAAgB,KAAA,SAAAC,GDKQ8B,ECHRtB,SDIQsB,EAAO7B,YAAYD,EAAIrC,KCH/BuC,WACAU,MAAA,SAAAC,GDIQiB,EAAOrC,SAASC,MCFxBmB,MDKIkB,aAAc,SAAsBC,EAAMC,GACxC,GAAIC,GCDV1E,KADAU,EAEAV,KAAAU,QDGUiE,EAAajE,EAAQkE,IAAI,SAAUC,GACrC,MAAsB,SAAfA,EAAOlE,IAAiB,kBAAqBkE,EAAOlE,IAAM,MAASkE,EAAOlE,IAAM,WCH/F,KDKUmE,EAAc,WAAaH,EAAWI,KCJhD,gBDKUC,EAASnC,ECJnBiC,GDKUG,EAAQR,ECJlB,GDKUS,EAAMT,ECJhB,GDKUlD,EAAQkD,ECHlB,EDKMQ,GAAME,KCJZH,GDKMA,ECJNI,QDKMJ,EAAOK,ICJb9D,GDKMyD,EAAOM,GAAG,cAAe,WACvB/D,EAAQyD,ECJhBK,MDKQJ,EAAME,KCJd5D,GDKQ0D,EAAMM,YCJd,yCDKQb,EAAKN,YAAYc,EAAIM,OCJ7BjE,KDMMyD,EAAOM,GAAG,QAAS,SAAUG,GAC3BA,ECJRC,+BDQEC,UACEC,UAAW,WACT,MAAOC,SAAU,+BAAiC7F,KCJxDQ,YDMIsF,KAAM,WACJ,QACEC,MCHR,MDIQ3F,MCHR,MDIQ4F,OCHR,SDIQC,MCHR,SDIQC,SCFR,SDIQC,UCFR,EDGQJ,MCFR,WDGQ3F,MCFR,GDGQ4F,OCFR,SDGQC,MCFR,SDGQG,MCDR,SDGQL,MCDR,SDEQ3F,MCDR,SDEQ4F,OCDR,SDEQC,MCAR,WDEQF,MCAR,SDCQ3F,MCAR,SDCQ4F,OCAR,SDCQC,MCAR,SDCQG,MCCR,SDCQL,MCCR,KDAQ3F,MCCR,eDAQ4F,OCCR,SDAQC,MCER,WDAQF,MCER,SDDQ3F,MCER,SDDQ4F,OCER,SDDQC,MCGR,WDDQF,MCGR,WDFQ3F,MCGR,WDFQ4F,OCGR,SDFQC,MCKR,eDGMI,IACA,SAAUrH,EAAQC,EAAqBC,GAE7C,YACqB,IAAIoH,GAAuHpH,EAAoB,KEvPpKqH,EAAArH,EAAA,KAAAsH,EAAAtH,EAAA,GAaAuH,EAAAD,EACAF,EAAA,EACAC,EAAA,GATA,EAEA,KAEA,KAEA,KAUAtH,GAAA,EAAAwH,EAAA,SF8PMC,IACA,SAAU1H,EAAQC,EAAqBC,GAE7C,YG/PAD,GAAA,GHyRE0H,OACE7F,QACE6B,KGtRNiE,QHwRInG,WACEkC,KGpRNkE,SHwRE9G,QAAS,WGvRX,GAAAgC,GAAA/B,IH0RI6C,GAAE,iBAAiByC,GAAG,gBAAiB,WACrCvD,EAAMoB,MGzRZ,aH8REtB,SACEC,KAAM,WACJ9B,KAAKmD,MG1RX,UH8REwC,UACEmB,WAAY,WACV,GGzRN1G,OAAA,EH2RM,QAAQJ,KG1RdS,WH2RQ,IG1RR,MH2RUL,EG1RV,cACA,MH2RQ,KG1RR,OH2RUA,EG1RV,gBHgSM,MG1RNA,OHiSM2G,IACA,SAAU/H,EAAQC,EAAqBC,GAE7C,YIlWA,IAAA8H,GAAA,WAA0B,GAAAC,GAAAjH,KAAakH,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,CAAwB,OAAAE,GAAA,OAAiBE,YAAA,aAAAC,OAAgCpD,GAAA,eAAAqD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","file":"assets/js/5.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 153:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_RouterModal_vue__ = __webpack_require__(154);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sharedComponents_DataTable_vue__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sharedComponents_utils__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sharedComponents_utils___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__sharedComponents_utils__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sharedComponents_Progress__ = __webpack_require__(157);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sharedComponents_Progress___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__sharedComponents_Progress__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\nvar heavyLoad = new __WEBPACK_IMPORTED_MODULE_3__sharedComponents_Progress___default.a('heavy');\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  components: {\n    DataTable: __WEBPACK_IMPORTED_MODULE_1__sharedComponents_DataTable_vue__[\"a\" /* default */],\n    RouterModal: __WEBPACK_IMPORTED_MODULE_0__components_RouterModal_vue__[\"a\" /* default */]\n  },\n  mounted: function mounted() {\n    this.getSectionList();\n    __WEBPACK_IMPORTED_MODULE_2__sharedComponents_utils___default.a.spyLeftNavigation();\n  },\n  data: function data() {\n    return {\n      title: 'Secciones',\n      parentId: '#extra-table-container',\n      toolbar: '#extra-toolbar',\n      content: '',\n      selectedId: '',\n      modalMode: 'add',\n      options: [{ key: 'todo', text: 'Todos' }, { key: 'ocupado', text: 'Ocupadas' }, { key: 'disponible', text: 'Disponibles' }, { key: 'sectorial', text: 'Sectoriales' }],\n      sections: [],\n      sector: {\n        nombre: '',\n        codigo_area: ''\n      },\n      tableOptions: {\n        pageSize: 200,\n        pageList: [50, 100, 200, 500, 1000],\n        states: ['ocupado', 'disponible', 'sectorial'],\n        stateField: 'estado'\n      },\n      search: {\n        text: '',\n        state: 'activo'\n      },\n      totales: {\n        pagado: 0,\n        pendiente: 0,\n        total_vendido: 0\n      },\n      tableId: '#extra-table-full'\n    };\n  },\n\n  methods: {\n    save: function save() {\n      var _this = this;\n\n      var empty = __WEBPACK_IMPORTED_MODULE_2__sharedComponents_utils___default.a.isEmpty(this.sector);\n      if (!empty) {\n        heavyLoad.play();\n        this.$http.post('section/' + this.modalMode, this.getDataForm(this.sector)).then(function (res) {\n          _this.showMessage(res.data.message);\n          if (res.data.message.type === 'success') {\n            _this.sectorEmpty();\n            $('#router-modal').modal('hide');\n          }\n          heavyLoad.stop();\n          _this.getIps();\n          window.appBus.$emit('transaction');\n          if (_this.modalMode === 'edit') {\n            $('#router-modal').modal('hide');\n          }\n        }).catch(function (err) {\n          heavyLoad.stop();\n          _this.$toasted.error(err);\n        });\n      } else {\n        this.$toasted.error('Revise y LLene todos los campos por favor');\n      }\n    },\n    getIps: function getIps() {\n      var _this2 = this;\n\n      if (this.selectedId) {\n        this.$http.post('section/get_ips', this.getDataForm({ id_section: this.selectedId })).then(function (res) {\n          _this2.content = res.data.ips;\n        }).catch(function (err) {\n          _this2.$toasted.error(err);\n        });\n      }\n    },\n    updateIpState: function updateIpState(IP) {\n      var form = 'data=' + JSON.stringify(IP) + '&extra_info=' + JSON.stringify({\n        module: 'ip'\n      });\n      this.send('axiosupdate', form).then(function (res) {\n        displayMessage(res.data.mensaje);\n      });\n    },\n    sectorEmpty: function sectorEmpty() {\n      this.sectorEmpty = {\n        nombre: '',\n        codigo_area: ''\n      };\n    },\n    getSectionList: function getSectionList() {\n      var _this3 = this;\n\n      heavyLoad.play();\n      this.$http.get('section/get_sections/list').then(function (res) {\n        _this3.sections = res.data.sections;\n        _this3.selectedId = _this3.sections[0].id;\n        _this3.getIps();\n        heavyLoad.stop();\n      });\n    },\n    updateState: function updateState(code, state) {\n      var _this4 = this;\n\n      this.$http.post('section/update_ip', this.getDataForm({ code: code, state: state })).then(function (res) {\n        _this4.getIps();\n        _this4.showMessage(res.data.message);\n      }).catch(function (err) {\n        _this4.$toasted.error(err);\n      });\n    },\n    stateChanges: function stateChanges(name, args) {\n      var self = this;\n      var options = this.options;\n\n      var theOptions = options.map(function (option) {\n        return option.key !== 'todo' ? '<option value=\\'' + option.key + '\\'> ' + option.key + '</value>' : '';\n      });\n      var selectState = '<select>' + theOptions.join('') + '</select>';\n      var select = $(selectState);\n      var $this = args[3];\n      var row = args[2];\n      var state = args[1];\n\n      $this.html(select);\n      select.focus();\n      select.val(state);\n      select.on('change blur', function () {\n        state = select.val();\n        $this.html(state);\n        $this.removeClass('text-danger text-success text-primary');\n        self.updateState(row.codigo, state);\n      });\n      select.on('click', function (event) {\n        event.stopImmediatePropagation();\n      });\n    }\n  },\n  computed: {\n    reportUrl: function reportUrl() {\n      return baseURL + 'process/getreport/secciones/' + this.selectedId;\n    },\n    cols: function cols() {\n      return [{\n        field: 'num',\n        title: 'No.',\n        valign: 'middle',\n        align: 'center',\n        sortable: 'true'\n      }, {\n        checkbox: true,\n        field: 'checkbox',\n        title: '',\n        valign: 'middle',\n        align: 'center',\n        class: 'hide'\n      }, {\n        field: 'sector',\n        title: 'Sector',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'codigo',\n        title: 'Codigo',\n        valign: 'middle',\n        align: 'center',\n        class: 'hide'\n      }, {\n        field: 'ip',\n        title: 'Direccion IP',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'estado',\n        title: 'Estado',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'acciones',\n        title: 'Acciones',\n        valign: 'middle',\n        align: 'center'\n      }];\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 154:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterModal_vue__ = __webpack_require__(155);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_23e52ed5_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterModal_vue__ = __webpack_require__(156);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterModal_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_23e52ed5_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterModal_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 155:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    sector: {\n      type: Object\n    },\n    modalMode: {\n      type: String\n    }\n  },\n\n  mounted: function mounted() {\n    var _this = this;\n\n    $('#router-modal').on('hide.bs.modal', function () {\n      _this.$emit('dimiss');\n    });\n  },\n\n\n  methods: {\n    save: function save() {\n      this.$emit('save');\n    }\n  },\n\n  computed: {\n    modalTitle: function modalTitle() {\n      var title = void 0;\n\n      switch (this.modalMode) {\n        case 'add':\n          title = 'Nuevo Sector';\n          break;\n        case 'edit':\n          title = 'Editar Sector';\n          break;\n        default:\n          // nothing\n          break;\n      }\n      return title;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 156:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade\",attrs:{\"id\":\"router-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_vm._m(0,false,false),_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.modalTitle))])]),_c('div',{staticClass:\"modal-body\"},[_c('form',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"#sector-name\"}},[_vm._v(\"Nombre Sector\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sector.nombre),expression:\"sector.nombre\"}],staticClass:\"form-control\",attrs:{\"id\":\"secto-name\",\"type\":\"text\",\"placeholder\":\"nombre sector\"},domProps:{\"value\":(_vm.sector.nombre)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sector, \"nombre\", $event.target.value)}}})]),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"#sector-code\"}},[_vm._v(\"Codigo\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sector.codigo_area),expression:\"sector.codigo_area\"}],staticClass:\"form-control\",attrs:{\"id\":\"sector-code\",\"type\":\"number\",\"placeholder\":\"41\"},domProps:{\"value\":(_vm.sector.codigo_area)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sector, \"codigo_area\", $event.target.value)}}})])]),_c('div',{staticClass:\"col-md-12\"})])])]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"Cancelar\")]),_c('button',{staticClass:\"btn save\",attrs:{\"type\":\"button\",\"id\":\"btn-sector__save\"},on:{\"click\":_vm.save}},[_vm._v(\"Guardar\")])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 157:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Progress = function () {\n  function Progress(type) {\n    var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Cargando ...';\n\n    _classCallCheck(this, Progress);\n\n    this.type = type;\n    this.content = '\\n    <div class=\"heavy-loader active\">\\n      <div class=\"circle-load\"></div>\\n      <div class=\"message\"> ' + text + '</div>\\n    </div>';\n    this.$heavy = null;\n    this.$body = $('body');\n    this.$line = $('.loader');\n  }\n\n  _createClass(Progress, [{\n    key: 'play',\n    value: function play() {\n      this.stop();\n      if (this.type === 'heavy') {\n        $('body').append(this.content);\n        this.$heavy = $('.heavy-loader');\n        $('body').css({ overflow: 'hidden' });\n      } else {\n        $('.loader').css({\n          display: 'block'\n        });\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      if (this.type === 'heavy' && this.$heavy) {\n        this.$heavy.remove();\n        $('body').css({ overflow: 'auto' });\n      } else {\n        $('.loader').css({ display: 'none' });\n      }\n    }\n  }]);\n\n  return Progress;\n}();\n\nexports.default = Progress;\n\n/***/ }),\n\n/***/ 158:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"left-navigation col-md-2\"},[_c('div',{staticClass:\"aside-nav-container\"},[_c('div',{staticClass:\"left-navigation__header\"},[_c('h3',{staticClass:\"left-navigation__header-text\"},[_vm._v(_vm._s(_vm.title))])]),_vm._m(0,false,false)])]),_c('div',{staticClass:\"main-content col-md-10\"},[_c('div',{attrs:{\"id\":\"extra-table-container\"}},[_c('div',{staticClass:\"searcher-container main-toolbar\",attrs:{\"id\":\"extra-toolbar\"}},[_c('div',{staticClass:\"input-group search\"},[_vm._m(1,false,false),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search.text),expression:\"search.text\"}],staticClass:\"form-control searcher\",attrs:{\"type\":\"text\",\"placeholder\":\"Buscar\"},domProps:{\"value\":(_vm.search.text)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.search, \"text\", $event.target.value)}}})]),_c('div',{staticClass:\"pull-right\"},[_c('a',{staticClass:\"btn icon print-table\",attrs:{\"target\":\"_blank\",\"href\":_vm.reportUrl}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"print\")])])]),_c('div',{staticClass:\"pull-right\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedId),expression:\"selectedId\"}],staticClass:\"btn btn-primary\",attrs:{\"id\":\"select-sector\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedId=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.getIps]}},_vm._l((_vm.sections),function(section){return _c('option',{domProps:{\"value\":section.id}},[_vm._v(_vm._s(section.text))])}))]),_c('div',{staticClass:\"pull-right\"},[_c('select',{staticClass:\"form-group filter btn btn-primary\",attrs:{\"id\":\"client-filter\"}},_vm._l((_vm.options),function(option){return _c('option',{domProps:{\"value\":option.key}},[_vm._v(_vm._s(option.text))])}))])]),_c('DataTable',{attrs:{\"ids\":\"extra-table\",\"parentId\":_vm.parentId,\"data\":_vm.content,\"cols\":_vm.cols,\"toolbar\":_vm.toolbar,\"options\":_vm.tableOptions},on:{\"cell-clicked\":_vm.stateChanges}}),_c('RouterModal',{attrs:{\"sector\":_vm.sector,\"modal-mode\":_vm.modalMode},on:{\"save\":_vm.save}})],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"aside-nav\"},[_c('li',{staticClass:\"aside-buttons\"},[_c('a',{attrs:{\"href\":\"\",\"id\":\"make-payment\",\"data-toggle\":\"modal\",\"data-target\":\"#router-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"add\")]),_vm._v(\"Agregar Seccion\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-addon\"},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"search\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 82:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterSection_vue__ = __webpack_require__(153);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1988f582_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterSection_vue__ = __webpack_require__(158);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterSection_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1988f582_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterSection_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 84:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_357e043f_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__ = __webpack_require__(88);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_357e043f_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bootstrap_table__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    cols: {\n      type: Array\n    },\n    data: {\n      type: String\n    },\n    options: {\n      type: Object\n    },\n    ids: {\n      type: String\n    },\n    endpoint: {\n      type: String\n    },\n    parentId: {\n      type: String\n    },\n    toolbar: {\n      type: String\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.refresh(this.data);\n  },\n\n  watch: {\n    data: function data() {\n      this.refresh(this.data);\n      this.intialized = false;\n    }\n  },\n\n  methods: {\n    init: function init() {\n      this.table = $('#' + this.ids);\n      this.$filter = $(this.parentId + ' .filter');\n      this.activate();\n      this.listen();\n    },\n    activate: function activate(page) {\n      var self = this;\n      this.table.bootstrapTable({\n        columns: self.cols,\n        sortOrder: 'asc',\n        search: 'true',\n        toolbar: self.toolbar,\n        showRefresh: false,\n        showColumns: false,\n        showExport: false,\n        minimumCountColumns: 2,\n        showPaginationSwitch: false,\n        pagination: true,\n        idField: 'id',\n        pageSize: self.options.pageSize || 50,\n        pageList: self.options.pageList || [10, 20, 50, 100, 2000],\n        showFooter: false,\n        clickToSelect: true,\n        singleSelect: true,\n        striped: false,\n        fixed: true,\n        footer: false\n      });\n      this.table.find('tbody').css({ display: 'table-row-group' });\n      this.table.addClass('innertable');\n      this.$filter.change();\n      if (!this.intialized) {\n        this.initialized = true;\n        this.customSearch();\n        this.listen();\n      }\n      if (page) {\n        this.table.bootstrapTable('selectPage', page);\n      }\n    },\n    getSelectedRow: function getSelectedRow() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var row = this.table.bootstrapTable('getSelections')[0];\n      if (emit) {\n        this.$emit('selected-row', row);\n      }\n      return row;\n    },\n    getId: function getId() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var self = this;\n      var id = $.map(this.table.bootstrapTable('getSelections'), function (row) {\n        return row[self.idField];\n      });\n      if (emit) {\n        this.$emit('id', id);\n      }\n      return id;\n    },\n    refresh: function refresh(content) {\n      var options = this.table.bootstrapTable('getOptions');\n      this.table.bootstrapTable('destroy');\n      this.table.find('tbody').html(content);\n      this.activate(options.pageNumber);\n    },\n    listen: function listen() {\n      var _this = this;\n\n      var self = this;\n      this.table.on('all.bs.table', function (e, name, args) {\n        if (name === 'check.bs.table' || name === 'uncheck.bs.table') {\n          var row = _this.getSelectedRow();\n          self.$emit('check-uncheck', name, row, args);\n        } else if (name === 'click-cell.bs.table' && args[0] === 'estado') {\n          self.$emit('cell-clicked', name, args);\n        }\n      });\n\n      $(window).resize(function () {\n        self.table.bootstrapTable('resetView');\n      });\n    },\n    customSearch: function customSearch() {\n      $(this.parentId + ' .pull-right.search').addClass('hide');\n      var $inputSearch = $(this.parentId + ' .search input');\n\n      var self = this;\n      // eslint-disable-next-line\n      $inputSearch.on('click', function () {\n        var $this = $(this).parent();\n        $this.addClass('focus');\n      });\n      // eslint-disable-next-line\n      $inputSearch.on('blur', function () {\n        var $this = $(this).parent();\n        $this.removeClass('focus');\n      });\n      // eslint-disable-next-line\n      this.$filter.on('change', function () {\n        var filterWord = $(this).val();\n        if (filterWord === 'todo') {\n          filterWord = self.options.states;\n        }\n        self.applyFilter(filterWord);\n      });\n    },\n    applyFilter: function applyFilter(filter) {\n      var self = this;\n      this.table.bootstrapTable('filterBy', _defineProperty({}, self.options.stateField, filter));\n      self.$emit('filter.bs');\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.11.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\n/* unused harmony default export */ var _unused_webpack_default_export = ((function ($) {\n    'use strict';\n\n    // TOOLS DEFINITION\n    // ======================\n\n    var cachedWidth = null;\n\n    // it only does '%s', and return '' when arguments are undefined\n    var sprintf = function (str) {\n        var args = arguments,\n            flag = true,\n            i = 1;\n\n        str = str.replace(/%s/g, function () {\n            var arg = args[i++];\n\n            if (typeof arg === 'undefined') {\n                flag = false;\n                return '';\n            }\n            return arg;\n        });\n        return flag ? str : '';\n    };\n\n    var getPropertyFromOther = function (list, from, to, value) {\n        var result = '';\n        $.each(list, function (i, item) {\n            if (item[from] === value) {\n                result = item[to];\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n\n    var getFieldIndex = function (columns, field) {\n        var index = -1;\n\n        $.each(columns, function (i, column) {\n            if (column.field === field) {\n                index = i;\n                return false;\n            }\n            return true;\n        });\n        return index;\n    };\n\n    // http://jsfiddle.net/wenyi/47nz7ez9/3/\n    var setFieldIndex = function (columns) {\n        var i, j, k,\n            totalCol = 0,\n            flag = [];\n\n        for (i = 0; i < columns[0].length; i++) {\n            totalCol += columns[0][i].colspan || 1;\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            flag[i] = [];\n            for (j = 0; j < totalCol; j++) {\n                flag[i][j] = false;\n            }\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            for (j = 0; j < columns[i].length; j++) {\n                var r = columns[i][j],\n                    rowspan = r.rowspan || 1,\n                    colspan = r.colspan || 1,\n                    index = $.inArray(false, flag[i]);\n\n                if (colspan === 1) {\n                    r.fieldIndex = index;\n                    // when field is undefined, use index instead\n                    if (typeof r.field === 'undefined') {\n                        r.field = index;\n                    }\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    flag[i + k][index] = true;\n                }\n                for (k = 0; k < colspan; k++) {\n                    flag[i][index + k] = true;\n                }\n            }\n        }\n    };\n\n    var getScrollBarWidth = function () {\n        if (cachedWidth === null) {\n            var inner = $('<p/>').addClass('fixed-table-scroll-inner'),\n                outer = $('<div/>').addClass('fixed-table-scroll-outer'),\n                w1, w2;\n\n            outer.append(inner);\n            $('body').append(outer);\n\n            w1 = inner[0].offsetWidth;\n            outer.css('overflow', 'scroll');\n            w2 = inner[0].offsetWidth;\n\n            if (w1 === w2) {\n                w2 = outer[0].clientWidth;\n            }\n\n            outer.remove();\n            cachedWidth = w1 - w2;\n        }\n        return cachedWidth;\n    };\n\n    var calculateObjectValue = function (self, name, args, defaultValue) {\n        var func = name;\n\n        if (typeof name === 'string') {\n            // support obj.func1.func2\n            var names = name.split('.');\n\n            if (names.length > 1) {\n                func = window;\n                $.each(names, function (i, f) {\n                    func = func[f];\n                });\n            } else {\n                func = window[name];\n            }\n        }\n        if (typeof func === 'object') {\n            return func;\n        }\n        if (typeof func === 'function') {\n            return func.apply(self, args || []);\n        }\n        if (!func && typeof name === 'string' && sprintf.apply(this, [name].concat(args))) {\n            return sprintf.apply(this, [name].concat(args));\n        }\n        return defaultValue;\n    };\n\n    var compareObjects = function (objectA, objectB, compareLength) {\n        // Create arrays of property names\n        var objectAProperties = Object.getOwnPropertyNames(objectA),\n            objectBProperties = Object.getOwnPropertyNames(objectB),\n            propName = '';\n\n        if (compareLength) {\n            // If number of properties is different, objects are not equivalent\n            if (objectAProperties.length !== objectBProperties.length) {\n                return false;\n            }\n        }\n\n        for (var i = 0; i < objectAProperties.length; i++) {\n            propName = objectAProperties[i];\n\n            // If the property is not in the object B properties, continue with the next property\n            if ($.inArray(propName, objectBProperties) > -1) {\n                // If values of same property are not equal, objects are not equivalent\n                if (objectA[propName] !== objectB[propName]) {\n                    return false;\n                }\n            }\n        }\n\n        // If we made it this far, objects are considered equivalent\n        return true;\n    };\n\n    var escapeHTML = function (text) {\n        if (typeof text === 'string') {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;')\n                .replace(/`/g, '&#x60;');\n        }\n        return text;\n    };\n\n    var getRealDataAttr = function (dataAttr) {\n        for (var attr in dataAttr) {\n            var auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase();\n            if (auxAttr !== attr) {\n                dataAttr[auxAttr] = dataAttr[attr];\n                delete dataAttr[attr];\n            }\n        }\n\n        return dataAttr;\n    };\n\n    var getItemField = function (item, field, escape) {\n        var value = item;\n\n        if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n            return escape ? escapeHTML(item[field]) : item[field];\n        }\n        var props = field.split('.');\n        for (var p in props) {\n            if (props.hasOwnProperty(p)) {\n                value = value && value[props[p]];\n            }\n        }\n        return escape ? escapeHTML(value) : value;\n    };\n\n    var isIEBrowser = function () {\n        return !!(navigator.userAgent.indexOf(\"MSIE \") > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./));\n    };\n\n    var objectKeys = function () {\n        // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n                    dontEnums = [\n                        'toString',\n                        'toLocaleString',\n                        'valueOf',\n                        'hasOwnProperty',\n                        'isPrototypeOf',\n                        'propertyIsEnumerable',\n                        'constructor'\n                    ],\n                    dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    var result = [], prop, i;\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n                    return result;\n                };\n            }());\n        }\n    };\n\n    // BOOTSTRAP TABLE CLASS DEFINITION\n    // ======================\n\n    var BootstrapTable = function (el, options) {\n        this.options = options;\n        this.$el = $(el);\n        this.$el_ = this.$el.clone();\n        this.timeoutId_ = 0;\n        this.timeoutFooter_ = 0;\n\n        this.init();\n    };\n\n    BootstrapTable.DEFAULTS = {\n        classes: 'table table-hover',\n        sortClass: undefined,\n        locale: undefined,\n        height: undefined,\n        undefinedText: '-',\n        sortName: undefined,\n        sortOrder: 'asc',\n        sortStable: false,\n        striped: false,\n        columns: [[]],\n        data: [],\n        totalField: 'total',\n        dataField: 'rows',\n        method: 'get',\n        url: undefined,\n        ajax: undefined,\n        cache: true,\n        contentType: 'application/json',\n        dataType: 'json',\n        ajaxOptions: {},\n        queryParams: function (params) {\n            return params;\n        },\n        queryParamsType: 'limit', // undefined\n        responseHandler: function (res) {\n            return res;\n        },\n        pagination: false,\n        onlyInfoPagination: false,\n        paginationLoop: true,\n        sidePagination: 'client', // client or server\n        totalRows: 0, // server side need to set\n        pageNumber: 1,\n        pageSize: 10,\n        pageList: [10, 25, 50, 100],\n        paginationHAlign: 'right', //right, left\n        paginationVAlign: 'bottom', //bottom, top, both\n        paginationDetailHAlign: 'left', //right, left\n        paginationPreText: '&lsaquo;',\n        paginationNextText: '&rsaquo;',\n        search: false,\n        searchOnEnterKey: false,\n        strictSearch: false,\n        searchAlign: 'right',\n        selectItemName: 'btSelectItem',\n        showHeader: true,\n        showFooter: false,\n        showColumns: false,\n        showPaginationSwitch: false,\n        showRefresh: false,\n        showToggle: false,\n        buttonsAlign: 'right',\n        smartDisplay: true,\n        escape: false,\n        minimumCountColumns: 1,\n        idField: undefined,\n        uniqueId: undefined,\n        cardView: false,\n        detailView: false,\n        detailFormatter: function (index, row) {\n            return '';\n        },\n        trimOnSearch: true,\n        clickToSelect: false,\n        singleSelect: false,\n        toolbar: undefined,\n        toolbarAlign: 'left',\n        checkboxHeader: true,\n        sortable: true,\n        silentSort: true,\n        maintainSelected: false,\n        searchTimeOut: 500,\n        searchText: '',\n        iconSize: undefined,\n        buttonsClass: 'default',\n        iconsPrefix: 'glyphicon', // glyphicon of fa (font awesome)\n        icons: {\n            paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n            paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n            refresh: 'glyphicon-refresh icon-refresh',\n            toggle: 'glyphicon-list-alt icon-list-alt',\n            columns: 'glyphicon-th icon-th',\n            detailOpen: 'glyphicon-plus icon-plus',\n            detailClose: 'glyphicon-minus icon-minus'\n        },\n\n        customSearch: $.noop,\n\n        customSort: $.noop,\n\n        rowStyle: function (row, index) {\n            return {};\n        },\n\n        rowAttributes: function (row, index) {\n            return {};\n        },\n\n        footerStyle: function (row, index) {\n            return {};\n        },\n\n        onAll: function (name, args) {\n            return false;\n        },\n        onClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onDblClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onClickRow: function (item, $element) {\n            return false;\n        },\n        onDblClickRow: function (item, $element) {\n            return false;\n        },\n        onSort: function (name, order) {\n            return false;\n        },\n        onCheck: function (row) {\n            return false;\n        },\n        onUncheck: function (row) {\n            return false;\n        },\n        onCheckAll: function (rows) {\n            return false;\n        },\n        onUncheckAll: function (rows) {\n            return false;\n        },\n        onCheckSome: function (rows) {\n            return false;\n        },\n        onUncheckSome: function (rows) {\n            return false;\n        },\n        onLoadSuccess: function (data) {\n            return false;\n        },\n        onLoadError: function (status) {\n            return false;\n        },\n        onColumnSwitch: function (field, checked) {\n            return false;\n        },\n        onPageChange: function (number, size) {\n            return false;\n        },\n        onSearch: function (text) {\n            return false;\n        },\n        onToggle: function (cardView) {\n            return false;\n        },\n        onPreBody: function (data) {\n            return false;\n        },\n        onPostBody: function () {\n            return false;\n        },\n        onPostHeader: function () {\n            return false;\n        },\n        onExpandRow: function (index, row, $detail) {\n            return false;\n        },\n        onCollapseRow: function (index, row) {\n            return false;\n        },\n        onRefreshOptions: function (options) {\n            return false;\n        },\n        onRefresh: function (params) {\n          return false;\n        },\n        onResetView: function () {\n            return false;\n        }\n    };\n\n    BootstrapTable.LOCALES = {};\n\n    BootstrapTable.LOCALES['en-US'] = BootstrapTable.LOCALES.en = {\n        formatLoadingMessage: function () {\n            return 'Loading, please wait...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return sprintf('%s rows per page', pageNumber);\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return sprintf('Showing %s to %s of %s rows', pageFrom, pageTo, totalRows);\n        },\n        formatDetailPagination: function (totalRows) {\n            return sprintf('Showing %s rows', totalRows);\n        },\n        formatSearch: function () {\n            return 'Search';\n        },\n        formatNoMatches: function () {\n            return 'No matching records found';\n        },\n        formatPaginationSwitch: function () {\n            return 'Hide/Show pagination';\n        },\n        formatRefresh: function () {\n            return 'Refresh';\n        },\n        formatToggle: function () {\n            return 'Toggle';\n        },\n        formatColumns: function () {\n            return 'Columns';\n        },\n        formatAllRows: function () {\n            return 'All';\n        }\n    };\n\n    $.extend(BootstrapTable.DEFAULTS, BootstrapTable.LOCALES['en-US']);\n\n    BootstrapTable.COLUMN_DEFAULTS = {\n        radio: false,\n        checkbox: false,\n        checkboxEnabled: true,\n        field: undefined,\n        title: undefined,\n        titleTooltip: undefined,\n        'class': undefined,\n        align: undefined, // left, right, center\n        halign: undefined, // left, right, center\n        falign: undefined, // left, right, center\n        valign: undefined, // top, middle, bottom\n        width: undefined,\n        sortable: false,\n        order: 'asc', // asc, desc\n        visible: true,\n        switchable: true,\n        clickToSelect: true,\n        formatter: undefined,\n        footerFormatter: undefined,\n        events: undefined,\n        sorter: undefined,\n        sortName: undefined,\n        cellStyle: undefined,\n        searchable: true,\n        searchFormatter: true,\n        cardVisible: true,\n        escape : false\n    };\n\n    BootstrapTable.EVENTS = {\n        'all.bs.table': 'onAll',\n        'click-cell.bs.table': 'onClickCell',\n        'dbl-click-cell.bs.table': 'onDblClickCell',\n        'click-row.bs.table': 'onClickRow',\n        'dbl-click-row.bs.table': 'onDblClickRow',\n        'sort.bs.table': 'onSort',\n        'check.bs.table': 'onCheck',\n        'uncheck.bs.table': 'onUncheck',\n        'check-all.bs.table': 'onCheckAll',\n        'uncheck-all.bs.table': 'onUncheckAll',\n        'check-some.bs.table': 'onCheckSome',\n        'uncheck-some.bs.table': 'onUncheckSome',\n        'load-success.bs.table': 'onLoadSuccess',\n        'load-error.bs.table': 'onLoadError',\n        'column-switch.bs.table': 'onColumnSwitch',\n        'page-change.bs.table': 'onPageChange',\n        'search.bs.table': 'onSearch',\n        'toggle.bs.table': 'onToggle',\n        'pre-body.bs.table': 'onPreBody',\n        'post-body.bs.table': 'onPostBody',\n        'post-header.bs.table': 'onPostHeader',\n        'expand-row.bs.table': 'onExpandRow',\n        'collapse-row.bs.table': 'onCollapseRow',\n        'refresh-options.bs.table': 'onRefreshOptions',\n        'reset-view.bs.table': 'onResetView',\n        'refresh.bs.table': 'onRefresh'\n    };\n\n    BootstrapTable.prototype.init = function () {\n        this.initLocale();\n        this.initContainer();\n        this.initTable();\n        this.initHeader();\n        this.initData();\n        this.initHiddenRows();\n        this.initFooter();\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n        this.initSearchText();\n        this.initServer();\n    };\n\n    BootstrapTable.prototype.initLocale = function () {\n        if (this.options.locale) {\n            var parts = this.options.locale.split(/-|_/);\n            parts[0].toLowerCase();\n            if (parts[1]) parts[1].toUpperCase();\n            if ($.fn.bootstrapTable.locales[this.options.locale]) {\n                // locale as requested\n                $.extend(this.options, $.fn.bootstrapTable.locales[this.options.locale]);\n            } else if ($.fn.bootstrapTable.locales[parts.join('-')]) {\n                // locale with sep set to - (in case original was specified with _)\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts.join('-')]);\n            } else if ($.fn.bootstrapTable.locales[parts[0]]) {\n                // short locale language code (i.e. 'en')\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts[0]]);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.initContainer = function () {\n        this.$container = $([\n            '<div class=\"bootstrap-table\">',\n            '<div class=\"fixed-table-toolbar\"></div>',\n            this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\" style=\"clear: both;\"></div>' :\n                '',\n            '<div class=\"fixed-table-container\">',\n            '<div class=\"fixed-table-header\"><table></table></div>',\n            '<div class=\"fixed-table-body\">',\n            '<div class=\"fixed-table-loading\">',\n            this.options.formatLoadingMessage(),\n            '</div>',\n            '</div>',\n            '<div class=\"fixed-table-footer\"><table><tr></tr></table></div>',\n            this.options.paginationVAlign === 'bottom' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\"></div>' :\n                '',\n            '</div>',\n            '</div>'\n        ].join(''));\n\n        this.$container.insertAfter(this.$el);\n        this.$tableContainer = this.$container.find('.fixed-table-container');\n        this.$tableHeader = this.$container.find('.fixed-table-header');\n        this.$tableBody = this.$container.find('.fixed-table-body');\n        this.$tableLoading = this.$container.find('.fixed-table-loading');\n        this.$tableFooter = this.$container.find('.fixed-table-footer');\n        this.$toolbar = this.$container.find('.fixed-table-toolbar');\n        this.$pagination = this.$container.find('.fixed-table-pagination');\n\n        this.$tableBody.append(this.$el);\n        this.$container.after('<div class=\"clearfix\"></div>');\n\n        this.$el.addClass(this.options.classes);\n        if (this.options.striped) {\n            this.$el.addClass('table-striped');\n        }\n        if ($.inArray('table-no-bordered', this.options.classes.split(' ')) !== -1) {\n            this.$tableContainer.addClass('table-no-bordered');\n        }\n    };\n\n    BootstrapTable.prototype.initTable = function () {\n        var that = this,\n            columns = [],\n            data = [];\n\n        this.$header = this.$el.find('>thead');\n        if (!this.$header.length) {\n            this.$header = $('<thead></thead>').appendTo(this.$el);\n        }\n        this.$header.find('tr').each(function () {\n            var column = [];\n\n            $(this).find('th').each(function () {\n                // Fix #2014 - getFieldIndex and elsewhere assume this is string, causes issues if not\n                if (typeof $(this).data('field') !== 'undefined') {\n                    $(this).data('field', $(this).data('field') + '');\n                }\n                column.push($.extend({}, {\n                    title: $(this).html(),\n                    'class': $(this).attr('class'),\n                    titleTooltip: $(this).attr('title'),\n                    rowspan: $(this).attr('rowspan') ? +$(this).attr('rowspan') : undefined,\n                    colspan: $(this).attr('colspan') ? +$(this).attr('colspan') : undefined\n                }, $(this).data()));\n            });\n            columns.push(column);\n        });\n        if (!$.isArray(this.options.columns[0])) {\n            this.options.columns = [this.options.columns];\n        }\n        this.options.columns = $.extend(true, [], columns, this.options.columns);\n        this.columns = [];\n\n        setFieldIndex(this.options.columns);\n        $.each(this.options.columns, function (i, columns) {\n            $.each(columns, function (j, column) {\n                column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, column);\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.columns[column.fieldIndex] = column;\n                }\n\n                that.options.columns[i][j] = column;\n            });\n        });\n\n        // if options.data is setting, do not process tbody data\n        if (this.options.data.length) {\n            return;\n        }\n\n        var m = [];\n        this.$el.find('>tbody>tr').each(function (y) {\n            var row = {};\n\n            // save tr's id, class and data-* attributes\n            row._id = $(this).attr('id');\n            row._class = $(this).attr('class');\n            row._data = getRealDataAttr($(this).data());\n\n            $(this).find('>td').each(function (x) {\n                var $this = $(this),\n                    cspan = +$this.attr('colspan') || 1,\n                    rspan = +$this.attr('rowspan') || 1,\n                    tx, ty;\n\n                for (; m[y] && m[y][x]; x++); //skip already occupied cells in current row\n\n                for (tx = x; tx < x + cspan; tx++) { //mark matrix elements occupied by current cell with true\n                    for (ty = y; ty < y + rspan; ty++) {\n                        if (!m[ty]) { //fill missing rows\n                            m[ty] = [];\n                        }\n                        m[ty][tx] = true;\n                    }\n                }\n\n                var field = that.columns[x].field;\n\n                row[field] = $(this).html();\n                // save td's id, class and data-* attributes\n                row['_' + field + '_id'] = $(this).attr('id');\n                row['_' + field + '_class'] = $(this).attr('class');\n                row['_' + field + '_rowspan'] = $(this).attr('rowspan');\n                row['_' + field + '_colspan'] = $(this).attr('colspan');\n                row['_' + field + '_title'] = $(this).attr('title');\n                row['_' + field + '_data'] = getRealDataAttr($(this).data());\n            });\n            data.push(row);\n        });\n        this.options.data = data;\n        if (data.length) this.fromHtml = true;\n    };\n\n    BootstrapTable.prototype.initHeader = function () {\n        var that = this,\n            visibleColumns = {},\n            html = [];\n\n        this.header = {\n            fields: [],\n            styles: [],\n            classes: [],\n            formatters: [],\n            events: [],\n            sorters: [],\n            sortNames: [],\n            cellStyles: [],\n            searchables: []\n        };\n\n        $.each(this.options.columns, function (i, columns) {\n            html.push('<tr>');\n\n            if (i === 0 && !that.options.cardView && that.options.detailView) {\n                html.push(sprintf('<th class=\"detail\" rowspan=\"%s\"><div class=\"fht-cell\"></div></th>',\n                    that.options.columns.length));\n            }\n\n            $.each(columns, function (j, column) {\n                var text = '',\n                    halign = '', // header align style\n                    align = '', // body align style\n                    style = '',\n                    class_ = sprintf(' class=\"%s\"', column['class']),\n                    order = that.options.sortOrder || column.order,\n                    unitWidth = 'px',\n                    width = column.width;\n\n                if (column.width !== undefined && (!that.options.cardView)) {\n                    if (typeof column.width === 'string') {\n                        if (column.width.indexOf('%') !== -1) {\n                            unitWidth = '%';\n                        }\n                    }\n                }\n                if (column.width && typeof column.width === 'string') {\n                    width = column.width.replace('%', '').replace('px', '');\n                }\n\n                halign = sprintf('text-align: %s; ', column.halign ? column.halign : column.align);\n                align = sprintf('text-align: %s; ', column.align);\n                style = sprintf('vertical-align: %s; ', column.valign);\n                style += sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n                    '36px' : (width ? width + unitWidth : undefined));\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.header.fields[column.fieldIndex] = column.field;\n                    that.header.styles[column.fieldIndex] = align + style;\n                    that.header.classes[column.fieldIndex] = class_;\n                    that.header.formatters[column.fieldIndex] = column.formatter;\n                    that.header.events[column.fieldIndex] = column.events;\n                    that.header.sorters[column.fieldIndex] = column.sorter;\n                    that.header.sortNames[column.fieldIndex] = column.sortName;\n                    that.header.cellStyles[column.fieldIndex] = column.cellStyle;\n                    that.header.searchables[column.fieldIndex] = column.searchable;\n\n                    if (!column.visible) {\n                        return;\n                    }\n\n                    if (that.options.cardView && (!column.cardVisible)) {\n                        return;\n                    }\n\n                    visibleColumns[column.field] = column;\n                }\n\n                html.push('<th' + sprintf(' title=\"%s\"', column.titleTooltip),\n                    column.checkbox || column.radio ?\n                        sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n                        class_,\n                    sprintf(' style=\"%s\"', halign + style),\n                    sprintf(' rowspan=\"%s\"', column.rowspan),\n                    sprintf(' colspan=\"%s\"', column.colspan),\n                    sprintf(' data-field=\"%s\"', column.field),\n                    '>');\n\n                html.push(sprintf('<div class=\"th-inner %s\">', that.options.sortable && column.sortable ?\n                    'sortable both' : ''));\n\n                text = that.options.escape ? escapeHTML(column.title) : column.title;\n\n                if (column.checkbox) {\n                    if (!that.options.singleSelect && that.options.checkboxHeader) {\n                        text = '<input name=\"btSelectAll\" type=\"checkbox\" />';\n                    }\n                    that.header.stateField = column.field;\n                }\n                if (column.radio) {\n                    text = '';\n                    that.header.stateField = column.field;\n                    that.options.singleSelect = true;\n                }\n\n                html.push(text);\n                html.push('</div>');\n                html.push('<div class=\"fht-cell\"></div>');\n                html.push('</div>');\n                html.push('</th>');\n            });\n            html.push('</tr>');\n        });\n\n        this.$header.html(html.join(''));\n        this.$header.find('th[data-field]').each(function (i) {\n            $(this).data(visibleColumns[$(this).data('field')]);\n        });\n        this.$container.off('click', '.th-inner').on('click', '.th-inner', function (event) {\n            var target = $(this);\n\n            if (that.options.detailView) {\n                if (target.closest('.bootstrap-table')[0] !== that.$container[0])\n                    return false;\n            }\n\n            if (that.options.sortable && target.parent().data().sortable) {\n                that.onSort(event);\n            }\n        });\n\n        this.$header.children().children().off('keypress').on('keypress', function (event) {\n            if (that.options.sortable && $(this).data().sortable) {\n                var code = event.keyCode || event.which;\n                if (code == 13) { //Enter keycode\n                    that.onSort(event);\n                }\n            }\n        });\n\n        $(window).off('resize.bootstrap-table');\n        if (!this.options.showHeader || this.options.cardView) {\n            this.$header.hide();\n            this.$tableHeader.hide();\n            this.$tableLoading.css('top', 0);\n        } else {\n            this.$header.show();\n            this.$tableHeader.show();\n            this.$tableLoading.css('top', this.$header.outerHeight() + 1);\n            // Assign the correct sortable arrow\n            this.getCaret();\n            $(window).on('resize.bootstrap-table', $.proxy(this.resetWidth, this));\n        }\n\n        this.$selectAll = this.$header.find('[name=\"btSelectAll\"]');\n        this.$selectAll.off('click').on('click', function () {\n                var checked = $(this).prop('checked');\n                that[checked ? 'checkAll' : 'uncheckAll']();\n                that.updateSelected();\n            });\n    };\n\n    BootstrapTable.prototype.initFooter = function () {\n        if (!this.options.showFooter || this.options.cardView) {\n            this.$tableFooter.hide();\n        } else {\n            this.$tableFooter.show();\n        }\n    };\n\n    /**\n     * @param data\n     * @param type: append / prepend\n     */\n    BootstrapTable.prototype.initData = function (data, type) {\n        if (type === 'append') {\n            this.data = this.data.concat(data);\n        } else if (type === 'prepend') {\n            this.data = [].concat(data).concat(this.data);\n        } else {\n            this.data = data || this.options.data;\n        }\n\n        // Fix #839 Records deleted when adding new row on filtered table\n        if (type === 'append') {\n            this.options.data = this.options.data.concat(data);\n        } else if (type === 'prepend') {\n            this.options.data = [].concat(data).concat(this.options.data);\n        } else {\n            this.options.data = this.data;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            return;\n        }\n        this.initSort();\n    };\n\n    BootstrapTable.prototype.initSort = function () {\n        var that = this,\n            name = this.options.sortName,\n            order = this.options.sortOrder === 'desc' ? -1 : 1,\n            index = $.inArray(this.options.sortName, this.header.fields),\n            timeoutId = 0;\n\n        if (this.options.customSort !== $.noop) {\n            this.options.customSort.apply(this, [this.options.sortName, this.options.sortOrder]);\n            return;\n        }\n\n        if (index !== -1) {\n            if (this.options.sortStable) {\n                $.each(this.data, function (i, row) {\n                    if (!row.hasOwnProperty('_position')) row._position = i;\n                });\n            }\n\n            this.data.sort(function (a, b) {\n                if (that.header.sortNames[index]) {\n                    name = that.header.sortNames[index];\n                }\n                var aa = getItemField(a, name, that.options.escape),\n                    bb = getItemField(b, name, that.options.escape),\n                    value = calculateObjectValue(that.header, that.header.sorters[index], [aa, bb]);\n\n                if (value !== undefined) {\n                    return order * value;\n                }\n\n                // Fix #161: undefined or null string sort bug.\n                if (aa === undefined || aa === null) {\n                    aa = '';\n                }\n                if (bb === undefined || bb === null) {\n                    bb = '';\n                }\n\n                if (that.options.sortStable && aa === bb) {\n                    aa = a._position;\n                    bb = b._position;\n                }\n\n                // IF both values are numeric, do a numeric comparison\n                if ($.isNumeric(aa) && $.isNumeric(bb)) {\n                    // Convert numerical values form string to float.\n                    aa = parseFloat(aa);\n                    bb = parseFloat(bb);\n                    if (aa < bb) {\n                        return order * -1;\n                    }\n                    return order;\n                }\n\n                if (aa === bb) {\n                    return 0;\n                }\n\n                // If value is not a string, convert to string\n                if (typeof aa !== 'string') {\n                    aa = aa.toString();\n                }\n\n                if (aa.localeCompare(bb) === -1) {\n                    return order * -1;\n                }\n\n                return order;\n            });\n\n            if (this.options.sortClass !== undefined) {\n                clearTimeout(timeoutId);\n                timeoutId = setTimeout(function () {\n                    that.$el.removeClass(that.options.sortClass);\n                    var index = that.$header.find(sprintf('[data-field=\"%s\"]',\n                        that.options.sortName).index() + 1);\n                    that.$el.find(sprintf('tr td:nth-child(%s)', index))\n                        .addClass(that.options.sortClass);\n                }, 250);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSort = function (event) {\n        var $this = event.type === \"keypress\" ? $(event.currentTarget) : $(event.currentTarget).parent(),\n            $this_ = this.$header.find('th').eq($this.index());\n\n        this.$header.add(this.$header_).find('span.order').remove();\n\n        if (this.options.sortName === $this.data('field')) {\n            this.options.sortOrder = this.options.sortOrder === 'asc' ? 'desc' : 'asc';\n        } else {\n            this.options.sortName = $this.data('field');\n            this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc';\n        }\n        this.trigger('sort', this.options.sortName, this.options.sortOrder);\n\n        $this.add($this_).data('order', this.options.sortOrder);\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n\n        if (this.options.sidePagination === 'server') {\n            this.initServer(this.options.silentSort);\n            return;\n        }\n\n        this.initSort();\n        this.initBody();\n    };\n\n    BootstrapTable.prototype.initToolbar = function () {\n        var that = this,\n            html = [],\n            timeoutId = 0,\n            $keepOpen,\n            $search,\n            switchableCount = 0;\n\n        if (this.$toolbar.find('.bs-bars').children().length) {\n            $('body').append($(this.options.toolbar));\n        }\n        this.$toolbar.html('');\n\n        if (typeof this.options.toolbar === 'string' || typeof this.options.toolbar === 'object') {\n            $(sprintf('<div class=\"bs-bars pull-%s\"></div>', this.options.toolbarAlign))\n                .appendTo(this.$toolbar)\n                .append($(this.options.toolbar));\n        }\n\n        // showColumns, showToggle, showRefresh\n        html = [sprintf('<div class=\"columns columns-%s btn-group pull-%s\">',\n            this.options.buttonsAlign, this.options.buttonsAlign)];\n\n        if (typeof this.options.icons === 'string') {\n            this.options.icons = calculateObjectValue(null, this.options.icons);\n        }\n\n        if (this.options.showPaginationSwitch) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"paginationSwitch\" aria-label=\"pagination Switch\" title=\"%s\">',\n                    this.options.formatPaginationSwitch()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.paginationSwitchDown),\n                '</button>');\n        }\n\n        if (this.options.showRefresh) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"refresh\" aria-label=\"refresh\" title=\"%s\">',\n                    this.options.formatRefresh()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.refresh),\n                '</button>');\n        }\n\n        if (this.options.showToggle) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"toggle\" aria-label=\"toggle\" title=\"%s\">',\n                    this.options.formatToggle()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.toggle),\n                '</button>');\n        }\n\n        if (this.options.showColumns) {\n            html.push(sprintf('<div class=\"keep-open btn-group\" title=\"%s\">',\n                    this.options.formatColumns()),\n                '<button type=\"button\" aria-label=\"columns\" class=\"btn' +\n                sprintf(' btn-%s', this.options.buttonsClass) +\n                sprintf(' btn-%s', this.options.iconSize) +\n                ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.columns),\n                ' <span class=\"caret\"></span>',\n                '</button>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">');\n\n            $.each(this.columns, function (i, column) {\n                if (column.radio || column.checkbox) {\n                    return;\n                }\n\n                if (that.options.cardView && !column.cardVisible) {\n                    return;\n                }\n\n                var checked = column.visible ? ' checked=\"checked\"' : '';\n\n                if (column.switchable) {\n                    html.push(sprintf('<li role=\"menuitem\">' +\n                        '<label><input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s> %s</label>' +\n                        '</li>', column.field, i, checked, column.title));\n                    switchableCount++;\n                }\n            });\n            html.push('</ul>',\n                '</div>');\n        }\n\n        html.push('</div>');\n\n        // Fix #188: this.showToolbar is for extensions\n        if (this.showToolbar || html.length > 2) {\n            this.$toolbar.append(html.join(''));\n        }\n\n        if (this.options.showPaginationSwitch) {\n            this.$toolbar.find('button[name=\"paginationSwitch\"]')\n                .off('click').on('click', $.proxy(this.togglePagination, this));\n        }\n\n        if (this.options.showRefresh) {\n            this.$toolbar.find('button[name=\"refresh\"]')\n                .off('click').on('click', $.proxy(this.refresh, this));\n        }\n\n        if (this.options.showToggle) {\n            this.$toolbar.find('button[name=\"toggle\"]')\n                .off('click').on('click', function () {\n                    that.toggleView();\n                });\n        }\n\n        if (this.options.showColumns) {\n            $keepOpen = this.$toolbar.find('.keep-open');\n\n            if (switchableCount <= this.options.minimumCountColumns) {\n                $keepOpen.find('input').prop('disabled', true);\n            }\n\n            $keepOpen.find('li').off('click').on('click', function (event) {\n                event.stopImmediatePropagation();\n            });\n            $keepOpen.find('input').off('click').on('click', function () {\n                var $this = $(this);\n\n                that.toggleColumn($(this).val(), $this.prop('checked'), false);\n                that.trigger('column-switch', $(this).data('field'), $this.prop('checked'));\n            });\n        }\n\n        if (this.options.search) {\n            html = [];\n            html.push(\n                '<div class=\"pull-' + this.options.searchAlign + ' search\">',\n                sprintf('<input class=\"form-control' +\n                    sprintf(' input-%s', this.options.iconSize) +\n                    '\" type=\"text\" placeholder=\"%s\">',\n                    this.options.formatSearch()),\n                '</div>');\n\n            this.$toolbar.append(html.join(''));\n            $search = this.$toolbar.find('.search input');\n            $search.off('keyup drop blur').on('keyup drop blur', function (event) {\n                if (that.options.searchOnEnterKey && event.keyCode !== 13) {\n                    return;\n                }\n\n                if ($.inArray(event.keyCode, [37, 38, 39, 40]) > -1) {\n                    return;\n                }\n\n                clearTimeout(timeoutId); // doesn't matter if it's 0\n                timeoutId = setTimeout(function () {\n                    that.onSearch(event);\n                }, that.options.searchTimeOut);\n            });\n\n            if (isIEBrowser()) {\n                $search.off('mouseup').on('mouseup', function (event) {\n                    clearTimeout(timeoutId); // doesn't matter if it's 0\n                    timeoutId = setTimeout(function () {\n                        that.onSearch(event);\n                    }, that.options.searchTimeOut);\n                });\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSearch = function (event) {\n        var text = $.trim($(event.currentTarget).val());\n\n        // trim search input\n        if (this.options.trimOnSearch && $(event.currentTarget).val() !== text) {\n            $(event.currentTarget).val(text);\n        }\n\n        if (text === this.searchText) {\n            return;\n        }\n        this.searchText = text;\n        this.options.searchText = text;\n\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n        this.trigger('search', text);\n    };\n\n    BootstrapTable.prototype.initSearch = function () {\n        var that = this;\n\n        if (this.options.sidePagination !== 'server') {\n            if (this.options.customSearch !== $.noop) {\n                this.options.customSearch.apply(this, [this.searchText]);\n                return;\n            }\n\n            var s = this.searchText && (this.options.escape ?\n                escapeHTML(this.searchText) : this.searchText).toLowerCase();\n            var f = $.isEmptyObject(this.filterColumns) ? null : this.filterColumns;\n\n            // Check filter\n            this.data = f ? $.grep(this.options.data, function (item, i) {\n                for (var key in f) {\n                    if ($.isArray(f[key]) && $.inArray(item[key], f[key]) === -1 ||\n                            !$.isArray(f[key]) && item[key] !== f[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }) : this.options.data;\n\n            this.data = s ? $.grep(this.data, function (item, i) {\n                for (var j = 0; j < that.header.fields.length; j++) {\n\n                    if (!that.header.searchables[j]) {\n                        continue;\n                    }\n\n                    var key = $.isNumeric(that.header.fields[j]) ? parseInt(that.header.fields[j], 10) : that.header.fields[j];\n                    var column = that.columns[getFieldIndex(that.columns, key)];\n                    var value;\n\n                    if (typeof key === 'string') {\n                        value = item;\n                        var props = key.split('.');\n                        for (var prop_index = 0; prop_index < props.length; prop_index++) {\n                            value = value[props[prop_index]];\n                        }\n\n                        // Fix #142: respect searchForamtter boolean\n                        if (column && column.searchFormatter) {\n                            value = calculateObjectValue(column,\n                                that.header.formatters[j], [value, item, i], value);\n                        }\n                    } else {\n                        value = item[key];\n                    }\n\n                    if (typeof value === 'string' || typeof value === 'number') {\n                        if (that.options.strictSearch) {\n                            if ((value + '').toLowerCase() === s) {\n                                return true;\n                            }\n                        } else {\n                            if ((value + '').toLowerCase().indexOf(s) !== -1) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }) : this.data;\n        }\n    };\n\n    BootstrapTable.prototype.initPagination = function () {\n        if (!this.options.pagination) {\n            this.$pagination.hide();\n            return;\n        } else {\n            this.$pagination.show();\n        }\n\n        var that = this,\n            html = [],\n            $allSelected = false,\n            i, from, to,\n            $pageList,\n            $first, $pre,\n            $next, $last,\n            $number,\n            data = this.getData(),\n            pageList = this.options.pageList;\n\n        if (this.options.sidePagination !== 'server') {\n            this.options.totalRows = data.length;\n        }\n\n        this.totalPages = 0;\n        if (this.options.totalRows) {\n            if (this.options.pageSize === this.options.formatAllRows()) {\n                this.options.pageSize = this.options.totalRows;\n                $allSelected = true;\n            } else if (this.options.pageSize === this.options.totalRows) {\n                // Fix #667 Table with pagination,\n                // multiple pages and a search that matches to one page throws exception\n                var pageLst = typeof this.options.pageList === 'string' ?\n                    this.options.pageList.replace('[', '').replace(']', '')\n                        .replace(/ /g, '').toLowerCase().split(',') : this.options.pageList;\n                if ($.inArray(this.options.formatAllRows().toLowerCase(), pageLst)  > -1) {\n                    $allSelected = true;\n                }\n            }\n\n            this.totalPages = ~~((this.options.totalRows - 1) / this.options.pageSize) + 1;\n\n            this.options.totalPages = this.totalPages;\n        }\n        if (this.totalPages > 0 && this.options.pageNumber > this.totalPages) {\n            this.options.pageNumber = this.totalPages;\n        }\n\n        this.pageFrom = (this.options.pageNumber - 1) * this.options.pageSize + 1;\n        this.pageTo = this.options.pageNumber * this.options.pageSize;\n        if (this.pageTo > this.options.totalRows) {\n            this.pageTo = this.options.totalRows;\n        }\n\n        html.push(\n            '<div class=\"pull-' + this.options.paginationDetailHAlign + ' pagination-detail\">',\n            '<span class=\"pagination-info\">',\n            this.options.onlyInfoPagination ? this.options.formatDetailPagination(this.options.totalRows) :\n            this.options.formatShowingRows(this.pageFrom, this.pageTo, this.options.totalRows),\n            '</span>');\n\n        if (!this.options.onlyInfoPagination) {\n            html.push('<span class=\"page-list\">');\n\n            var pageNumber = [\n                    sprintf('<span class=\"btn-group %s\">',\n                        this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                            'dropdown' : 'dropup'),\n                    '<button type=\"button\" class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                    '<span class=\"page-size\">',\n                    $allSelected ? this.options.formatAllRows() : this.options.pageSize,\n                    '</span>',\n                    ' <span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu\" role=\"menu\">'\n                ];\n\n            if (typeof this.options.pageList === 'string') {\n                var list = this.options.pageList.replace('[', '').replace(']', '')\n                    .replace(/ /g, '').split(',');\n\n                pageList = [];\n                $.each(list, function (i, value) {\n                    pageList.push(value.toUpperCase() === that.options.formatAllRows().toUpperCase() ?\n                        that.options.formatAllRows() : +value);\n                });\n            }\n\n            $.each(pageList, function (i, page) {\n                if (!that.options.smartDisplay || i === 0 || pageList[i - 1] < that.options.totalRows) {\n                    var active;\n                    if ($allSelected) {\n                        active = page === that.options.formatAllRows() ? ' class=\"active\"' : '';\n                    } else {\n                        active = page === that.options.pageSize ? ' class=\"active\"' : '';\n                    }\n                    pageNumber.push(sprintf('<li role=\"menuitem\"%s><a href=\"#\">%s</a></li>', active, page));\n                }\n            });\n            pageNumber.push('</ul></span>');\n\n            html.push(this.options.formatRecordsPerPage(pageNumber.join('')));\n            html.push('</span>');\n\n            html.push('</div>',\n                '<div class=\"pull-' + this.options.paginationHAlign + ' pagination\">',\n                '<ul class=\"pagination' + sprintf(' pagination-%s', this.options.iconSize) + '\">',\n                '<li class=\"page-pre\"><a href=\"#\">' + this.options.paginationPreText + '</a></li>');\n\n            if (this.totalPages < 5) {\n                from = 1;\n                to = this.totalPages;\n            } else {\n                from = this.options.pageNumber - 2;\n                to = from + 4;\n                if (from < 1) {\n                    from = 1;\n                    to = 5;\n                }\n                if (to > this.totalPages) {\n                    to = this.totalPages;\n                    from = to - 4;\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber >= 3) {\n                    html.push('<li class=\"page-first' + (1 === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', 1, '</a>',\n                        '</li>');\n\n                    from++;\n                }\n\n                if (this.options.pageNumber >= 4) {\n                    if (this.options.pageNumber == 4 || this.totalPages == 6 || this.totalPages == 7) {\n                        from--;\n                    } else {\n                        html.push('<li class=\"page-first-separator disabled\">',\n                            '<a href=\"#\">...</a>',\n                            '</li>');\n                    }\n\n                    to--;\n                }\n            }\n\n            if (this.totalPages >= 7) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    from--;\n                }\n            }\n\n            if (this.totalPages == 6) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    to++;\n                }\n            } else if (this.totalPages >= 7) {\n                if (this.totalPages == 7 || this.options.pageNumber >= (this.totalPages - 3)) {\n                    to++;\n                }\n            }\n\n            for (i = from; i <= to; i++) {\n                html.push('<li class=\"page-number' + (i === this.options.pageNumber ? ' active' : '') + '\">',\n                    '<a href=\"#\">', i, '</a>',\n                    '</li>');\n            }\n\n            if (this.totalPages >= 8) {\n                if (this.options.pageNumber <= (this.totalPages - 4)) {\n                    html.push('<li class=\"page-last-separator disabled\">',\n                        '<a href=\"#\">...</a>',\n                        '</li>');\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber <= (this.totalPages - 3)) {\n                    html.push('<li class=\"page-last' + (this.totalPages === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', this.totalPages, '</a>',\n                        '</li>');\n                }\n            }\n\n            html.push(\n                '<li class=\"page-next\"><a href=\"#\">' + this.options.paginationNextText + '</a></li>',\n                '</ul>',\n                '</div>');\n        }\n        this.$pagination.html(html.join(''));\n\n        if (!this.options.onlyInfoPagination) {\n            $pageList = this.$pagination.find('.page-list a');\n            $first = this.$pagination.find('.page-first');\n            $pre = this.$pagination.find('.page-pre');\n            $next = this.$pagination.find('.page-next');\n            $last = this.$pagination.find('.page-last');\n            $number = this.$pagination.find('.page-number');\n\n            if (this.options.smartDisplay) {\n                if (this.totalPages <= 1) {\n                    this.$pagination.find('div.pagination').hide();\n                }\n                if (pageList.length < 2 || this.options.totalRows <= pageList[0]) {\n                    this.$pagination.find('span.page-list').hide();\n                }\n\n                // when data is empty, hide the pagination\n                this.$pagination[this.getData().length ? 'show' : 'hide']();\n            }\n\n            if (!this.options.paginationLoop) {\n                if (this.options.pageNumber === 1) {\n                    $pre.addClass('disabled');\n                }\n                if (this.options.pageNumber === this.totalPages) {\n                    $next.addClass('disabled');\n                }\n            }\n\n            if ($allSelected) {\n                this.options.pageSize = this.options.formatAllRows();\n            }\n            $pageList.off('click').on('click', $.proxy(this.onPageListChange, this));\n            $first.off('click').on('click', $.proxy(this.onPageFirst, this));\n            $pre.off('click').on('click', $.proxy(this.onPagePre, this));\n            $next.off('click').on('click', $.proxy(this.onPageNext, this));\n            $last.off('click').on('click', $.proxy(this.onPageLast, this));\n            $number.off('click').on('click', $.proxy(this.onPageNumber, this));\n        }\n    };\n\n    BootstrapTable.prototype.updatePagination = function (event) {\n        // Fix #171: IE disabled button can be clicked bug.\n        if (event && $(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        if (!this.options.maintainSelected) {\n            this.resetRows();\n        }\n\n        this.initPagination();\n        if (this.options.sidePagination === 'server') {\n            this.initServer();\n        } else {\n            this.initBody();\n        }\n\n        this.trigger('page-change', this.options.pageNumber, this.options.pageSize);\n    };\n\n    BootstrapTable.prototype.onPageListChange = function (event) {\n        var $this = $(event.currentTarget);\n\n        $this.parent().addClass('active').siblings().removeClass('active');\n        this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n            this.options.formatAllRows() : +$this.text();\n        this.$toolbar.find('.page-size').text(this.options.pageSize);\n\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageFirst = function (event) {\n        this.options.pageNumber = 1;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPagePre = function (event) {\n        if ((this.options.pageNumber - 1) === 0) {\n            this.options.pageNumber = this.options.totalPages;\n        } else {\n            this.options.pageNumber--;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNext = function (event) {\n        if ((this.options.pageNumber + 1) > this.options.totalPages) {\n            this.options.pageNumber = 1;\n        } else {\n            this.options.pageNumber++;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageLast = function (event) {\n        this.options.pageNumber = this.totalPages;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNumber = function (event) {\n        if (this.options.pageNumber === +$(event.currentTarget).text()) {\n            return;\n        }\n        this.options.pageNumber = +$(event.currentTarget).text();\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.initRow = function(item, i, data, parentDom) {\n        var that=this,\n            key,\n            html = [],\n            style = {},\n            csses = [],\n            data_ = '',\n            attributes = {},\n            htmlAttributes = [];\n\n        if ($.inArray(item, this.hiddenRows) > -1) {\n            return;\n        }\n\n        style = calculateObjectValue(this.options, this.options.rowStyle, [item, i], style);\n\n        if (style && style.css) {\n            for (key in style.css) {\n                csses.push(key + ': ' + style.css[key]);\n            }\n        }\n\n        attributes = calculateObjectValue(this.options,\n            this.options.rowAttributes, [item, i], attributes);\n\n        if (attributes) {\n            for (key in attributes) {\n                htmlAttributes.push(sprintf('%s=\"%s\"', key, escapeHTML(attributes[key])));\n            }\n        }\n\n        if (item._data && !$.isEmptyObject(item._data)) {\n            $.each(item._data, function(k, v) {\n                // ignore data-index\n                if (k === 'index') {\n                    return;\n                }\n                data_ += sprintf(' data-%s=\"%s\"', k, v);\n            });\n        }\n\n        html.push('<tr',\n            sprintf(' %s', htmlAttributes.join(' ')),\n            sprintf(' id=\"%s\"', $.isArray(item) ? undefined : item._id),\n            sprintf(' class=\"%s\"', style.classes || ($.isArray(item) ? undefined : item._class)),\n            sprintf(' data-index=\"%s\"', i),\n            sprintf(' data-uniqueid=\"%s\"', item[this.options.uniqueId]),\n            sprintf('%s', data_),\n            '>'\n        );\n\n        if (this.options.cardView) {\n            html.push(sprintf('<td colspan=\"%s\"><div class=\"card-views\">', this.header.fields.length));\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td>',\n                '<a class=\"detail-icon\" href=\"#\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.detailOpen),\n                '</a>',\n                '</td>');\n        }\n\n        $.each(this.header.fields, function(j, field) {\n            var text = '',\n                value_ = getItemField(item, field, that.options.escape),\n                value = '',\n                type = '',\n                cellStyle = {},\n                id_ = '',\n                class_ = that.header.classes[j],\n                data_ = '',\n                rowspan_ = '',\n                colspan_ = '',\n                title_ = '',\n                column = that.columns[j];\n\n            if (that.fromHtml && typeof value_ === 'undefined') {\n                return;\n            }\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            if (column.escape) {\n                value_ = escapeHTML(value_);\n            }\n\n            style = sprintf('style=\"%s\"', csses.concat(that.header.styles[j]).join('; '));\n\n            // handle td's id and class\n            if (item['_' + field + '_id']) {\n                id_ = sprintf(' id=\"%s\"', item['_' + field + '_id']);\n            }\n            if (item['_' + field + '_class']) {\n                class_ = sprintf(' class=\"%s\"', item['_' + field + '_class']);\n            }\n            if (item['_' + field + '_rowspan']) {\n                rowspan_ = sprintf(' rowspan=\"%s\"', item['_' + field + '_rowspan']);\n            }\n            if (item['_' + field + '_colspan']) {\n                colspan_ = sprintf(' colspan=\"%s\"', item['_' + field + '_colspan']);\n            }\n            if (item['_' + field + '_title']) {\n                title_ = sprintf(' title=\"%s\"', item['_' + field + '_title']);\n            }\n            cellStyle = calculateObjectValue(that.header,\n                that.header.cellStyles[j], [value_, item, i, field], cellStyle);\n            if (cellStyle.classes) {\n                class_ = sprintf(' class=\"%s\"', cellStyle.classes);\n            }\n            if (cellStyle.css) {\n                var csses_ = [];\n                for (var key in cellStyle.css) {\n                    csses_.push(key + ': ' + cellStyle.css[key]);\n                }\n                style = sprintf('style=\"%s\"', csses_.concat(that.header.styles[j]).join('; '));\n            }\n\n            value = calculateObjectValue(column,\n                that.header.formatters[j], [value_, item, i], value_);\n\n            if (item['_' + field + '_data'] && !$.isEmptyObject(item['_' + field + '_data'])) {\n                $.each(item['_' + field + '_data'], function(k, v) {\n                    // ignore data-index\n                    if (k === 'index') {\n                        return;\n                    }\n                    data_ += sprintf(' data-%s=\"%s\"', k, v);\n                });\n            }\n\n            if (column.checkbox || column.radio) {\n                type = column.checkbox ? 'checkbox' : type;\n                type = column.radio ? 'radio' : type;\n\n                text = [sprintf(that.options.cardView ?\n                        '<div class=\"card-view %s\">' : '<td class=\"bs-checkbox %s\">', column['class'] || ''),\n                    '<input' +\n                    sprintf(' data-index=\"%s\"', i) +\n                    sprintf(' name=\"%s\"', that.options.selectItemName) +\n                    sprintf(' type=\"%s\"', type) +\n                    sprintf(' value=\"%s\"', item[that.options.idField]) +\n                    sprintf(' checked=\"%s\"', value === true ||\n                        (value_ || value && value.checked) ? 'checked' : undefined) +\n                    sprintf(' disabled=\"%s\"', !column.checkboxEnabled ||\n                        (value && value.disabled) ? 'disabled' : undefined) +\n                    ' />',\n                    that.header.formatters[j] && typeof value === 'string' ? value : '',\n                    that.options.cardView ? '</div>' : '</td>'\n                ].join('');\n\n                item[that.header.stateField] = value === true || (value && value.checked);\n            } else {\n                value = typeof value === 'undefined' || value === null ?\n                    that.options.undefinedText : value;\n\n                text = that.options.cardView ? ['<div class=\"card-view\">',\n                    that.options.showHeader ? sprintf('<span class=\"title\" %s>%s</span>', style,\n                        getPropertyFromOther(that.columns, 'field', 'title', field)) : '',\n                    sprintf('<span class=\"value\">%s</span>', value),\n                    '</div>'\n                ].join('') : [sprintf('<td%s %s %s %s %s %s %s>',\n                        id_, class_, style, data_, rowspan_, colspan_, title_),\n                    value,\n                    '</td>'\n                ].join('');\n\n                // Hide empty data on Card view when smartDisplay is set to true.\n                if (that.options.cardView && that.options.smartDisplay && value === '') {\n                    // Should set a placeholder for event binding correct fieldIndex\n                    text = '<div class=\"card-view\"></div>';\n                }\n            }\n\n            html.push(text);\n        });\n\n        if (this.options.cardView) {\n            html.push('</div></td>');\n        }\n        html.push('</tr>');\n\n        return html.join(' ');\n    };\n\n    BootstrapTable.prototype.initBody = function (fixedScroll) {\n        var that = this,\n            html = [],\n            data = this.getData();\n\n        this.trigger('pre-body', data);\n\n        this.$body = this.$el.find('>tbody');\n        if (!this.$body.length) {\n            this.$body = $('<tbody></tbody>').appendTo(this.$el);\n        }\n\n        //Fix #389 Bootstrap-table-flatJSON is not working\n\n        if (!this.options.pagination || this.options.sidePagination === 'server') {\n            this.pageFrom = 1;\n            this.pageTo = data.length;\n        }\n\n        var trFragments = $(document.createDocumentFragment());\n        var hasTr;\n\n        for (var i = this.pageFrom - 1; i < this.pageTo; i++) {\n            var item = data[i];\n            var tr = this.initRow(item, i, data, trFragments);\n            hasTr = hasTr || !!tr;\n            if (tr&&tr!==true) {\n                trFragments.append(tr);\n            }\n        }\n\n        // show no records\n        if (!hasTr) {\n            trFragments.append('<tr class=\"no-records-found\">' +\n                sprintf('<td colspan=\"%s\">%s</td>',\n                this.$header.find('th').length,\n                this.options.formatNoMatches()) +\n                '</tr>');\n        }\n\n        this.$body.html(trFragments);\n\n        if (!fixedScroll) {\n            this.scrollTo(0);\n        }\n\n        // click to select by column\n        this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', function (e) {\n            var $td = $(this),\n                $tr = $td.parent(),\n                item = that.data[$tr.data('index')],\n                index = $td[0].cellIndex,\n                fields = that.getVisibleFields(),\n                field = fields[that.options.detailView && !that.options.cardView ? index - 1 : index],\n                column = that.columns[getFieldIndex(that.columns, field)],\n                value = getItemField(item, field, that.options.escape);\n\n            if ($td.find('.detail-icon').length) {\n                return;\n            }\n\n            that.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td);\n            that.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field);\n\n            // if click to select - then trigger the checkbox/radio click\n            if (e.type === 'click' && that.options.clickToSelect && column.clickToSelect) {\n                var $selectItem = $tr.find(sprintf('[name=\"%s\"]', that.options.selectItemName));\n                if ($selectItem.length) {\n                    $selectItem[0].click(); // #144: .trigger('click') bug\n                }\n            }\n        });\n\n        this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', function () {\n            var $this = $(this),\n                $tr = $this.parent().parent(),\n                index = $tr.data('index'),\n                row = data[index]; // Fix #980 Detail view, when searching, returns wrong row\n\n            // remove and update\n            if ($tr.next().is('tr.detail-view')) {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailOpen));\n                that.trigger('collapse-row', index, row);\n                $tr.next().remove();\n            } else {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailClose));\n                $tr.after(sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.find('td').length));\n                var $element = $tr.next().find('td');\n                var content = calculateObjectValue(that.options, that.options.detailFormatter, [index, row, $element], '');\n                if($element.length === 1) {\n                    $element.append(content);\n                }\n                that.trigger('expand-row', index, row, $element);\n            }\n            that.resetView();\n            return false;\n        });\n\n        this.$selectItem = this.$body.find(sprintf('[name=\"%s\"]', this.options.selectItemName));\n        this.$selectItem.off('click').on('click', function (event) {\n            event.stopImmediatePropagation();\n\n            var $this = $(this),\n                checked = $this.prop('checked'),\n                row = that.data[$this.data('index')];\n\n            if (that.options.maintainSelected && $(this).is(':radio')) {\n                $.each(that.options.data, function (i, row) {\n                    row[that.header.stateField] = false;\n                });\n            }\n\n            row[that.header.stateField] = checked;\n\n            if (that.options.singleSelect) {\n                that.$selectItem.not(this).each(function () {\n                    that.data[$(this).data('index')][that.header.stateField] = false;\n                });\n                that.$selectItem.filter(':checked').not(this).prop('checked', false);\n            }\n\n            that.updateSelected();\n            that.trigger(checked ? 'check' : 'uncheck', row, $this);\n        });\n\n        $.each(this.header.events, function (i, events) {\n            if (!events) {\n                return;\n            }\n            // fix bug, if events is defined with namespace\n            if (typeof events === 'string') {\n                events = calculateObjectValue(null, events);\n            }\n\n            var field = that.header.fields[i],\n                fieldIndex = $.inArray(field, that.getVisibleFields());\n\n            if (that.options.detailView && !that.options.cardView) {\n                fieldIndex += 1;\n            }\n\n            for (var key in events) {\n                that.$body.find('>tr:not(.no-records-found)').each(function () {\n                    var $tr = $(this),\n                        $td = $tr.find(that.options.cardView ? '.card-view' : 'td').eq(fieldIndex),\n                        index = key.indexOf(' '),\n                        name = key.substring(0, index),\n                        el = key.substring(index + 1),\n                        func = events[key];\n\n                    $td.find(el).off(name).on(name, function (e) {\n                        var index = $tr.data('index'),\n                            row = that.data[index],\n                            value = row[field];\n\n                        func.apply(this, [e, value, row, index]);\n                    });\n                });\n            }\n        });\n\n        this.updateSelected();\n        this.resetView();\n\n        this.trigger('post-body', data);\n    };\n\n    BootstrapTable.prototype.initServer = function (silent, query, url) {\n        var that = this,\n            data = {},\n            params = {\n                searchText: this.searchText,\n                sortName: this.options.sortName,\n                sortOrder: this.options.sortOrder\n            },\n            request;\n\n        if (this.options.pagination) {\n            params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n                this.options.totalRows : this.options.pageSize;\n            params.pageNumber = this.options.pageNumber;\n        }\n\n        if (!(url || this.options.url) && !this.options.ajax) {\n            return;\n        }\n\n        if (this.options.queryParamsType === 'limit') {\n            params = {\n                search: params.searchText,\n                sort: params.sortName,\n                order: params.sortOrder\n            };\n\n            if (this.options.pagination) {\n                params.offset = this.options.pageSize === this.options.formatAllRows() ?\n                    0 : this.options.pageSize * (this.options.pageNumber - 1);\n                params.limit = this.options.pageSize === this.options.formatAllRows() ?\n                    this.options.totalRows : this.options.pageSize;\n            }\n        }\n\n        if (!($.isEmptyObject(this.filterColumnsPartial))) {\n            params.filter = JSON.stringify(this.filterColumnsPartial, null);\n        }\n\n        data = calculateObjectValue(this.options, this.options.queryParams, [params], data);\n\n        $.extend(data, query || {});\n\n        // false to stop request\n        if (data === false) {\n            return;\n        }\n\n        if (!silent) {\n            this.$tableLoading.show();\n        }\n        request = $.extend({}, calculateObjectValue(null, this.options.ajaxOptions), {\n            type: this.options.method,\n            url:  url || this.options.url,\n            data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n                JSON.stringify(data) : data,\n            cache: this.options.cache,\n            contentType: this.options.contentType,\n            dataType: this.options.dataType,\n            success: function (res) {\n                res = calculateObjectValue(that.options, that.options.responseHandler, [res], res);\n\n                that.load(res);\n                that.trigger('load-success', res);\n                if (!silent) that.$tableLoading.hide();\n            },\n            error: function (res) {\n                that.trigger('load-error', res.status, res);\n                if (!silent) that.$tableLoading.hide();\n            }\n        });\n\n        if (this.options.ajax) {\n            calculateObjectValue(this, this.options.ajax, [request], null);\n        } else {\n            if (this._xhr && this._xhr.readyState !== 4) {\n                this._xhr.abort();\n            }\n            this._xhr = $.ajax(request);\n        }\n    };\n\n    BootstrapTable.prototype.initSearchText = function () {\n        if (this.options.search) {\n            if (this.options.searchText !== '') {\n                var $search = this.$toolbar.find('.search input');\n                $search.val(this.options.searchText);\n                this.onSearch({currentTarget: $search});\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getCaret = function () {\n        var that = this;\n\n        $.each(this.$header.find('th'), function (i, th) {\n            $(th).find('.sortable').removeClass('desc asc').addClass($(th).data('field') === that.options.sortName ? that.options.sortOrder : 'both');\n        });\n    };\n\n    BootstrapTable.prototype.updateSelected = function () {\n        var checkAll = this.$selectItem.filter(':enabled').length &&\n            this.$selectItem.filter(':enabled').length ===\n            this.$selectItem.filter(':enabled').filter(':checked').length;\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checkAll);\n\n        this.$selectItem.each(function () {\n            $(this).closest('tr')[$(this).prop('checked') ? 'addClass' : 'removeClass']('selected');\n        });\n    };\n\n    BootstrapTable.prototype.updateRows = function () {\n        var that = this;\n\n        this.$selectItem.each(function () {\n            that.data[$(this).data('index')][that.header.stateField] = $(this).prop('checked');\n        });\n    };\n\n    BootstrapTable.prototype.resetRows = function () {\n        var that = this;\n\n        $.each(this.data, function (i, row) {\n            that.$selectAll.prop('checked', false);\n            that.$selectItem.prop('checked', false);\n            if (that.header.stateField) {\n                row[that.header.stateField] = false;\n            }\n        });\n        this.initHiddenRows();\n    };\n\n    BootstrapTable.prototype.trigger = function (name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        name += '.bs.table';\n        this.options[BootstrapTable.EVENTS[name]].apply(this.options, args);\n        this.$el.trigger($.Event(name), args);\n\n        this.options.onAll(name, args);\n        this.$el.trigger($.Event('all.bs.table'), [name, args]);\n    };\n\n    BootstrapTable.prototype.resetHeader = function () {\n        // fix #61: the hidden table reset header bug.\n        // fix bug: get $el.css('width') error sometime (height = 500)\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout($.proxy(this.fitHeader, this), this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitHeader = function () {\n        var that = this,\n            fixedBody,\n            scrollWidth,\n            focused,\n            focusedTemp;\n\n        if (that.$el.is(':hidden')) {\n            that.timeoutId_ = setTimeout($.proxy(that.fitHeader, that), 100);\n            return;\n        }\n        fixedBody = this.$tableBody.get(0);\n\n        scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n        fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            getScrollBarWidth() : 0;\n\n        this.$el.css('margin-top', -this.$header.outerHeight());\n\n        focused = $(':focus');\n        if (focused.length > 0) {\n            var $th = focused.parents('th');\n            if ($th.length > 0) {\n                var dataField = $th.attr('data-field');\n                if (dataField !== undefined) {\n                    var $headerTh = this.$header.find(\"[data-field='\" + dataField + \"']\");\n                    if ($headerTh.length > 0) {\n                        $headerTh.find(\":input\").addClass(\"focus-temp\");\n                    }\n                }\n            }\n        }\n\n        this.$header_ = this.$header.clone(true, true);\n        this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]');\n        this.$tableHeader.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', this.$el.outerWidth())\n            .html('').attr('class', this.$el.attr('class'))\n            .append(this.$header_);\n\n\n        focusedTemp = $('.focus-temp:visible:eq(0)');\n        if (focusedTemp.length > 0) {\n            focusedTemp.focus();\n            this.$header.find('.focus-temp').removeClass('focus-temp');\n        }\n\n        // fix bug: $.data() is not working as expected after $.append()\n        this.$header.find('th[data-field]').each(function (i) {\n            that.$header_.find(sprintf('th[data-field=\"%s\"]', $(this).data('field'))).data($(this).data());\n        });\n\n        var visibleFields = this.getVisibleFields(),\n            $ths = this.$header_.find('th');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this),\n                index = i;\n\n            if (that.options.detailView && !that.options.cardView) {\n                if (i === 0) {\n                    that.$header_.find('th.detail').find('.fht-cell').width($this.innerWidth());\n                }\n                index = i - 1;\n            }\n\n            var $th = that.$header_.find(sprintf('th[data-field=\"%s\"]', visibleFields[index]));\n            if ($th.length > 1) {\n                $th = $($ths[$this[0].cellIndex]);\n            }\n\n            $th.find('.fht-cell').width($this.innerWidth());\n        });\n        // horizontal scroll event\n        // TODO: it's probably better improving the layout than binding to scroll event\n        this.$tableBody.off('scroll').on('scroll', function () {\n            that.$tableHeader.scrollLeft($(this).scrollLeft());\n\n            if (that.options.showFooter && !that.options.cardView) {\n                that.$tableFooter.scrollLeft($(this).scrollLeft());\n            }\n        });\n        that.trigger('post-header');\n    };\n\n    BootstrapTable.prototype.resetFooter = function () {\n        var that = this,\n            data = that.getData(),\n            html = [];\n\n        if (!this.options.showFooter || this.options.cardView) { //do nothing\n            return;\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td><div class=\"th-inner\">&nbsp;</div><div class=\"fht-cell\"></div></td>');\n        }\n\n        $.each(this.columns, function (i, column) {\n            var key,\n                falign = '', // footer align style\n                valign = '',\n                csses = [],\n                style = {},\n                class_ = sprintf(' class=\"%s\"', column['class']);\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            falign = sprintf('text-align: %s; ', column.falign ? column.falign : column.align);\n            valign = sprintf('vertical-align: %s; ', column.valign);\n\n            style = calculateObjectValue(null, that.options.footerStyle);\n\n            if (style && style.css) {\n                for (key in style.css) {\n                    csses.push(key + ': ' + style.css[key]);\n                }\n            }\n\n            html.push('<td', class_, sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')), '>');\n            html.push('<div class=\"th-inner\">');\n\n            html.push(calculateObjectValue(column, column.footerFormatter, [data], '&nbsp;') || '&nbsp;');\n\n            html.push('</div>');\n            html.push('<div class=\"fht-cell\"></div>');\n            html.push('</div>');\n            html.push('</td>');\n        });\n\n        this.$tableFooter.find('tr').html(html.join(''));\n        this.$tableFooter.show();\n        clearTimeout(this.timeoutFooter_);\n        this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this),\n            this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitFooter = function () {\n        var that = this,\n            $footerTd,\n            elWidth,\n            scrollWidth;\n\n        clearTimeout(this.timeoutFooter_);\n        if (this.$el.is(':hidden')) {\n            this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this), 100);\n            return;\n        }\n\n        elWidth = this.$el.css('width');\n        scrollWidth = elWidth > this.$tableBody.width() ? getScrollBarWidth() : 0;\n\n        this.$tableFooter.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', elWidth)\n            .attr('class', this.$el.attr('class'));\n\n        $footerTd = this.$tableFooter.find('td');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this);\n\n            $footerTd.eq(i).find('.fht-cell').width($this.innerWidth());\n        });\n    };\n\n    BootstrapTable.prototype.toggleColumn = function (index, checked, needUpdate) {\n        if (index === -1) {\n            return;\n        }\n        this.columns[index].visible = checked;\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if (needUpdate) {\n                $items.filter(sprintf('[value=\"%s\"]', index)).prop('checked', checked);\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getVisibleFields = function () {\n        var that = this,\n            visibleFields = [];\n\n        $.each(this.header.fields, function (j, field) {\n            var column = that.columns[getFieldIndex(that.columns, field)];\n\n            if (!column.visible) {\n                return;\n            }\n            visibleFields.push(field);\n        });\n        return visibleFields;\n    };\n\n    // PUBLIC FUNCTION DEFINITION\n    // =======================\n\n    BootstrapTable.prototype.resetView = function (params) {\n        var padding = 0;\n\n        if (params && params.height) {\n            this.options.height = params.height;\n        }\n\n        this.$selectAll.prop('checked', this.$selectItem.length > 0 &&\n            this.$selectItem.length === this.$selectItem.filter(':checked').length);\n\n        if (this.options.height) {\n            var toolbarHeight = this.$toolbar.outerHeight(true),\n                paginationHeight = this.$pagination.outerHeight(true),\n                height = this.options.height - toolbarHeight - paginationHeight;\n\n            this.$tableContainer.css('height', height + 'px');\n        }\n\n        if (this.options.cardView) {\n            // remove the element css\n            this.$el.css('margin-top', '0');\n            this.$tableContainer.css('padding-bottom', '0');\n            this.$tableFooter.hide();\n            return;\n        }\n\n        if (this.options.showHeader && this.options.height) {\n            this.$tableHeader.show();\n            this.resetHeader();\n            padding += this.$header.outerHeight();\n        } else {\n            this.$tableHeader.hide();\n            this.trigger('post-header');\n        }\n\n        if (this.options.showFooter) {\n            this.resetFooter();\n            if (this.options.height) {\n                padding += this.$tableFooter.outerHeight() + 1;\n            }\n        }\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n        this.$tableContainer.css('padding-bottom', padding + 'px');\n        this.trigger('reset-view');\n    };\n\n    BootstrapTable.prototype.getData = function (useCurrentPage) {\n        return (this.searchText || !$.isEmptyObject(this.filterColumns) || !$.isEmptyObject(this.filterColumnsPartial)) ?\n            (useCurrentPage ? this.data.slice(this.pageFrom - 1, this.pageTo) : this.data) :\n            (useCurrentPage ? this.options.data.slice(this.pageFrom - 1, this.pageTo) : this.options.data);\n    };\n\n    BootstrapTable.prototype.load = function (data) {\n        var fixedScroll = false;\n\n        // #431: support pagination\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows = data[this.options.totalField];\n            fixedScroll = data.fixedScroll;\n            data = data[this.options.dataField];\n        } else if (!$.isArray(data)) { // support fixedScroll\n            fixedScroll = data.fixedScroll;\n            data = data.data;\n        }\n\n        this.initData(data);\n        this.initSearch();\n        this.initPagination();\n        this.initBody(fixedScroll);\n    };\n\n    BootstrapTable.prototype.append = function (data) {\n        this.initData(data, 'append');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.prepend = function (data) {\n        this.initData(data, 'prepend');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.remove = function (params) {\n        var len = this.options.data.length,\n            i, row;\n\n        if (!params.hasOwnProperty('field') || !params.hasOwnProperty('values')) {\n            return;\n        }\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (!row.hasOwnProperty(params.field)) {\n                continue;\n            }\n            if ($.inArray(row[params.field], params.values) !== -1) {\n                this.options.data.splice(i, 1);\n                if (this.options.sidePagination === 'server') {\n                    this.options.totalRows -= 1;\n                }\n            }\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.removeAll = function () {\n        if (this.options.data.length > 0) {\n            this.options.data.splice(0, this.options.data.length);\n            this.initSearch();\n            this.initPagination();\n            this.initBody(true);\n        }\n    };\n\n    BootstrapTable.prototype.getRowByUniqueId = function (id) {\n        var uniqueId = this.options.uniqueId,\n            len = this.options.data.length,\n            dataRow = null,\n            i, row, rowUniqueId;\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (row.hasOwnProperty(uniqueId)) { // uniqueId is a column\n                rowUniqueId = row[uniqueId];\n            } else if(row._data.hasOwnProperty(uniqueId)) { // uniqueId is a row data property\n                rowUniqueId = row._data[uniqueId];\n            } else {\n                continue;\n            }\n\n            if (typeof rowUniqueId === 'string') {\n                id = id.toString();\n            } else if (typeof rowUniqueId === 'number') {\n                if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n                    id = parseInt(id);\n                } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n                    id = parseFloat(id);\n                }\n            }\n\n            if (rowUniqueId === id) {\n                dataRow = row;\n                break;\n            }\n        }\n\n        return dataRow;\n    };\n\n    BootstrapTable.prototype.removeByUniqueId = function (id) {\n        var len = this.options.data.length,\n            row = this.getRowByUniqueId(id);\n\n        if (row) {\n            this.options.data.splice(this.options.data.indexOf(row), 1);\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateByUniqueId = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            var rowId;\n\n            if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n                return;\n            }\n\n            rowId = $.inArray(that.getRowByUniqueId(params.id), that.options.data);\n\n            if (rowId === -1) {\n                return;\n            }\n            $.extend(that.options.data[rowId], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.insertRow = function (params) {\n        if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n            return;\n        }\n        this.data.splice(params.index, 0, params.row);\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateRow = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n                return;\n            }\n            $.extend(that.options.data[params.index], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.initHiddenRows = function () {\n        this.hiddenRows = [];\n    };\n\n    BootstrapTable.prototype.showRow = function (params) {\n        this.toggleRow(params, true);\n    };\n\n    BootstrapTable.prototype.hideRow = function (params) {\n        this.toggleRow(params, false);\n    };\n\n    BootstrapTable.prototype.toggleRow = function (params, visible) {\n        var row, index;\n\n        if (params.hasOwnProperty('index')) {\n            row = this.getData()[params.index];\n        } else if (params.hasOwnProperty('uniqueId')) {\n            row = this.getRowByUniqueId(params.uniqueId);\n        }\n\n        if (!row) {\n            return;\n        }\n\n        index = $.inArray(row, this.hiddenRows);\n\n        if (!visible && index === -1) {\n            this.hiddenRows.push(row);\n        } else if (visible && index > -1) {\n            this.hiddenRows.splice(index, 1);\n        }\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getHiddenRows = function (show) {\n        var that = this,\n            data = this.getData(),\n            rows = [];\n\n        $.each(data, function (i, row) {\n            if ($.inArray(row, that.hiddenRows) > -1) {\n                rows.push(row);\n            }\n        });\n        this.hiddenRows = rows;\n        return rows;\n    };\n\n    BootstrapTable.prototype.mergeCells = function (options) {\n        var row = options.index,\n            col = $.inArray(options.field, this.getVisibleFields()),\n            rowspan = options.rowspan || 1,\n            colspan = options.colspan || 1,\n            i, j,\n            $tr = this.$body.find('>tr'),\n            $td;\n\n        if (this.options.detailView && !this.options.cardView) {\n            col += 1;\n        }\n\n        $td = $tr.eq(row).find('>td').eq(col);\n\n        if (row < 0 || col < 0 || row >= this.data.length) {\n            return;\n        }\n\n        for (i = row; i < row + rowspan; i++) {\n            for (j = col; j < col + colspan; j++) {\n                $tr.eq(i).find('>td').eq(j).hide();\n            }\n        }\n\n        $td.attr('rowspan', rowspan).attr('colspan', colspan).show();\n    };\n\n    BootstrapTable.prototype.updateCell = function (params) {\n        if (!params.hasOwnProperty('index') ||\n            !params.hasOwnProperty('field') ||\n            !params.hasOwnProperty('value')) {\n            return;\n        }\n        this.data[params.index][params.field] = params.value;\n\n        if (params.reinit === false) {\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getOptions = function () {\n        return this.options;\n    };\n\n    BootstrapTable.prototype.getSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            // fix #2424: from html with checkbox\n            return row[that.header.stateField] === true;\n        });\n    };\n\n    BootstrapTable.prototype.getAllSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            return row[that.header.stateField];\n        });\n    };\n\n    BootstrapTable.prototype.checkAll = function () {\n        this.checkAll_(true);\n    };\n\n    BootstrapTable.prototype.uncheckAll = function () {\n        this.checkAll_(false);\n    };\n\n    BootstrapTable.prototype.checkInvert = function () {\n        var that = this;\n        var rows = that.$selectItem.filter(':enabled');\n        var checked = rows.filter(':checked');\n        rows.each(function() {\n            $(this).prop('checked', !$(this).prop('checked'));\n        });\n        that.updateRows();\n        that.updateSelected();\n        that.trigger('uncheck-some', checked);\n        checked = that.getSelections();\n        that.trigger('check-some', checked);\n    };\n\n    BootstrapTable.prototype.checkAll_ = function (checked) {\n        var rows;\n        if (!checked) {\n            rows = this.getSelections();\n        }\n        this.$selectAll.add(this.$selectAll_).prop('checked', checked);\n        this.$selectItem.filter(':enabled').prop('checked', checked);\n        this.updateRows();\n        if (checked) {\n            rows = this.getSelections();\n        }\n        this.trigger(checked ? 'check-all' : 'uncheck-all', rows);\n    };\n\n    BootstrapTable.prototype.check = function (index) {\n        this.check_(true, index);\n    };\n\n    BootstrapTable.prototype.uncheck = function (index) {\n        this.check_(false, index);\n    };\n\n    BootstrapTable.prototype.check_ = function (checked, index) {\n        var $el = this.$selectItem.filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n        this.data[index][this.header.stateField] = checked;\n        this.updateSelected();\n        this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el);\n    };\n\n    BootstrapTable.prototype.checkBy = function (obj) {\n        this.checkBy_(true, obj);\n    };\n\n    BootstrapTable.prototype.uncheckBy = function (obj) {\n        this.checkBy_(false, obj);\n    };\n\n    BootstrapTable.prototype.checkBy_ = function (checked, obj) {\n        if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n            return;\n        }\n\n        var that = this,\n            rows = [];\n        $.each(this.options.data, function (index, row) {\n            if (!row.hasOwnProperty(obj.field)) {\n                return false;\n            }\n            if ($.inArray(row[obj.field], obj.values) !== -1) {\n                var $el = that.$selectItem.filter(':enabled')\n                    .filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n                row[that.header.stateField] = checked;\n                rows.push(row);\n                that.trigger(checked ? 'check' : 'uncheck', row, $el);\n            }\n        });\n        this.updateSelected();\n        this.trigger(checked ? 'check-some' : 'uncheck-some', rows);\n    };\n\n    BootstrapTable.prototype.destroy = function () {\n        this.$el.insertBefore(this.$container);\n        $(this.options.toolbar).insertBefore(this.$el);\n        this.$container.next().remove();\n        this.$container.remove();\n        this.$el.html(this.$el_.html())\n            .css('margin-top', '0')\n            .attr('class', this.$el_.attr('class') || ''); // reset the class\n    };\n\n    BootstrapTable.prototype.showLoading = function () {\n        this.$tableLoading.show();\n    };\n\n    BootstrapTable.prototype.hideLoading = function () {\n        this.$tableLoading.hide();\n    };\n\n    BootstrapTable.prototype.togglePagination = function () {\n        this.options.pagination = !this.options.pagination;\n        var button = this.$toolbar.find('button[name=\"paginationSwitch\"] i');\n        if (this.options.pagination) {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchDown);\n        } else {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchUp);\n        }\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.refresh = function (params) {\n        if (params && params.url) {\n            this.options.url = params.url;\n        }\n        if (params && params.pageNumber) {\n            this.options.pageNumber = params.pageNumber;\n        }\n        if (params && params.pageSize) {\n            this.options.pageSize = params.pageSize;\n        }\n        this.initServer(params && params.silent,\n            params && params.query, params && params.url);\n        this.trigger('refresh', params);\n    };\n\n    BootstrapTable.prototype.resetWidth = function () {\n        if (this.options.showHeader && this.options.height) {\n            this.fitHeader();\n        }\n        if (this.options.showFooter) {\n            this.fitFooter();\n        }\n    };\n\n    BootstrapTable.prototype.showColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), true, true);\n    };\n\n    BootstrapTable.prototype.hideColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), false, true);\n    };\n\n    BootstrapTable.prototype.getHiddenColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return !column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.getVisibleColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.toggleAllColumns = function (visible) {\n        $.each(this.columns, function (i, column) {\n            this.columns[i].visible = visible;\n        });\n\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.showAllColumns = function () {\n        this.toggleAllColumns(true);\n    };\n\n    BootstrapTable.prototype.hideAllColumns = function () {\n        this.toggleAllColumns(false);\n    };\n\n    BootstrapTable.prototype.filterBy = function (columns) {\n        this.filterColumns = $.isEmptyObject(columns) ? {} : columns;\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.scrollTo = function (value) {\n        if (typeof value === 'string') {\n            value = value === 'bottom' ? this.$tableBody[0].scrollHeight : 0;\n        }\n        if (typeof value === 'number') {\n            this.$tableBody.scrollTop(value);\n        }\n        if (typeof value === 'undefined') {\n            return this.$tableBody.scrollTop();\n        }\n    };\n\n    BootstrapTable.prototype.getScrollPosition = function () {\n        return this.scrollTo();\n    };\n\n    BootstrapTable.prototype.selectPage = function (page) {\n        if (page > 0 && page <= this.options.totalPages) {\n            this.options.pageNumber = page;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.prevPage = function () {\n        if (this.options.pageNumber > 1) {\n            this.options.pageNumber--;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.nextPage = function () {\n        if (this.options.pageNumber < this.options.totalPages) {\n            this.options.pageNumber++;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.toggleView = function () {\n        this.options.cardView = !this.options.cardView;\n        this.initHeader();\n        // Fixed remove toolbar when click cardView button.\n        //that.initToolbar();\n        this.initBody();\n        this.trigger('toggle', this.options.cardView);\n    };\n\n    BootstrapTable.prototype.refreshOptions = function (options) {\n        //If the objects are equivalent then avoid the call of destroy / init methods\n        if (compareObjects(this.options, options, true)) {\n            return;\n        }\n        this.options = $.extend(this.options, options);\n        this.trigger('refresh-options', this.options);\n        this.destroy();\n        this.init();\n    };\n\n    BootstrapTable.prototype.resetSearch = function (text) {\n        var $search = this.$toolbar.find('.search input');\n        $search.val(text || '');\n        this.onSearch({currentTarget: $search});\n    };\n\n    BootstrapTable.prototype.expandRow_ = function (expand, index) {\n        var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', index));\n        if ($tr.next().is('tr.detail-view') === (expand ? false : true)) {\n            $tr.find('> td > .detail-icon').click();\n        }\n    };\n\n    BootstrapTable.prototype.expandRow = function (index) {\n        this.expandRow_(true, index);\n    };\n\n    BootstrapTable.prototype.collapseRow = function (index) {\n        this.expandRow_(false, index);\n    };\n\n    BootstrapTable.prototype.expandAllRows = function (isSubTable) {\n        if (isSubTable) {\n            var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', 0)),\n                that = this,\n                detailIcon = null,\n                executeInterval = false,\n                idInterval = -1;\n\n            if (!$tr.next().is('tr.detail-view')) {\n                $tr.find('> td > .detail-icon').click();\n                executeInterval = true;\n            } else if (!$tr.next().next().is('tr.detail-view')) {\n                $tr.next().find(\".detail-icon\").click();\n                executeInterval = true;\n            }\n\n            if (executeInterval) {\n                try {\n                    idInterval = setInterval(function () {\n                        detailIcon = that.$body.find(\"tr.detail-view\").last().find(\".detail-icon\");\n                        if (detailIcon.length > 0) {\n                            detailIcon.click();\n                        } else {\n                            clearInterval(idInterval);\n                        }\n                    }, 1);\n                } catch (ex) {\n                    clearInterval(idInterval);\n                }\n            }\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(true, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.collapseAllRows = function (isSubTable) {\n        if (isSubTable) {\n            this.expandRow_(false, 0);\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(false, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.updateFormatText = function (name, text) {\n        if (this.options[sprintf('format%s', name)]) {\n            if (typeof text === 'string') {\n                this.options[sprintf('format%s', name)] = function () {\n                    return text;\n                };\n            } else if (typeof text === 'function') {\n                this.options[sprintf('format%s', name)] = text;\n            }\n        }\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n    };\n\n    // BOOTSTRAP TABLE PLUGIN DEFINITION\n    // =======================\n\n    var allowedMethods = [\n        'getOptions',\n        'getSelections', 'getAllSelections', 'getData',\n        'load', 'append', 'prepend', 'remove', 'removeAll',\n        'insertRow', 'updateRow', 'updateCell', 'updateByUniqueId', 'removeByUniqueId',\n        'getRowByUniqueId', 'showRow', 'hideRow', 'getHiddenRows',\n        'mergeCells',\n        'checkAll', 'uncheckAll', 'checkInvert',\n        'check', 'uncheck',\n        'checkBy', 'uncheckBy',\n        'refresh',\n        'resetView',\n        'resetWidth',\n        'destroy',\n        'showLoading', 'hideLoading',\n        'showColumn', 'hideColumn', 'getHiddenColumns', 'getVisibleColumns',\n        'showAllColumns', 'hideAllColumns',\n        'filterBy',\n        'scrollTo',\n        'getScrollPosition',\n        'selectPage', 'prevPage', 'nextPage',\n        'togglePagination',\n        'toggleView',\n        'refreshOptions',\n        'resetSearch',\n        'expandRow', 'collapseRow', 'expandAllRows', 'collapseAllRows',\n        'updateFormatText'\n    ];\n\n    $.fn.bootstrapTable = function (option) {\n        var value,\n            args = Array.prototype.slice.call(arguments, 1);\n\n        this.each(function () {\n            var $this = $(this),\n                data = $this.data('bootstrap.table'),\n                options = $.extend({}, BootstrapTable.DEFAULTS, $this.data(),\n                    typeof option === 'object' && option);\n\n            if (typeof option === 'string') {\n                if ($.inArray(option, allowedMethods) < 0) {\n                    throw new Error(\"Unknown method: \" + option);\n                }\n\n                if (!data) {\n                    return;\n                }\n\n                value = data[option].apply(data, args);\n\n                if (option === 'destroy') {\n                    $this.removeData('bootstrap.table');\n                }\n            }\n\n            if (!data) {\n                $this.data('bootstrap.table', (data = new BootstrapTable(this, options)));\n            }\n        });\n\n        return typeof value === 'undefined' ? this : value;\n    };\n\n    $.fn.bootstrapTable.Constructor = BootstrapTable;\n    $.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS;\n    $.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS;\n    $.fn.bootstrapTable.locales = BootstrapTable.LOCALES;\n    $.fn.bootstrapTable.methods = allowedMethods;\n    $.fn.bootstrapTable.utils = {\n        sprintf: sprintf,\n        getFieldIndex: getFieldIndex,\n        compareObjects: compareObjects,\n        calculateObjectValue: calculateObjectValue,\n        getItemField: getItemField,\n        objectKeys: objectKeys,\n        isIEBrowser: isIEBrowser\n    };\n\n    // BOOTSTRAP TABLE INIT\n    // =======================\n\n    $(function () {\n        $('[data-toggle=\"table\"]').bootstrapTable();\n    });\n})(jQuery));\n\n\n/***/ }),\n\n/***/ 87:\n/***/ (function(module, exports) {\n\n/**\n * Bootstrap Table Spanish (España) translation\n * Author: Antonio Pérez <anpegar@gmail.com>\n */\n (function ($) {\n    'use strict';\n    \n    $.fn.bootstrapTable.locales['es-SP'] = {\n        formatLoadingMessage: function () {\n            return 'Cargando, por favor espera...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return pageNumber + ' registros por p&#225;gina.';\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return pageFrom + ' - ' + pageTo + ' de ' + totalRows + ' registros.';\n        },\n        formatSearch: function () {\n            return 'Buscar';\n        },\n        formatNoMatches: function () {\n            return 'No se han encontrado registros.';\n        },\n        formatRefresh: function () {\n            return 'Actualizar';\n        },\n        formatToggle: function () {\n            return 'Alternar';\n        },\n        formatColumns: function () {\n            return 'Columnas';\n        },\n        formatAllRows: function () {\n            return 'Todo';\n        }\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales['es-SP']);\n\n})(jQuery);\n\n/***/ }),\n\n/***/ 88:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"display\",attrs:{\"id\":_vm.ids,\"cellspacing\":\"0\",\"width\":\"100%\"}},[_c('thead'),_c('tbody')])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/5.js","<template lang=\"pug\">\n  .wrapper\n    .left-navigation.col-md-2\n      .aside-nav-container\n        .left-navigation__header\n          h3.left-navigation__header-text {{ title }}\n        ul.aside-nav\n          li.aside-buttons\n            a(href=\"\" id=\"make-payment\",data-toggle=\"modal\", data-target=\"#router-modal\")\n              i.material-icons add\n              | Agregar Seccion\n\n    .main-content.col-md-10\n      #extra-table-container\n        .searcher-container.main-toolbar#extra-toolbar\n          .input-group.search\n            .input-group-addon: i.material-icons search\n            input.form-control.searcher(type=\"text\" placeholder=\"Buscar\",v-model=\"search.text\")\n          .pull-right\n            a.btn.icon.print-table(target=\"_blank\", :href=\"reportUrl\"): i.material-icons print\n          .pull-right\n            select#select-sector.btn.btn-primary(v-model=\"selectedId\", @change=\"getIps\")\n              option(:value=\"section.id\", v-for=\"section of sections\") {{ section.text }}\n          .pull-right\n            select#client-filter.form-group.filter.btn.btn-primary\n              option(:value=\"option.key\", v-for=\"option of options\") {{ option.text }}\n        DataTable(ids=\"extra-table\", :parentId=\"parentId\", :data=\"content\", :cols=\"cols\", :toolbar=\"toolbar\", :options=\"tableOptions\", @cell-clicked=\"stateChanges\")\n        RouterModal(:sector=\"sector\", :modal-mode=\"modalMode\", @save=\"save\")\n</template>\n\n<script>\n  import RouterModal from './components/RouterModal.vue';\n  import DataTable from './../sharedComponents/DataTable.vue';\n  import utils from './../sharedComponents/utils';\n  import Progress from './../sharedComponents/Progress';\n\n  const heavyLoad = new Progress('heavy');\n\n  export default {\n    components: {\n      DataTable,\n      RouterModal\n    },\n    mounted() {\n      this.getSectionList();\n      utils.spyLeftNavigation();\n    },\n    data() {\n      return {\n        title: 'Secciones',\n        parentId: '#extra-table-container',\n        toolbar: '#extra-toolbar',\n        content: '',\n        selectedId: '',\n        modalMode: 'add',\n        options: [\n          { key: 'todo', text: 'Todos' },\n          { key: 'ocupado', text: 'Ocupadas' },\n          { key: 'disponible', text: 'Disponibles' },\n          { key: 'sectorial', text: 'Sectoriales' }\n        ],\n        sections: [],\n        sector: {\n          nombre: '',\n          codigo_area: ''\n        },\n        tableOptions: {\n          pageSize: 200,\n          pageList: [50, 100, 200, 500, 1000],\n          states: ['ocupado', 'disponible', 'sectorial'],\n          stateField: 'estado'\n        },\n        search: {\n          text: '',\n          state: 'activo'\n        },\n        totales: {\n          pagado: 0,\n          pendiente: 0,\n          total_vendido: 0\n        },\n        tableId: '#extra-table-full'\n      };\n    },\n    methods: {\n      save() {\n        const empty = utils.isEmpty(this.sector);\n        if (!empty) {\n          heavyLoad.play();\n          this.$http.post(`section/${this.modalMode}`, this.getDataForm(this.sector))\n            .then((res) => {\n              this.showMessage(res.data.message);\n              if (res.data.message.type === 'success') {\n                this.sectorEmpty();\n                $('#router-modal').modal('hide');\n              }\n              heavyLoad.stop();\n              this.getIps();\n              window.appBus.$emit('transaction');\n              if (this.modalMode === 'edit') {\n                $('#router-modal').modal('hide');\n              }\n            })\n            .catch((err) => {\n              heavyLoad.stop();\n              this.$toasted.error(err);\n            });\n        } else {\n          this.$toasted.error('Revise y LLene todos los campos por favor');\n        }\n      },\n\n      getIps() {\n        if (this.selectedId) {\n          this.$http.post('section/get_ips', this.getDataForm({ id_section: this.selectedId }))\n            .then((res) => {\n              this.content = res.data.ips;\n            })\n            .catch((err) => {\n              this.$toasted.error(err);\n            });\n        }\n      },\n\n      updateIpState(IP) {\n        const form = `data=${JSON.stringify(IP)}&extra_info=${JSON.stringify({\n          module: 'ip'\n        })}`;\n        this.send('axiosupdate', form)\n          .then((res) => {\n            displayMessage(res.data.mensaje);\n          });\n      },\n\n      sectorEmpty() {\n        this.sectorEmpty = {\n          nombre: '',\n          codigo_area: ''\n        };\n      },\n\n      getSectionList() {\n        heavyLoad.play();\n        this.$http.get('section/get_sections/list')\n          .then((res) => {\n            this.sections = res.data.sections;\n            this.selectedId = this.sections[0].id;\n            this.getIps();\n            heavyLoad.stop();\n          });\n      },\n\n      updateState(code, state) {\n        this.$http.post('section/update_ip', this.getDataForm({ code, state }))\n          .then((res) => {\n            this.getIps();\n            this.showMessage(res.data.message);\n          })\n          .catch((err) => {\n            this.$toasted.error(err);\n          });\n      },\n\n      stateChanges(name, args) {\n        const self = this;\n        const { options } = this;\n        const theOptions = options.map(option => ((option.key !== 'todo') ? `<option value='${option.key}'> ${option.key}</value>` : ''));\n        const selectState = `<select>${theOptions.join('')}</select>`;\n        const select = $(selectState);\n        const $this = args[3];\n        const row = args[2];\n        let state = args[1];\n\n        $this.html(select);\n        select.focus();\n        select.val(state);\n        select.on('change blur', () => {\n          state = select.val();\n          $this.html(state);\n          $this.removeClass('text-danger text-success text-primary');\n          self.updateState(row.codigo, state);\n        });\n        select.on('click', (event) => {\n          event.stopImmediatePropagation();\n        });\n      }\n    },\n    computed: {\n      reportUrl() {\n        return `${baseURL}process/getreport/secciones/${this.selectedId}`;\n      },\n      cols() {\n        return [\n          {\n            field: 'num',\n            title: 'No.',\n            valign: 'middle',\n            align: 'center',\n            sortable: 'true'\n          },\n          {\n            checkbox: true,\n            field: 'checkbox',\n            title: '',\n            valign: 'middle',\n            align: 'center',\n            class: 'hide'\n          },\n          {\n            field: 'sector',\n            title: 'Sector',\n            valign: 'middle',\n            align: 'center',\n          },\n          {\n            field: 'codigo',\n            title: 'Codigo',\n            valign: 'middle',\n            align: 'center',\n            class: 'hide'\n          },\n          {\n            field: 'ip',\n            title: 'Direccion IP',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'estado',\n            title: 'Estado',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'acciones',\n            title: 'Acciones',\n            valign: 'middle',\n            align: 'center'\n          },\n        ];\n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/modules/secciones/RouterSection.vue","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./RouterModal.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-23e52ed5\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./RouterModal.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/secciones/components/RouterModal.vue\n// module id = 154\n// module chunks = 5","<template lang=\"pug\">\n  .modal.fade#router-modal(tabindex=\"-1\", role=\"dialog\")\n    .modal-dialog(role=\"document\")\n      .modal-content\n        .modal-header\n          button(type=\"button\", class=\"close\", data-dismiss=\"modal\", aria-label=\"Close\"): span(aria-hidden=\"true\") &times;\n          h4.modal-title {{ modalTitle }}\n        .modal-body\n          form\n            .row\n              .col-md-12\n                .form-group\n                  label(for=\"#sector-name\") Nombre Sector\n                  input.form-control#secto-name(type=\"text\", v-model=\"sector.nombre\", placeholder=\"nombre sector\")\n                .form-group\n                  label(for=\"#sector-code\") Codigo\n                  input.form-control#sector-code(type=\"number\", v-model=\"sector.codigo_area\", placeholder=\"41\")\n              .col-md-12\n        .modal-footer\n          button(type=\"button\", class=\"btn\", data-dismiss=\"modal\") Cancelar\n          button(type=\"button\", class=\"btn save\", id=\"btn-sector__save\", @click=\"save\") Guardar\n</template>\n\n<script>\n  export default {\n    props: {\n      sector: {\n        type: Object\n      },\n      modalMode: {\n        type: String\n      }\n    },\n\n    mounted() {\n      $('#router-modal').on('hide.bs.modal', () => {\n        this.$emit('dimiss');\n      });\n    },\n\n    methods: {\n      save() {\n        this.$emit('save');\n      }\n    },\n\n    computed: {\n      modalTitle() {\n        let title;\n\n        switch (this.modalMode) {\n          case 'add':\n            title = 'Nuevo Sector';\n            break;\n          case 'edit':\n            title = 'Editar Sector';\n            break;\n          default:\n          // nothing\n            break;\n        }\n        return title;\n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/modules/secciones/components/RouterModal.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade\",attrs:{\"id\":\"router-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_vm._m(0,false,false),_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.modalTitle))])]),_c('div',{staticClass:\"modal-body\"},[_c('form',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"#sector-name\"}},[_vm._v(\"Nombre Sector\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sector.nombre),expression:\"sector.nombre\"}],staticClass:\"form-control\",attrs:{\"id\":\"secto-name\",\"type\":\"text\",\"placeholder\":\"nombre sector\"},domProps:{\"value\":(_vm.sector.nombre)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sector, \"nombre\", $event.target.value)}}})]),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"#sector-code\"}},[_vm._v(\"Codigo\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sector.codigo_area),expression:\"sector.codigo_area\"}],staticClass:\"form-control\",attrs:{\"id\":\"sector-code\",\"type\":\"number\",\"placeholder\":\"41\"},domProps:{\"value\":(_vm.sector.codigo_area)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sector, \"codigo_area\", $event.target.value)}}})])]),_c('div',{staticClass:\"col-md-12\"})])])]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"Cancelar\")]),_c('button',{staticClass:\"btn save\",attrs:{\"type\":\"button\",\"id\":\"btn-sector__save\"},on:{\"click\":_vm.save}},[_vm._v(\"Guardar\")])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-23e52ed5\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/modules/secciones/components/RouterModal.vue\n// module id = 156\n// module chunks = 5","export default class Progress {\n  constructor(type, text = 'Cargando ...') {\n    this.type = type;\n    this.content = `\n    <div class=\"heavy-loader active\">\n      <div class=\"circle-load\"></div>\n      <div class=\"message\"> ${text}</div>\n    </div>`;\n    this.$heavy = null;\n    this.$body = $('body');\n    this.$line = $('.loader');\n  }\n\n  play() {\n    this.stop();\n    if (this.type === 'heavy') {\n      $('body').append(this.content);\n      this.$heavy = $('.heavy-loader');\n      $('body').css({ overflow: 'hidden' });\n    } else {\n      $('.loader').css({\n        display: 'block'\n      });\n    }\n  }\n\n  stop() {\n    if (this.type === 'heavy' && this.$heavy) {\n      this.$heavy.remove();\n      $('body').css({ overflow: 'auto' });\n    } else {\n      $('.loader').css({ display: 'none' });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/sharedComponents/Progress.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"left-navigation col-md-2\"},[_c('div',{staticClass:\"aside-nav-container\"},[_c('div',{staticClass:\"left-navigation__header\"},[_c('h3',{staticClass:\"left-navigation__header-text\"},[_vm._v(_vm._s(_vm.title))])]),_vm._m(0,false,false)])]),_c('div',{staticClass:\"main-content col-md-10\"},[_c('div',{attrs:{\"id\":\"extra-table-container\"}},[_c('div',{staticClass:\"searcher-container main-toolbar\",attrs:{\"id\":\"extra-toolbar\"}},[_c('div',{staticClass:\"input-group search\"},[_vm._m(1,false,false),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search.text),expression:\"search.text\"}],staticClass:\"form-control searcher\",attrs:{\"type\":\"text\",\"placeholder\":\"Buscar\"},domProps:{\"value\":(_vm.search.text)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.search, \"text\", $event.target.value)}}})]),_c('div',{staticClass:\"pull-right\"},[_c('a',{staticClass:\"btn icon print-table\",attrs:{\"target\":\"_blank\",\"href\":_vm.reportUrl}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"print\")])])]),_c('div',{staticClass:\"pull-right\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedId),expression:\"selectedId\"}],staticClass:\"btn btn-primary\",attrs:{\"id\":\"select-sector\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedId=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.getIps]}},_vm._l((_vm.sections),function(section){return _c('option',{domProps:{\"value\":section.id}},[_vm._v(_vm._s(section.text))])}))]),_c('div',{staticClass:\"pull-right\"},[_c('select',{staticClass:\"form-group filter btn btn-primary\",attrs:{\"id\":\"client-filter\"}},_vm._l((_vm.options),function(option){return _c('option',{domProps:{\"value\":option.key}},[_vm._v(_vm._s(option.text))])}))])]),_c('DataTable',{attrs:{\"ids\":\"extra-table\",\"parentId\":_vm.parentId,\"data\":_vm.content,\"cols\":_vm.cols,\"toolbar\":_vm.toolbar,\"options\":_vm.tableOptions},on:{\"cell-clicked\":_vm.stateChanges}}),_c('RouterModal',{attrs:{\"sector\":_vm.sector,\"modal-mode\":_vm.modalMode},on:{\"save\":_vm.save}})],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"aside-nav\"},[_c('li',{staticClass:\"aside-buttons\"},[_c('a',{attrs:{\"href\":\"\",\"id\":\"make-payment\",\"data-toggle\":\"modal\",\"data-target\":\"#router-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"add\")]),_vm._v(\"Agregar Seccion\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-addon\"},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"search\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1988f582\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/modules/secciones/RouterSection.vue\n// module id = 158\n// module chunks = 5","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./RouterSection.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1988f582\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./RouterSection.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/secciones/RouterSection.vue\n// module id = 82\n// module chunks = 5","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DataTable.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-357e043f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DataTable.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/sharedComponents/DataTable.vue\n// module id = 84\n// module chunks = 0 1 2 3 5 6","<template lang=\"pug\">\n\n  table(:id=\"ids\", class=\"display\", cellspacing=\"0\", width=\"100%\")\n    thead\n    tbody\n</template>\n\n<script>\n  import 'bootstrap-table';\n  import '../../../node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP';\n\n  export default {\n    props: {\n      cols: {\n        type: Array\n      },\n      data: {\n        type: String\n      },\n      options: {\n        type: Object\n      },\n      ids: {\n        type: String\n      },\n      endpoint: {\n        type: String\n      },\n      parentId: {\n        type: String\n      },\n      toolbar: {\n        type: String\n      }\n    },\n    mounted() {\n      this.init();\n      this.refresh(this.data);\n    },\n    watch: {\n      data() {\n        this.refresh(this.data);\n        this.intialized = false;\n      }\n    },\n\n    methods: {\n\n      init() {\n        this.table = $(`#${this.ids}`);\n        this.$filter = $(`${this.parentId} .filter`);\n        this.activate();\n        this.listen();\n      },\n\n      activate(page) {\n        const self = this;\n        this.table.bootstrapTable({\n          columns: self.cols,\n          sortOrder: 'asc',\n          search: 'true',\n          toolbar: self.toolbar,\n          showRefresh: false,\n          showColumns: false,\n          showExport: false,\n          minimumCountColumns: 2,\n          showPaginationSwitch: false,\n          pagination: true,\n          idField: 'id',\n          pageSize: self.options.pageSize || 50,\n          pageList: self.options.pageList || [10, 20, 50, 100, 2000],\n          showFooter: false,\n          clickToSelect: true,\n          singleSelect: true,\n          striped: false,\n          fixed: true,\n          footer: false\n        });\n        this.table.find('tbody').css({ display: 'table-row-group' });\n        this.table.addClass('innertable');\n        this.$filter.change();\n        if (!this.intialized) {\n          this.initialized = true;\n          this.customSearch();\n          this.listen();\n        }\n        if (page) {\n          this.table.bootstrapTable('selectPage', page);\n        }\n      },\n\n      getSelectedRow(emit = true) {\n        const row = this.table.bootstrapTable('getSelections')[0];\n        if (emit) {\n          this.$emit('selected-row', row);\n        }\n        return row;\n      },\n\n      getId(emit = true) {\n        const self = this;\n        const id = $.map(this.table.bootstrapTable('getSelections'), row => row[self.idField]);\n        if (emit) {\n          this.$emit('id', id);\n        }\n        return id;\n      },\n\n      refresh(content) {\n        const options = this.table.bootstrapTable('getOptions');\n        this.table.bootstrapTable('destroy');\n        this.table.find('tbody').html(content);\n        this.activate(options.pageNumber);\n      },\n\n      listen() {\n        const self = this;\n        this.table.on('all.bs.table', (e, name, args) => {\n          if (name === 'check.bs.table' || name === 'uncheck.bs.table') {\n            const row = this.getSelectedRow();\n            self.$emit('check-uncheck', name, row, args);\n          } else if (name === 'click-cell.bs.table' && args[0] === 'estado') {\n            self.$emit('cell-clicked', name, args);\n          }\n        });\n\n        $(window).resize(() => {\n          self.table.bootstrapTable('resetView');\n        });\n      },\n\n      customSearch() {\n        $(`${this.parentId} .pull-right.search`).addClass('hide');\n        const $inputSearch = $(`${this.parentId} .search input`);\n\n        const self = this;\n        // eslint-disable-next-line\n        $inputSearch.on('click', function () {\n          const $this = $(this).parent();\n          $this.addClass('focus');\n        });\n        // eslint-disable-next-line\n        $inputSearch.on('blur', function () {\n          const $this = $(this).parent();\n          $this.removeClass('focus');\n        });\n        // eslint-disable-next-line\n        this.$filter.on('change', function () {\n          let filterWord = $(this).val();\n          if (filterWord === 'todo') {\n            filterWord = self.options.states;\n          }\n          self.applyFilter(filterWord);\n        });\n      },\n\n      applyFilter(filter) {\n        const self = this;\n        this.table.bootstrapTable('filterBy', {\n          [self.options.stateField]: filter\n        });\n        self.$emit('filter.bs');\n      }\n    }\n  };\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/modules/sharedComponents/DataTable.vue","/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.11.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\nexport default (function ($) {\n    'use strict';\n\n    // TOOLS DEFINITION\n    // ======================\n\n    var cachedWidth = null;\n\n    // it only does '%s', and return '' when arguments are undefined\n    var sprintf = function (str) {\n        var args = arguments,\n            flag = true,\n            i = 1;\n\n        str = str.replace(/%s/g, function () {\n            var arg = args[i++];\n\n            if (typeof arg === 'undefined') {\n                flag = false;\n                return '';\n            }\n            return arg;\n        });\n        return flag ? str : '';\n    };\n\n    var getPropertyFromOther = function (list, from, to, value) {\n        var result = '';\n        $.each(list, function (i, item) {\n            if (item[from] === value) {\n                result = item[to];\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n\n    var getFieldIndex = function (columns, field) {\n        var index = -1;\n\n        $.each(columns, function (i, column) {\n            if (column.field === field) {\n                index = i;\n                return false;\n            }\n            return true;\n        });\n        return index;\n    };\n\n    // http://jsfiddle.net/wenyi/47nz7ez9/3/\n    var setFieldIndex = function (columns) {\n        var i, j, k,\n            totalCol = 0,\n            flag = [];\n\n        for (i = 0; i < columns[0].length; i++) {\n            totalCol += columns[0][i].colspan || 1;\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            flag[i] = [];\n            for (j = 0; j < totalCol; j++) {\n                flag[i][j] = false;\n            }\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            for (j = 0; j < columns[i].length; j++) {\n                var r = columns[i][j],\n                    rowspan = r.rowspan || 1,\n                    colspan = r.colspan || 1,\n                    index = $.inArray(false, flag[i]);\n\n                if (colspan === 1) {\n                    r.fieldIndex = index;\n                    // when field is undefined, use index instead\n                    if (typeof r.field === 'undefined') {\n                        r.field = index;\n                    }\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    flag[i + k][index] = true;\n                }\n                for (k = 0; k < colspan; k++) {\n                    flag[i][index + k] = true;\n                }\n            }\n        }\n    };\n\n    var getScrollBarWidth = function () {\n        if (cachedWidth === null) {\n            var inner = $('<p/>').addClass('fixed-table-scroll-inner'),\n                outer = $('<div/>').addClass('fixed-table-scroll-outer'),\n                w1, w2;\n\n            outer.append(inner);\n            $('body').append(outer);\n\n            w1 = inner[0].offsetWidth;\n            outer.css('overflow', 'scroll');\n            w2 = inner[0].offsetWidth;\n\n            if (w1 === w2) {\n                w2 = outer[0].clientWidth;\n            }\n\n            outer.remove();\n            cachedWidth = w1 - w2;\n        }\n        return cachedWidth;\n    };\n\n    var calculateObjectValue = function (self, name, args, defaultValue) {\n        var func = name;\n\n        if (typeof name === 'string') {\n            // support obj.func1.func2\n            var names = name.split('.');\n\n            if (names.length > 1) {\n                func = window;\n                $.each(names, function (i, f) {\n                    func = func[f];\n                });\n            } else {\n                func = window[name];\n            }\n        }\n        if (typeof func === 'object') {\n            return func;\n        }\n        if (typeof func === 'function') {\n            return func.apply(self, args || []);\n        }\n        if (!func && typeof name === 'string' && sprintf.apply(this, [name].concat(args))) {\n            return sprintf.apply(this, [name].concat(args));\n        }\n        return defaultValue;\n    };\n\n    var compareObjects = function (objectA, objectB, compareLength) {\n        // Create arrays of property names\n        var objectAProperties = Object.getOwnPropertyNames(objectA),\n            objectBProperties = Object.getOwnPropertyNames(objectB),\n            propName = '';\n\n        if (compareLength) {\n            // If number of properties is different, objects are not equivalent\n            if (objectAProperties.length !== objectBProperties.length) {\n                return false;\n            }\n        }\n\n        for (var i = 0; i < objectAProperties.length; i++) {\n            propName = objectAProperties[i];\n\n            // If the property is not in the object B properties, continue with the next property\n            if ($.inArray(propName, objectBProperties) > -1) {\n                // If values of same property are not equal, objects are not equivalent\n                if (objectA[propName] !== objectB[propName]) {\n                    return false;\n                }\n            }\n        }\n\n        // If we made it this far, objects are considered equivalent\n        return true;\n    };\n\n    var escapeHTML = function (text) {\n        if (typeof text === 'string') {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;')\n                .replace(/`/g, '&#x60;');\n        }\n        return text;\n    };\n\n    var getRealDataAttr = function (dataAttr) {\n        for (var attr in dataAttr) {\n            var auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase();\n            if (auxAttr !== attr) {\n                dataAttr[auxAttr] = dataAttr[attr];\n                delete dataAttr[attr];\n            }\n        }\n\n        return dataAttr;\n    };\n\n    var getItemField = function (item, field, escape) {\n        var value = item;\n\n        if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n            return escape ? escapeHTML(item[field]) : item[field];\n        }\n        var props = field.split('.');\n        for (var p in props) {\n            if (props.hasOwnProperty(p)) {\n                value = value && value[props[p]];\n            }\n        }\n        return escape ? escapeHTML(value) : value;\n    };\n\n    var isIEBrowser = function () {\n        return !!(navigator.userAgent.indexOf(\"MSIE \") > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./));\n    };\n\n    var objectKeys = function () {\n        // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n                    dontEnums = [\n                        'toString',\n                        'toLocaleString',\n                        'valueOf',\n                        'hasOwnProperty',\n                        'isPrototypeOf',\n                        'propertyIsEnumerable',\n                        'constructor'\n                    ],\n                    dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    var result = [], prop, i;\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n                    return result;\n                };\n            }());\n        }\n    };\n\n    // BOOTSTRAP TABLE CLASS DEFINITION\n    // ======================\n\n    var BootstrapTable = function (el, options) {\n        this.options = options;\n        this.$el = $(el);\n        this.$el_ = this.$el.clone();\n        this.timeoutId_ = 0;\n        this.timeoutFooter_ = 0;\n\n        this.init();\n    };\n\n    BootstrapTable.DEFAULTS = {\n        classes: 'table table-hover',\n        sortClass: undefined,\n        locale: undefined,\n        height: undefined,\n        undefinedText: '-',\n        sortName: undefined,\n        sortOrder: 'asc',\n        sortStable: false,\n        striped: false,\n        columns: [[]],\n        data: [],\n        totalField: 'total',\n        dataField: 'rows',\n        method: 'get',\n        url: undefined,\n        ajax: undefined,\n        cache: true,\n        contentType: 'application/json',\n        dataType: 'json',\n        ajaxOptions: {},\n        queryParams: function (params) {\n            return params;\n        },\n        queryParamsType: 'limit', // undefined\n        responseHandler: function (res) {\n            return res;\n        },\n        pagination: false,\n        onlyInfoPagination: false,\n        paginationLoop: true,\n        sidePagination: 'client', // client or server\n        totalRows: 0, // server side need to set\n        pageNumber: 1,\n        pageSize: 10,\n        pageList: [10, 25, 50, 100],\n        paginationHAlign: 'right', //right, left\n        paginationVAlign: 'bottom', //bottom, top, both\n        paginationDetailHAlign: 'left', //right, left\n        paginationPreText: '&lsaquo;',\n        paginationNextText: '&rsaquo;',\n        search: false,\n        searchOnEnterKey: false,\n        strictSearch: false,\n        searchAlign: 'right',\n        selectItemName: 'btSelectItem',\n        showHeader: true,\n        showFooter: false,\n        showColumns: false,\n        showPaginationSwitch: false,\n        showRefresh: false,\n        showToggle: false,\n        buttonsAlign: 'right',\n        smartDisplay: true,\n        escape: false,\n        minimumCountColumns: 1,\n        idField: undefined,\n        uniqueId: undefined,\n        cardView: false,\n        detailView: false,\n        detailFormatter: function (index, row) {\n            return '';\n        },\n        trimOnSearch: true,\n        clickToSelect: false,\n        singleSelect: false,\n        toolbar: undefined,\n        toolbarAlign: 'left',\n        checkboxHeader: true,\n        sortable: true,\n        silentSort: true,\n        maintainSelected: false,\n        searchTimeOut: 500,\n        searchText: '',\n        iconSize: undefined,\n        buttonsClass: 'default',\n        iconsPrefix: 'glyphicon', // glyphicon of fa (font awesome)\n        icons: {\n            paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n            paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n            refresh: 'glyphicon-refresh icon-refresh',\n            toggle: 'glyphicon-list-alt icon-list-alt',\n            columns: 'glyphicon-th icon-th',\n            detailOpen: 'glyphicon-plus icon-plus',\n            detailClose: 'glyphicon-minus icon-minus'\n        },\n\n        customSearch: $.noop,\n\n        customSort: $.noop,\n\n        rowStyle: function (row, index) {\n            return {};\n        },\n\n        rowAttributes: function (row, index) {\n            return {};\n        },\n\n        footerStyle: function (row, index) {\n            return {};\n        },\n\n        onAll: function (name, args) {\n            return false;\n        },\n        onClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onDblClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onClickRow: function (item, $element) {\n            return false;\n        },\n        onDblClickRow: function (item, $element) {\n            return false;\n        },\n        onSort: function (name, order) {\n            return false;\n        },\n        onCheck: function (row) {\n            return false;\n        },\n        onUncheck: function (row) {\n            return false;\n        },\n        onCheckAll: function (rows) {\n            return false;\n        },\n        onUncheckAll: function (rows) {\n            return false;\n        },\n        onCheckSome: function (rows) {\n            return false;\n        },\n        onUncheckSome: function (rows) {\n            return false;\n        },\n        onLoadSuccess: function (data) {\n            return false;\n        },\n        onLoadError: function (status) {\n            return false;\n        },\n        onColumnSwitch: function (field, checked) {\n            return false;\n        },\n        onPageChange: function (number, size) {\n            return false;\n        },\n        onSearch: function (text) {\n            return false;\n        },\n        onToggle: function (cardView) {\n            return false;\n        },\n        onPreBody: function (data) {\n            return false;\n        },\n        onPostBody: function () {\n            return false;\n        },\n        onPostHeader: function () {\n            return false;\n        },\n        onExpandRow: function (index, row, $detail) {\n            return false;\n        },\n        onCollapseRow: function (index, row) {\n            return false;\n        },\n        onRefreshOptions: function (options) {\n            return false;\n        },\n        onRefresh: function (params) {\n          return false;\n        },\n        onResetView: function () {\n            return false;\n        }\n    };\n\n    BootstrapTable.LOCALES = {};\n\n    BootstrapTable.LOCALES['en-US'] = BootstrapTable.LOCALES.en = {\n        formatLoadingMessage: function () {\n            return 'Loading, please wait...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return sprintf('%s rows per page', pageNumber);\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return sprintf('Showing %s to %s of %s rows', pageFrom, pageTo, totalRows);\n        },\n        formatDetailPagination: function (totalRows) {\n            return sprintf('Showing %s rows', totalRows);\n        },\n        formatSearch: function () {\n            return 'Search';\n        },\n        formatNoMatches: function () {\n            return 'No matching records found';\n        },\n        formatPaginationSwitch: function () {\n            return 'Hide/Show pagination';\n        },\n        formatRefresh: function () {\n            return 'Refresh';\n        },\n        formatToggle: function () {\n            return 'Toggle';\n        },\n        formatColumns: function () {\n            return 'Columns';\n        },\n        formatAllRows: function () {\n            return 'All';\n        }\n    };\n\n    $.extend(BootstrapTable.DEFAULTS, BootstrapTable.LOCALES['en-US']);\n\n    BootstrapTable.COLUMN_DEFAULTS = {\n        radio: false,\n        checkbox: false,\n        checkboxEnabled: true,\n        field: undefined,\n        title: undefined,\n        titleTooltip: undefined,\n        'class': undefined,\n        align: undefined, // left, right, center\n        halign: undefined, // left, right, center\n        falign: undefined, // left, right, center\n        valign: undefined, // top, middle, bottom\n        width: undefined,\n        sortable: false,\n        order: 'asc', // asc, desc\n        visible: true,\n        switchable: true,\n        clickToSelect: true,\n        formatter: undefined,\n        footerFormatter: undefined,\n        events: undefined,\n        sorter: undefined,\n        sortName: undefined,\n        cellStyle: undefined,\n        searchable: true,\n        searchFormatter: true,\n        cardVisible: true,\n        escape : false\n    };\n\n    BootstrapTable.EVENTS = {\n        'all.bs.table': 'onAll',\n        'click-cell.bs.table': 'onClickCell',\n        'dbl-click-cell.bs.table': 'onDblClickCell',\n        'click-row.bs.table': 'onClickRow',\n        'dbl-click-row.bs.table': 'onDblClickRow',\n        'sort.bs.table': 'onSort',\n        'check.bs.table': 'onCheck',\n        'uncheck.bs.table': 'onUncheck',\n        'check-all.bs.table': 'onCheckAll',\n        'uncheck-all.bs.table': 'onUncheckAll',\n        'check-some.bs.table': 'onCheckSome',\n        'uncheck-some.bs.table': 'onUncheckSome',\n        'load-success.bs.table': 'onLoadSuccess',\n        'load-error.bs.table': 'onLoadError',\n        'column-switch.bs.table': 'onColumnSwitch',\n        'page-change.bs.table': 'onPageChange',\n        'search.bs.table': 'onSearch',\n        'toggle.bs.table': 'onToggle',\n        'pre-body.bs.table': 'onPreBody',\n        'post-body.bs.table': 'onPostBody',\n        'post-header.bs.table': 'onPostHeader',\n        'expand-row.bs.table': 'onExpandRow',\n        'collapse-row.bs.table': 'onCollapseRow',\n        'refresh-options.bs.table': 'onRefreshOptions',\n        'reset-view.bs.table': 'onResetView',\n        'refresh.bs.table': 'onRefresh'\n    };\n\n    BootstrapTable.prototype.init = function () {\n        this.initLocale();\n        this.initContainer();\n        this.initTable();\n        this.initHeader();\n        this.initData();\n        this.initHiddenRows();\n        this.initFooter();\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n        this.initSearchText();\n        this.initServer();\n    };\n\n    BootstrapTable.prototype.initLocale = function () {\n        if (this.options.locale) {\n            var parts = this.options.locale.split(/-|_/);\n            parts[0].toLowerCase();\n            if (parts[1]) parts[1].toUpperCase();\n            if ($.fn.bootstrapTable.locales[this.options.locale]) {\n                // locale as requested\n                $.extend(this.options, $.fn.bootstrapTable.locales[this.options.locale]);\n            } else if ($.fn.bootstrapTable.locales[parts.join('-')]) {\n                // locale with sep set to - (in case original was specified with _)\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts.join('-')]);\n            } else if ($.fn.bootstrapTable.locales[parts[0]]) {\n                // short locale language code (i.e. 'en')\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts[0]]);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.initContainer = function () {\n        this.$container = $([\n            '<div class=\"bootstrap-table\">',\n            '<div class=\"fixed-table-toolbar\"></div>',\n            this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\" style=\"clear: both;\"></div>' :\n                '',\n            '<div class=\"fixed-table-container\">',\n            '<div class=\"fixed-table-header\"><table></table></div>',\n            '<div class=\"fixed-table-body\">',\n            '<div class=\"fixed-table-loading\">',\n            this.options.formatLoadingMessage(),\n            '</div>',\n            '</div>',\n            '<div class=\"fixed-table-footer\"><table><tr></tr></table></div>',\n            this.options.paginationVAlign === 'bottom' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\"></div>' :\n                '',\n            '</div>',\n            '</div>'\n        ].join(''));\n\n        this.$container.insertAfter(this.$el);\n        this.$tableContainer = this.$container.find('.fixed-table-container');\n        this.$tableHeader = this.$container.find('.fixed-table-header');\n        this.$tableBody = this.$container.find('.fixed-table-body');\n        this.$tableLoading = this.$container.find('.fixed-table-loading');\n        this.$tableFooter = this.$container.find('.fixed-table-footer');\n        this.$toolbar = this.$container.find('.fixed-table-toolbar');\n        this.$pagination = this.$container.find('.fixed-table-pagination');\n\n        this.$tableBody.append(this.$el);\n        this.$container.after('<div class=\"clearfix\"></div>');\n\n        this.$el.addClass(this.options.classes);\n        if (this.options.striped) {\n            this.$el.addClass('table-striped');\n        }\n        if ($.inArray('table-no-bordered', this.options.classes.split(' ')) !== -1) {\n            this.$tableContainer.addClass('table-no-bordered');\n        }\n    };\n\n    BootstrapTable.prototype.initTable = function () {\n        var that = this,\n            columns = [],\n            data = [];\n\n        this.$header = this.$el.find('>thead');\n        if (!this.$header.length) {\n            this.$header = $('<thead></thead>').appendTo(this.$el);\n        }\n        this.$header.find('tr').each(function () {\n            var column = [];\n\n            $(this).find('th').each(function () {\n                // Fix #2014 - getFieldIndex and elsewhere assume this is string, causes issues if not\n                if (typeof $(this).data('field') !== 'undefined') {\n                    $(this).data('field', $(this).data('field') + '');\n                }\n                column.push($.extend({}, {\n                    title: $(this).html(),\n                    'class': $(this).attr('class'),\n                    titleTooltip: $(this).attr('title'),\n                    rowspan: $(this).attr('rowspan') ? +$(this).attr('rowspan') : undefined,\n                    colspan: $(this).attr('colspan') ? +$(this).attr('colspan') : undefined\n                }, $(this).data()));\n            });\n            columns.push(column);\n        });\n        if (!$.isArray(this.options.columns[0])) {\n            this.options.columns = [this.options.columns];\n        }\n        this.options.columns = $.extend(true, [], columns, this.options.columns);\n        this.columns = [];\n\n        setFieldIndex(this.options.columns);\n        $.each(this.options.columns, function (i, columns) {\n            $.each(columns, function (j, column) {\n                column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, column);\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.columns[column.fieldIndex] = column;\n                }\n\n                that.options.columns[i][j] = column;\n            });\n        });\n\n        // if options.data is setting, do not process tbody data\n        if (this.options.data.length) {\n            return;\n        }\n\n        var m = [];\n        this.$el.find('>tbody>tr').each(function (y) {\n            var row = {};\n\n            // save tr's id, class and data-* attributes\n            row._id = $(this).attr('id');\n            row._class = $(this).attr('class');\n            row._data = getRealDataAttr($(this).data());\n\n            $(this).find('>td').each(function (x) {\n                var $this = $(this),\n                    cspan = +$this.attr('colspan') || 1,\n                    rspan = +$this.attr('rowspan') || 1,\n                    tx, ty;\n\n                for (; m[y] && m[y][x]; x++); //skip already occupied cells in current row\n\n                for (tx = x; tx < x + cspan; tx++) { //mark matrix elements occupied by current cell with true\n                    for (ty = y; ty < y + rspan; ty++) {\n                        if (!m[ty]) { //fill missing rows\n                            m[ty] = [];\n                        }\n                        m[ty][tx] = true;\n                    }\n                }\n\n                var field = that.columns[x].field;\n\n                row[field] = $(this).html();\n                // save td's id, class and data-* attributes\n                row['_' + field + '_id'] = $(this).attr('id');\n                row['_' + field + '_class'] = $(this).attr('class');\n                row['_' + field + '_rowspan'] = $(this).attr('rowspan');\n                row['_' + field + '_colspan'] = $(this).attr('colspan');\n                row['_' + field + '_title'] = $(this).attr('title');\n                row['_' + field + '_data'] = getRealDataAttr($(this).data());\n            });\n            data.push(row);\n        });\n        this.options.data = data;\n        if (data.length) this.fromHtml = true;\n    };\n\n    BootstrapTable.prototype.initHeader = function () {\n        var that = this,\n            visibleColumns = {},\n            html = [];\n\n        this.header = {\n            fields: [],\n            styles: [],\n            classes: [],\n            formatters: [],\n            events: [],\n            sorters: [],\n            sortNames: [],\n            cellStyles: [],\n            searchables: []\n        };\n\n        $.each(this.options.columns, function (i, columns) {\n            html.push('<tr>');\n\n            if (i === 0 && !that.options.cardView && that.options.detailView) {\n                html.push(sprintf('<th class=\"detail\" rowspan=\"%s\"><div class=\"fht-cell\"></div></th>',\n                    that.options.columns.length));\n            }\n\n            $.each(columns, function (j, column) {\n                var text = '',\n                    halign = '', // header align style\n                    align = '', // body align style\n                    style = '',\n                    class_ = sprintf(' class=\"%s\"', column['class']),\n                    order = that.options.sortOrder || column.order,\n                    unitWidth = 'px',\n                    width = column.width;\n\n                if (column.width !== undefined && (!that.options.cardView)) {\n                    if (typeof column.width === 'string') {\n                        if (column.width.indexOf('%') !== -1) {\n                            unitWidth = '%';\n                        }\n                    }\n                }\n                if (column.width && typeof column.width === 'string') {\n                    width = column.width.replace('%', '').replace('px', '');\n                }\n\n                halign = sprintf('text-align: %s; ', column.halign ? column.halign : column.align);\n                align = sprintf('text-align: %s; ', column.align);\n                style = sprintf('vertical-align: %s; ', column.valign);\n                style += sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n                    '36px' : (width ? width + unitWidth : undefined));\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.header.fields[column.fieldIndex] = column.field;\n                    that.header.styles[column.fieldIndex] = align + style;\n                    that.header.classes[column.fieldIndex] = class_;\n                    that.header.formatters[column.fieldIndex] = column.formatter;\n                    that.header.events[column.fieldIndex] = column.events;\n                    that.header.sorters[column.fieldIndex] = column.sorter;\n                    that.header.sortNames[column.fieldIndex] = column.sortName;\n                    that.header.cellStyles[column.fieldIndex] = column.cellStyle;\n                    that.header.searchables[column.fieldIndex] = column.searchable;\n\n                    if (!column.visible) {\n                        return;\n                    }\n\n                    if (that.options.cardView && (!column.cardVisible)) {\n                        return;\n                    }\n\n                    visibleColumns[column.field] = column;\n                }\n\n                html.push('<th' + sprintf(' title=\"%s\"', column.titleTooltip),\n                    column.checkbox || column.radio ?\n                        sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n                        class_,\n                    sprintf(' style=\"%s\"', halign + style),\n                    sprintf(' rowspan=\"%s\"', column.rowspan),\n                    sprintf(' colspan=\"%s\"', column.colspan),\n                    sprintf(' data-field=\"%s\"', column.field),\n                    '>');\n\n                html.push(sprintf('<div class=\"th-inner %s\">', that.options.sortable && column.sortable ?\n                    'sortable both' : ''));\n\n                text = that.options.escape ? escapeHTML(column.title) : column.title;\n\n                if (column.checkbox) {\n                    if (!that.options.singleSelect && that.options.checkboxHeader) {\n                        text = '<input name=\"btSelectAll\" type=\"checkbox\" />';\n                    }\n                    that.header.stateField = column.field;\n                }\n                if (column.radio) {\n                    text = '';\n                    that.header.stateField = column.field;\n                    that.options.singleSelect = true;\n                }\n\n                html.push(text);\n                html.push('</div>');\n                html.push('<div class=\"fht-cell\"></div>');\n                html.push('</div>');\n                html.push('</th>');\n            });\n            html.push('</tr>');\n        });\n\n        this.$header.html(html.join(''));\n        this.$header.find('th[data-field]').each(function (i) {\n            $(this).data(visibleColumns[$(this).data('field')]);\n        });\n        this.$container.off('click', '.th-inner').on('click', '.th-inner', function (event) {\n            var target = $(this);\n\n            if (that.options.detailView) {\n                if (target.closest('.bootstrap-table')[0] !== that.$container[0])\n                    return false;\n            }\n\n            if (that.options.sortable && target.parent().data().sortable) {\n                that.onSort(event);\n            }\n        });\n\n        this.$header.children().children().off('keypress').on('keypress', function (event) {\n            if (that.options.sortable && $(this).data().sortable) {\n                var code = event.keyCode || event.which;\n                if (code == 13) { //Enter keycode\n                    that.onSort(event);\n                }\n            }\n        });\n\n        $(window).off('resize.bootstrap-table');\n        if (!this.options.showHeader || this.options.cardView) {\n            this.$header.hide();\n            this.$tableHeader.hide();\n            this.$tableLoading.css('top', 0);\n        } else {\n            this.$header.show();\n            this.$tableHeader.show();\n            this.$tableLoading.css('top', this.$header.outerHeight() + 1);\n            // Assign the correct sortable arrow\n            this.getCaret();\n            $(window).on('resize.bootstrap-table', $.proxy(this.resetWidth, this));\n        }\n\n        this.$selectAll = this.$header.find('[name=\"btSelectAll\"]');\n        this.$selectAll.off('click').on('click', function () {\n                var checked = $(this).prop('checked');\n                that[checked ? 'checkAll' : 'uncheckAll']();\n                that.updateSelected();\n            });\n    };\n\n    BootstrapTable.prototype.initFooter = function () {\n        if (!this.options.showFooter || this.options.cardView) {\n            this.$tableFooter.hide();\n        } else {\n            this.$tableFooter.show();\n        }\n    };\n\n    /**\n     * @param data\n     * @param type: append / prepend\n     */\n    BootstrapTable.prototype.initData = function (data, type) {\n        if (type === 'append') {\n            this.data = this.data.concat(data);\n        } else if (type === 'prepend') {\n            this.data = [].concat(data).concat(this.data);\n        } else {\n            this.data = data || this.options.data;\n        }\n\n        // Fix #839 Records deleted when adding new row on filtered table\n        if (type === 'append') {\n            this.options.data = this.options.data.concat(data);\n        } else if (type === 'prepend') {\n            this.options.data = [].concat(data).concat(this.options.data);\n        } else {\n            this.options.data = this.data;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            return;\n        }\n        this.initSort();\n    };\n\n    BootstrapTable.prototype.initSort = function () {\n        var that = this,\n            name = this.options.sortName,\n            order = this.options.sortOrder === 'desc' ? -1 : 1,\n            index = $.inArray(this.options.sortName, this.header.fields),\n            timeoutId = 0;\n\n        if (this.options.customSort !== $.noop) {\n            this.options.customSort.apply(this, [this.options.sortName, this.options.sortOrder]);\n            return;\n        }\n\n        if (index !== -1) {\n            if (this.options.sortStable) {\n                $.each(this.data, function (i, row) {\n                    if (!row.hasOwnProperty('_position')) row._position = i;\n                });\n            }\n\n            this.data.sort(function (a, b) {\n                if (that.header.sortNames[index]) {\n                    name = that.header.sortNames[index];\n                }\n                var aa = getItemField(a, name, that.options.escape),\n                    bb = getItemField(b, name, that.options.escape),\n                    value = calculateObjectValue(that.header, that.header.sorters[index], [aa, bb]);\n\n                if (value !== undefined) {\n                    return order * value;\n                }\n\n                // Fix #161: undefined or null string sort bug.\n                if (aa === undefined || aa === null) {\n                    aa = '';\n                }\n                if (bb === undefined || bb === null) {\n                    bb = '';\n                }\n\n                if (that.options.sortStable && aa === bb) {\n                    aa = a._position;\n                    bb = b._position;\n                }\n\n                // IF both values are numeric, do a numeric comparison\n                if ($.isNumeric(aa) && $.isNumeric(bb)) {\n                    // Convert numerical values form string to float.\n                    aa = parseFloat(aa);\n                    bb = parseFloat(bb);\n                    if (aa < bb) {\n                        return order * -1;\n                    }\n                    return order;\n                }\n\n                if (aa === bb) {\n                    return 0;\n                }\n\n                // If value is not a string, convert to string\n                if (typeof aa !== 'string') {\n                    aa = aa.toString();\n                }\n\n                if (aa.localeCompare(bb) === -1) {\n                    return order * -1;\n                }\n\n                return order;\n            });\n\n            if (this.options.sortClass !== undefined) {\n                clearTimeout(timeoutId);\n                timeoutId = setTimeout(function () {\n                    that.$el.removeClass(that.options.sortClass);\n                    var index = that.$header.find(sprintf('[data-field=\"%s\"]',\n                        that.options.sortName).index() + 1);\n                    that.$el.find(sprintf('tr td:nth-child(%s)', index))\n                        .addClass(that.options.sortClass);\n                }, 250);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSort = function (event) {\n        var $this = event.type === \"keypress\" ? $(event.currentTarget) : $(event.currentTarget).parent(),\n            $this_ = this.$header.find('th').eq($this.index());\n\n        this.$header.add(this.$header_).find('span.order').remove();\n\n        if (this.options.sortName === $this.data('field')) {\n            this.options.sortOrder = this.options.sortOrder === 'asc' ? 'desc' : 'asc';\n        } else {\n            this.options.sortName = $this.data('field');\n            this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc';\n        }\n        this.trigger('sort', this.options.sortName, this.options.sortOrder);\n\n        $this.add($this_).data('order', this.options.sortOrder);\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n\n        if (this.options.sidePagination === 'server') {\n            this.initServer(this.options.silentSort);\n            return;\n        }\n\n        this.initSort();\n        this.initBody();\n    };\n\n    BootstrapTable.prototype.initToolbar = function () {\n        var that = this,\n            html = [],\n            timeoutId = 0,\n            $keepOpen,\n            $search,\n            switchableCount = 0;\n\n        if (this.$toolbar.find('.bs-bars').children().length) {\n            $('body').append($(this.options.toolbar));\n        }\n        this.$toolbar.html('');\n\n        if (typeof this.options.toolbar === 'string' || typeof this.options.toolbar === 'object') {\n            $(sprintf('<div class=\"bs-bars pull-%s\"></div>', this.options.toolbarAlign))\n                .appendTo(this.$toolbar)\n                .append($(this.options.toolbar));\n        }\n\n        // showColumns, showToggle, showRefresh\n        html = [sprintf('<div class=\"columns columns-%s btn-group pull-%s\">',\n            this.options.buttonsAlign, this.options.buttonsAlign)];\n\n        if (typeof this.options.icons === 'string') {\n            this.options.icons = calculateObjectValue(null, this.options.icons);\n        }\n\n        if (this.options.showPaginationSwitch) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"paginationSwitch\" aria-label=\"pagination Switch\" title=\"%s\">',\n                    this.options.formatPaginationSwitch()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.paginationSwitchDown),\n                '</button>');\n        }\n\n        if (this.options.showRefresh) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"refresh\" aria-label=\"refresh\" title=\"%s\">',\n                    this.options.formatRefresh()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.refresh),\n                '</button>');\n        }\n\n        if (this.options.showToggle) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"toggle\" aria-label=\"toggle\" title=\"%s\">',\n                    this.options.formatToggle()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.toggle),\n                '</button>');\n        }\n\n        if (this.options.showColumns) {\n            html.push(sprintf('<div class=\"keep-open btn-group\" title=\"%s\">',\n                    this.options.formatColumns()),\n                '<button type=\"button\" aria-label=\"columns\" class=\"btn' +\n                sprintf(' btn-%s', this.options.buttonsClass) +\n                sprintf(' btn-%s', this.options.iconSize) +\n                ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.columns),\n                ' <span class=\"caret\"></span>',\n                '</button>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">');\n\n            $.each(this.columns, function (i, column) {\n                if (column.radio || column.checkbox) {\n                    return;\n                }\n\n                if (that.options.cardView && !column.cardVisible) {\n                    return;\n                }\n\n                var checked = column.visible ? ' checked=\"checked\"' : '';\n\n                if (column.switchable) {\n                    html.push(sprintf('<li role=\"menuitem\">' +\n                        '<label><input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s> %s</label>' +\n                        '</li>', column.field, i, checked, column.title));\n                    switchableCount++;\n                }\n            });\n            html.push('</ul>',\n                '</div>');\n        }\n\n        html.push('</div>');\n\n        // Fix #188: this.showToolbar is for extensions\n        if (this.showToolbar || html.length > 2) {\n            this.$toolbar.append(html.join(''));\n        }\n\n        if (this.options.showPaginationSwitch) {\n            this.$toolbar.find('button[name=\"paginationSwitch\"]')\n                .off('click').on('click', $.proxy(this.togglePagination, this));\n        }\n\n        if (this.options.showRefresh) {\n            this.$toolbar.find('button[name=\"refresh\"]')\n                .off('click').on('click', $.proxy(this.refresh, this));\n        }\n\n        if (this.options.showToggle) {\n            this.$toolbar.find('button[name=\"toggle\"]')\n                .off('click').on('click', function () {\n                    that.toggleView();\n                });\n        }\n\n        if (this.options.showColumns) {\n            $keepOpen = this.$toolbar.find('.keep-open');\n\n            if (switchableCount <= this.options.minimumCountColumns) {\n                $keepOpen.find('input').prop('disabled', true);\n            }\n\n            $keepOpen.find('li').off('click').on('click', function (event) {\n                event.stopImmediatePropagation();\n            });\n            $keepOpen.find('input').off('click').on('click', function () {\n                var $this = $(this);\n\n                that.toggleColumn($(this).val(), $this.prop('checked'), false);\n                that.trigger('column-switch', $(this).data('field'), $this.prop('checked'));\n            });\n        }\n\n        if (this.options.search) {\n            html = [];\n            html.push(\n                '<div class=\"pull-' + this.options.searchAlign + ' search\">',\n                sprintf('<input class=\"form-control' +\n                    sprintf(' input-%s', this.options.iconSize) +\n                    '\" type=\"text\" placeholder=\"%s\">',\n                    this.options.formatSearch()),\n                '</div>');\n\n            this.$toolbar.append(html.join(''));\n            $search = this.$toolbar.find('.search input');\n            $search.off('keyup drop blur').on('keyup drop blur', function (event) {\n                if (that.options.searchOnEnterKey && event.keyCode !== 13) {\n                    return;\n                }\n\n                if ($.inArray(event.keyCode, [37, 38, 39, 40]) > -1) {\n                    return;\n                }\n\n                clearTimeout(timeoutId); // doesn't matter if it's 0\n                timeoutId = setTimeout(function () {\n                    that.onSearch(event);\n                }, that.options.searchTimeOut);\n            });\n\n            if (isIEBrowser()) {\n                $search.off('mouseup').on('mouseup', function (event) {\n                    clearTimeout(timeoutId); // doesn't matter if it's 0\n                    timeoutId = setTimeout(function () {\n                        that.onSearch(event);\n                    }, that.options.searchTimeOut);\n                });\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSearch = function (event) {\n        var text = $.trim($(event.currentTarget).val());\n\n        // trim search input\n        if (this.options.trimOnSearch && $(event.currentTarget).val() !== text) {\n            $(event.currentTarget).val(text);\n        }\n\n        if (text === this.searchText) {\n            return;\n        }\n        this.searchText = text;\n        this.options.searchText = text;\n\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n        this.trigger('search', text);\n    };\n\n    BootstrapTable.prototype.initSearch = function () {\n        var that = this;\n\n        if (this.options.sidePagination !== 'server') {\n            if (this.options.customSearch !== $.noop) {\n                this.options.customSearch.apply(this, [this.searchText]);\n                return;\n            }\n\n            var s = this.searchText && (this.options.escape ?\n                escapeHTML(this.searchText) : this.searchText).toLowerCase();\n            var f = $.isEmptyObject(this.filterColumns) ? null : this.filterColumns;\n\n            // Check filter\n            this.data = f ? $.grep(this.options.data, function (item, i) {\n                for (var key in f) {\n                    if ($.isArray(f[key]) && $.inArray(item[key], f[key]) === -1 ||\n                            !$.isArray(f[key]) && item[key] !== f[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }) : this.options.data;\n\n            this.data = s ? $.grep(this.data, function (item, i) {\n                for (var j = 0; j < that.header.fields.length; j++) {\n\n                    if (!that.header.searchables[j]) {\n                        continue;\n                    }\n\n                    var key = $.isNumeric(that.header.fields[j]) ? parseInt(that.header.fields[j], 10) : that.header.fields[j];\n                    var column = that.columns[getFieldIndex(that.columns, key)];\n                    var value;\n\n                    if (typeof key === 'string') {\n                        value = item;\n                        var props = key.split('.');\n                        for (var prop_index = 0; prop_index < props.length; prop_index++) {\n                            value = value[props[prop_index]];\n                        }\n\n                        // Fix #142: respect searchForamtter boolean\n                        if (column && column.searchFormatter) {\n                            value = calculateObjectValue(column,\n                                that.header.formatters[j], [value, item, i], value);\n                        }\n                    } else {\n                        value = item[key];\n                    }\n\n                    if (typeof value === 'string' || typeof value === 'number') {\n                        if (that.options.strictSearch) {\n                            if ((value + '').toLowerCase() === s) {\n                                return true;\n                            }\n                        } else {\n                            if ((value + '').toLowerCase().indexOf(s) !== -1) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }) : this.data;\n        }\n    };\n\n    BootstrapTable.prototype.initPagination = function () {\n        if (!this.options.pagination) {\n            this.$pagination.hide();\n            return;\n        } else {\n            this.$pagination.show();\n        }\n\n        var that = this,\n            html = [],\n            $allSelected = false,\n            i, from, to,\n            $pageList,\n            $first, $pre,\n            $next, $last,\n            $number,\n            data = this.getData(),\n            pageList = this.options.pageList;\n\n        if (this.options.sidePagination !== 'server') {\n            this.options.totalRows = data.length;\n        }\n\n        this.totalPages = 0;\n        if (this.options.totalRows) {\n            if (this.options.pageSize === this.options.formatAllRows()) {\n                this.options.pageSize = this.options.totalRows;\n                $allSelected = true;\n            } else if (this.options.pageSize === this.options.totalRows) {\n                // Fix #667 Table with pagination,\n                // multiple pages and a search that matches to one page throws exception\n                var pageLst = typeof this.options.pageList === 'string' ?\n                    this.options.pageList.replace('[', '').replace(']', '')\n                        .replace(/ /g, '').toLowerCase().split(',') : this.options.pageList;\n                if ($.inArray(this.options.formatAllRows().toLowerCase(), pageLst)  > -1) {\n                    $allSelected = true;\n                }\n            }\n\n            this.totalPages = ~~((this.options.totalRows - 1) / this.options.pageSize) + 1;\n\n            this.options.totalPages = this.totalPages;\n        }\n        if (this.totalPages > 0 && this.options.pageNumber > this.totalPages) {\n            this.options.pageNumber = this.totalPages;\n        }\n\n        this.pageFrom = (this.options.pageNumber - 1) * this.options.pageSize + 1;\n        this.pageTo = this.options.pageNumber * this.options.pageSize;\n        if (this.pageTo > this.options.totalRows) {\n            this.pageTo = this.options.totalRows;\n        }\n\n        html.push(\n            '<div class=\"pull-' + this.options.paginationDetailHAlign + ' pagination-detail\">',\n            '<span class=\"pagination-info\">',\n            this.options.onlyInfoPagination ? this.options.formatDetailPagination(this.options.totalRows) :\n            this.options.formatShowingRows(this.pageFrom, this.pageTo, this.options.totalRows),\n            '</span>');\n\n        if (!this.options.onlyInfoPagination) {\n            html.push('<span class=\"page-list\">');\n\n            var pageNumber = [\n                    sprintf('<span class=\"btn-group %s\">',\n                        this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                            'dropdown' : 'dropup'),\n                    '<button type=\"button\" class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                    '<span class=\"page-size\">',\n                    $allSelected ? this.options.formatAllRows() : this.options.pageSize,\n                    '</span>',\n                    ' <span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu\" role=\"menu\">'\n                ];\n\n            if (typeof this.options.pageList === 'string') {\n                var list = this.options.pageList.replace('[', '').replace(']', '')\n                    .replace(/ /g, '').split(',');\n\n                pageList = [];\n                $.each(list, function (i, value) {\n                    pageList.push(value.toUpperCase() === that.options.formatAllRows().toUpperCase() ?\n                        that.options.formatAllRows() : +value);\n                });\n            }\n\n            $.each(pageList, function (i, page) {\n                if (!that.options.smartDisplay || i === 0 || pageList[i - 1] < that.options.totalRows) {\n                    var active;\n                    if ($allSelected) {\n                        active = page === that.options.formatAllRows() ? ' class=\"active\"' : '';\n                    } else {\n                        active = page === that.options.pageSize ? ' class=\"active\"' : '';\n                    }\n                    pageNumber.push(sprintf('<li role=\"menuitem\"%s><a href=\"#\">%s</a></li>', active, page));\n                }\n            });\n            pageNumber.push('</ul></span>');\n\n            html.push(this.options.formatRecordsPerPage(pageNumber.join('')));\n            html.push('</span>');\n\n            html.push('</div>',\n                '<div class=\"pull-' + this.options.paginationHAlign + ' pagination\">',\n                '<ul class=\"pagination' + sprintf(' pagination-%s', this.options.iconSize) + '\">',\n                '<li class=\"page-pre\"><a href=\"#\">' + this.options.paginationPreText + '</a></li>');\n\n            if (this.totalPages < 5) {\n                from = 1;\n                to = this.totalPages;\n            } else {\n                from = this.options.pageNumber - 2;\n                to = from + 4;\n                if (from < 1) {\n                    from = 1;\n                    to = 5;\n                }\n                if (to > this.totalPages) {\n                    to = this.totalPages;\n                    from = to - 4;\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber >= 3) {\n                    html.push('<li class=\"page-first' + (1 === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', 1, '</a>',\n                        '</li>');\n\n                    from++;\n                }\n\n                if (this.options.pageNumber >= 4) {\n                    if (this.options.pageNumber == 4 || this.totalPages == 6 || this.totalPages == 7) {\n                        from--;\n                    } else {\n                        html.push('<li class=\"page-first-separator disabled\">',\n                            '<a href=\"#\">...</a>',\n                            '</li>');\n                    }\n\n                    to--;\n                }\n            }\n\n            if (this.totalPages >= 7) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    from--;\n                }\n            }\n\n            if (this.totalPages == 6) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    to++;\n                }\n            } else if (this.totalPages >= 7) {\n                if (this.totalPages == 7 || this.options.pageNumber >= (this.totalPages - 3)) {\n                    to++;\n                }\n            }\n\n            for (i = from; i <= to; i++) {\n                html.push('<li class=\"page-number' + (i === this.options.pageNumber ? ' active' : '') + '\">',\n                    '<a href=\"#\">', i, '</a>',\n                    '</li>');\n            }\n\n            if (this.totalPages >= 8) {\n                if (this.options.pageNumber <= (this.totalPages - 4)) {\n                    html.push('<li class=\"page-last-separator disabled\">',\n                        '<a href=\"#\">...</a>',\n                        '</li>');\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber <= (this.totalPages - 3)) {\n                    html.push('<li class=\"page-last' + (this.totalPages === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', this.totalPages, '</a>',\n                        '</li>');\n                }\n            }\n\n            html.push(\n                '<li class=\"page-next\"><a href=\"#\">' + this.options.paginationNextText + '</a></li>',\n                '</ul>',\n                '</div>');\n        }\n        this.$pagination.html(html.join(''));\n\n        if (!this.options.onlyInfoPagination) {\n            $pageList = this.$pagination.find('.page-list a');\n            $first = this.$pagination.find('.page-first');\n            $pre = this.$pagination.find('.page-pre');\n            $next = this.$pagination.find('.page-next');\n            $last = this.$pagination.find('.page-last');\n            $number = this.$pagination.find('.page-number');\n\n            if (this.options.smartDisplay) {\n                if (this.totalPages <= 1) {\n                    this.$pagination.find('div.pagination').hide();\n                }\n                if (pageList.length < 2 || this.options.totalRows <= pageList[0]) {\n                    this.$pagination.find('span.page-list').hide();\n                }\n\n                // when data is empty, hide the pagination\n                this.$pagination[this.getData().length ? 'show' : 'hide']();\n            }\n\n            if (!this.options.paginationLoop) {\n                if (this.options.pageNumber === 1) {\n                    $pre.addClass('disabled');\n                }\n                if (this.options.pageNumber === this.totalPages) {\n                    $next.addClass('disabled');\n                }\n            }\n\n            if ($allSelected) {\n                this.options.pageSize = this.options.formatAllRows();\n            }\n            $pageList.off('click').on('click', $.proxy(this.onPageListChange, this));\n            $first.off('click').on('click', $.proxy(this.onPageFirst, this));\n            $pre.off('click').on('click', $.proxy(this.onPagePre, this));\n            $next.off('click').on('click', $.proxy(this.onPageNext, this));\n            $last.off('click').on('click', $.proxy(this.onPageLast, this));\n            $number.off('click').on('click', $.proxy(this.onPageNumber, this));\n        }\n    };\n\n    BootstrapTable.prototype.updatePagination = function (event) {\n        // Fix #171: IE disabled button can be clicked bug.\n        if (event && $(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        if (!this.options.maintainSelected) {\n            this.resetRows();\n        }\n\n        this.initPagination();\n        if (this.options.sidePagination === 'server') {\n            this.initServer();\n        } else {\n            this.initBody();\n        }\n\n        this.trigger('page-change', this.options.pageNumber, this.options.pageSize);\n    };\n\n    BootstrapTable.prototype.onPageListChange = function (event) {\n        var $this = $(event.currentTarget);\n\n        $this.parent().addClass('active').siblings().removeClass('active');\n        this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n            this.options.formatAllRows() : +$this.text();\n        this.$toolbar.find('.page-size').text(this.options.pageSize);\n\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageFirst = function (event) {\n        this.options.pageNumber = 1;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPagePre = function (event) {\n        if ((this.options.pageNumber - 1) === 0) {\n            this.options.pageNumber = this.options.totalPages;\n        } else {\n            this.options.pageNumber--;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNext = function (event) {\n        if ((this.options.pageNumber + 1) > this.options.totalPages) {\n            this.options.pageNumber = 1;\n        } else {\n            this.options.pageNumber++;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageLast = function (event) {\n        this.options.pageNumber = this.totalPages;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNumber = function (event) {\n        if (this.options.pageNumber === +$(event.currentTarget).text()) {\n            return;\n        }\n        this.options.pageNumber = +$(event.currentTarget).text();\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.initRow = function(item, i, data, parentDom) {\n        var that=this,\n            key,\n            html = [],\n            style = {},\n            csses = [],\n            data_ = '',\n            attributes = {},\n            htmlAttributes = [];\n\n        if ($.inArray(item, this.hiddenRows) > -1) {\n            return;\n        }\n\n        style = calculateObjectValue(this.options, this.options.rowStyle, [item, i], style);\n\n        if (style && style.css) {\n            for (key in style.css) {\n                csses.push(key + ': ' + style.css[key]);\n            }\n        }\n\n        attributes = calculateObjectValue(this.options,\n            this.options.rowAttributes, [item, i], attributes);\n\n        if (attributes) {\n            for (key in attributes) {\n                htmlAttributes.push(sprintf('%s=\"%s\"', key, escapeHTML(attributes[key])));\n            }\n        }\n\n        if (item._data && !$.isEmptyObject(item._data)) {\n            $.each(item._data, function(k, v) {\n                // ignore data-index\n                if (k === 'index') {\n                    return;\n                }\n                data_ += sprintf(' data-%s=\"%s\"', k, v);\n            });\n        }\n\n        html.push('<tr',\n            sprintf(' %s', htmlAttributes.join(' ')),\n            sprintf(' id=\"%s\"', $.isArray(item) ? undefined : item._id),\n            sprintf(' class=\"%s\"', style.classes || ($.isArray(item) ? undefined : item._class)),\n            sprintf(' data-index=\"%s\"', i),\n            sprintf(' data-uniqueid=\"%s\"', item[this.options.uniqueId]),\n            sprintf('%s', data_),\n            '>'\n        );\n\n        if (this.options.cardView) {\n            html.push(sprintf('<td colspan=\"%s\"><div class=\"card-views\">', this.header.fields.length));\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td>',\n                '<a class=\"detail-icon\" href=\"#\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.detailOpen),\n                '</a>',\n                '</td>');\n        }\n\n        $.each(this.header.fields, function(j, field) {\n            var text = '',\n                value_ = getItemField(item, field, that.options.escape),\n                value = '',\n                type = '',\n                cellStyle = {},\n                id_ = '',\n                class_ = that.header.classes[j],\n                data_ = '',\n                rowspan_ = '',\n                colspan_ = '',\n                title_ = '',\n                column = that.columns[j];\n\n            if (that.fromHtml && typeof value_ === 'undefined') {\n                return;\n            }\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            if (column.escape) {\n                value_ = escapeHTML(value_);\n            }\n\n            style = sprintf('style=\"%s\"', csses.concat(that.header.styles[j]).join('; '));\n\n            // handle td's id and class\n            if (item['_' + field + '_id']) {\n                id_ = sprintf(' id=\"%s\"', item['_' + field + '_id']);\n            }\n            if (item['_' + field + '_class']) {\n                class_ = sprintf(' class=\"%s\"', item['_' + field + '_class']);\n            }\n            if (item['_' + field + '_rowspan']) {\n                rowspan_ = sprintf(' rowspan=\"%s\"', item['_' + field + '_rowspan']);\n            }\n            if (item['_' + field + '_colspan']) {\n                colspan_ = sprintf(' colspan=\"%s\"', item['_' + field + '_colspan']);\n            }\n            if (item['_' + field + '_title']) {\n                title_ = sprintf(' title=\"%s\"', item['_' + field + '_title']);\n            }\n            cellStyle = calculateObjectValue(that.header,\n                that.header.cellStyles[j], [value_, item, i, field], cellStyle);\n            if (cellStyle.classes) {\n                class_ = sprintf(' class=\"%s\"', cellStyle.classes);\n            }\n            if (cellStyle.css) {\n                var csses_ = [];\n                for (var key in cellStyle.css) {\n                    csses_.push(key + ': ' + cellStyle.css[key]);\n                }\n                style = sprintf('style=\"%s\"', csses_.concat(that.header.styles[j]).join('; '));\n            }\n\n            value = calculateObjectValue(column,\n                that.header.formatters[j], [value_, item, i], value_);\n\n            if (item['_' + field + '_data'] && !$.isEmptyObject(item['_' + field + '_data'])) {\n                $.each(item['_' + field + '_data'], function(k, v) {\n                    // ignore data-index\n                    if (k === 'index') {\n                        return;\n                    }\n                    data_ += sprintf(' data-%s=\"%s\"', k, v);\n                });\n            }\n\n            if (column.checkbox || column.radio) {\n                type = column.checkbox ? 'checkbox' : type;\n                type = column.radio ? 'radio' : type;\n\n                text = [sprintf(that.options.cardView ?\n                        '<div class=\"card-view %s\">' : '<td class=\"bs-checkbox %s\">', column['class'] || ''),\n                    '<input' +\n                    sprintf(' data-index=\"%s\"', i) +\n                    sprintf(' name=\"%s\"', that.options.selectItemName) +\n                    sprintf(' type=\"%s\"', type) +\n                    sprintf(' value=\"%s\"', item[that.options.idField]) +\n                    sprintf(' checked=\"%s\"', value === true ||\n                        (value_ || value && value.checked) ? 'checked' : undefined) +\n                    sprintf(' disabled=\"%s\"', !column.checkboxEnabled ||\n                        (value && value.disabled) ? 'disabled' : undefined) +\n                    ' />',\n                    that.header.formatters[j] && typeof value === 'string' ? value : '',\n                    that.options.cardView ? '</div>' : '</td>'\n                ].join('');\n\n                item[that.header.stateField] = value === true || (value && value.checked);\n            } else {\n                value = typeof value === 'undefined' || value === null ?\n                    that.options.undefinedText : value;\n\n                text = that.options.cardView ? ['<div class=\"card-view\">',\n                    that.options.showHeader ? sprintf('<span class=\"title\" %s>%s</span>', style,\n                        getPropertyFromOther(that.columns, 'field', 'title', field)) : '',\n                    sprintf('<span class=\"value\">%s</span>', value),\n                    '</div>'\n                ].join('') : [sprintf('<td%s %s %s %s %s %s %s>',\n                        id_, class_, style, data_, rowspan_, colspan_, title_),\n                    value,\n                    '</td>'\n                ].join('');\n\n                // Hide empty data on Card view when smartDisplay is set to true.\n                if (that.options.cardView && that.options.smartDisplay && value === '') {\n                    // Should set a placeholder for event binding correct fieldIndex\n                    text = '<div class=\"card-view\"></div>';\n                }\n            }\n\n            html.push(text);\n        });\n\n        if (this.options.cardView) {\n            html.push('</div></td>');\n        }\n        html.push('</tr>');\n\n        return html.join(' ');\n    };\n\n    BootstrapTable.prototype.initBody = function (fixedScroll) {\n        var that = this,\n            html = [],\n            data = this.getData();\n\n        this.trigger('pre-body', data);\n\n        this.$body = this.$el.find('>tbody');\n        if (!this.$body.length) {\n            this.$body = $('<tbody></tbody>').appendTo(this.$el);\n        }\n\n        //Fix #389 Bootstrap-table-flatJSON is not working\n\n        if (!this.options.pagination || this.options.sidePagination === 'server') {\n            this.pageFrom = 1;\n            this.pageTo = data.length;\n        }\n\n        var trFragments = $(document.createDocumentFragment());\n        var hasTr;\n\n        for (var i = this.pageFrom - 1; i < this.pageTo; i++) {\n            var item = data[i];\n            var tr = this.initRow(item, i, data, trFragments);\n            hasTr = hasTr || !!tr;\n            if (tr&&tr!==true) {\n                trFragments.append(tr);\n            }\n        }\n\n        // show no records\n        if (!hasTr) {\n            trFragments.append('<tr class=\"no-records-found\">' +\n                sprintf('<td colspan=\"%s\">%s</td>',\n                this.$header.find('th').length,\n                this.options.formatNoMatches()) +\n                '</tr>');\n        }\n\n        this.$body.html(trFragments);\n\n        if (!fixedScroll) {\n            this.scrollTo(0);\n        }\n\n        // click to select by column\n        this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', function (e) {\n            var $td = $(this),\n                $tr = $td.parent(),\n                item = that.data[$tr.data('index')],\n                index = $td[0].cellIndex,\n                fields = that.getVisibleFields(),\n                field = fields[that.options.detailView && !that.options.cardView ? index - 1 : index],\n                column = that.columns[getFieldIndex(that.columns, field)],\n                value = getItemField(item, field, that.options.escape);\n\n            if ($td.find('.detail-icon').length) {\n                return;\n            }\n\n            that.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td);\n            that.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field);\n\n            // if click to select - then trigger the checkbox/radio click\n            if (e.type === 'click' && that.options.clickToSelect && column.clickToSelect) {\n                var $selectItem = $tr.find(sprintf('[name=\"%s\"]', that.options.selectItemName));\n                if ($selectItem.length) {\n                    $selectItem[0].click(); // #144: .trigger('click') bug\n                }\n            }\n        });\n\n        this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', function () {\n            var $this = $(this),\n                $tr = $this.parent().parent(),\n                index = $tr.data('index'),\n                row = data[index]; // Fix #980 Detail view, when searching, returns wrong row\n\n            // remove and update\n            if ($tr.next().is('tr.detail-view')) {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailOpen));\n                that.trigger('collapse-row', index, row);\n                $tr.next().remove();\n            } else {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailClose));\n                $tr.after(sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.find('td').length));\n                var $element = $tr.next().find('td');\n                var content = calculateObjectValue(that.options, that.options.detailFormatter, [index, row, $element], '');\n                if($element.length === 1) {\n                    $element.append(content);\n                }\n                that.trigger('expand-row', index, row, $element);\n            }\n            that.resetView();\n            return false;\n        });\n\n        this.$selectItem = this.$body.find(sprintf('[name=\"%s\"]', this.options.selectItemName));\n        this.$selectItem.off('click').on('click', function (event) {\n            event.stopImmediatePropagation();\n\n            var $this = $(this),\n                checked = $this.prop('checked'),\n                row = that.data[$this.data('index')];\n\n            if (that.options.maintainSelected && $(this).is(':radio')) {\n                $.each(that.options.data, function (i, row) {\n                    row[that.header.stateField] = false;\n                });\n            }\n\n            row[that.header.stateField] = checked;\n\n            if (that.options.singleSelect) {\n                that.$selectItem.not(this).each(function () {\n                    that.data[$(this).data('index')][that.header.stateField] = false;\n                });\n                that.$selectItem.filter(':checked').not(this).prop('checked', false);\n            }\n\n            that.updateSelected();\n            that.trigger(checked ? 'check' : 'uncheck', row, $this);\n        });\n\n        $.each(this.header.events, function (i, events) {\n            if (!events) {\n                return;\n            }\n            // fix bug, if events is defined with namespace\n            if (typeof events === 'string') {\n                events = calculateObjectValue(null, events);\n            }\n\n            var field = that.header.fields[i],\n                fieldIndex = $.inArray(field, that.getVisibleFields());\n\n            if (that.options.detailView && !that.options.cardView) {\n                fieldIndex += 1;\n            }\n\n            for (var key in events) {\n                that.$body.find('>tr:not(.no-records-found)').each(function () {\n                    var $tr = $(this),\n                        $td = $tr.find(that.options.cardView ? '.card-view' : 'td').eq(fieldIndex),\n                        index = key.indexOf(' '),\n                        name = key.substring(0, index),\n                        el = key.substring(index + 1),\n                        func = events[key];\n\n                    $td.find(el).off(name).on(name, function (e) {\n                        var index = $tr.data('index'),\n                            row = that.data[index],\n                            value = row[field];\n\n                        func.apply(this, [e, value, row, index]);\n                    });\n                });\n            }\n        });\n\n        this.updateSelected();\n        this.resetView();\n\n        this.trigger('post-body', data);\n    };\n\n    BootstrapTable.prototype.initServer = function (silent, query, url) {\n        var that = this,\n            data = {},\n            params = {\n                searchText: this.searchText,\n                sortName: this.options.sortName,\n                sortOrder: this.options.sortOrder\n            },\n            request;\n\n        if (this.options.pagination) {\n            params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n                this.options.totalRows : this.options.pageSize;\n            params.pageNumber = this.options.pageNumber;\n        }\n\n        if (!(url || this.options.url) && !this.options.ajax) {\n            return;\n        }\n\n        if (this.options.queryParamsType === 'limit') {\n            params = {\n                search: params.searchText,\n                sort: params.sortName,\n                order: params.sortOrder\n            };\n\n            if (this.options.pagination) {\n                params.offset = this.options.pageSize === this.options.formatAllRows() ?\n                    0 : this.options.pageSize * (this.options.pageNumber - 1);\n                params.limit = this.options.pageSize === this.options.formatAllRows() ?\n                    this.options.totalRows : this.options.pageSize;\n            }\n        }\n\n        if (!($.isEmptyObject(this.filterColumnsPartial))) {\n            params.filter = JSON.stringify(this.filterColumnsPartial, null);\n        }\n\n        data = calculateObjectValue(this.options, this.options.queryParams, [params], data);\n\n        $.extend(data, query || {});\n\n        // false to stop request\n        if (data === false) {\n            return;\n        }\n\n        if (!silent) {\n            this.$tableLoading.show();\n        }\n        request = $.extend({}, calculateObjectValue(null, this.options.ajaxOptions), {\n            type: this.options.method,\n            url:  url || this.options.url,\n            data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n                JSON.stringify(data) : data,\n            cache: this.options.cache,\n            contentType: this.options.contentType,\n            dataType: this.options.dataType,\n            success: function (res) {\n                res = calculateObjectValue(that.options, that.options.responseHandler, [res], res);\n\n                that.load(res);\n                that.trigger('load-success', res);\n                if (!silent) that.$tableLoading.hide();\n            },\n            error: function (res) {\n                that.trigger('load-error', res.status, res);\n                if (!silent) that.$tableLoading.hide();\n            }\n        });\n\n        if (this.options.ajax) {\n            calculateObjectValue(this, this.options.ajax, [request], null);\n        } else {\n            if (this._xhr && this._xhr.readyState !== 4) {\n                this._xhr.abort();\n            }\n            this._xhr = $.ajax(request);\n        }\n    };\n\n    BootstrapTable.prototype.initSearchText = function () {\n        if (this.options.search) {\n            if (this.options.searchText !== '') {\n                var $search = this.$toolbar.find('.search input');\n                $search.val(this.options.searchText);\n                this.onSearch({currentTarget: $search});\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getCaret = function () {\n        var that = this;\n\n        $.each(this.$header.find('th'), function (i, th) {\n            $(th).find('.sortable').removeClass('desc asc').addClass($(th).data('field') === that.options.sortName ? that.options.sortOrder : 'both');\n        });\n    };\n\n    BootstrapTable.prototype.updateSelected = function () {\n        var checkAll = this.$selectItem.filter(':enabled').length &&\n            this.$selectItem.filter(':enabled').length ===\n            this.$selectItem.filter(':enabled').filter(':checked').length;\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checkAll);\n\n        this.$selectItem.each(function () {\n            $(this).closest('tr')[$(this).prop('checked') ? 'addClass' : 'removeClass']('selected');\n        });\n    };\n\n    BootstrapTable.prototype.updateRows = function () {\n        var that = this;\n\n        this.$selectItem.each(function () {\n            that.data[$(this).data('index')][that.header.stateField] = $(this).prop('checked');\n        });\n    };\n\n    BootstrapTable.prototype.resetRows = function () {\n        var that = this;\n\n        $.each(this.data, function (i, row) {\n            that.$selectAll.prop('checked', false);\n            that.$selectItem.prop('checked', false);\n            if (that.header.stateField) {\n                row[that.header.stateField] = false;\n            }\n        });\n        this.initHiddenRows();\n    };\n\n    BootstrapTable.prototype.trigger = function (name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        name += '.bs.table';\n        this.options[BootstrapTable.EVENTS[name]].apply(this.options, args);\n        this.$el.trigger($.Event(name), args);\n\n        this.options.onAll(name, args);\n        this.$el.trigger($.Event('all.bs.table'), [name, args]);\n    };\n\n    BootstrapTable.prototype.resetHeader = function () {\n        // fix #61: the hidden table reset header bug.\n        // fix bug: get $el.css('width') error sometime (height = 500)\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout($.proxy(this.fitHeader, this), this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitHeader = function () {\n        var that = this,\n            fixedBody,\n            scrollWidth,\n            focused,\n            focusedTemp;\n\n        if (that.$el.is(':hidden')) {\n            that.timeoutId_ = setTimeout($.proxy(that.fitHeader, that), 100);\n            return;\n        }\n        fixedBody = this.$tableBody.get(0);\n\n        scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n        fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            getScrollBarWidth() : 0;\n\n        this.$el.css('margin-top', -this.$header.outerHeight());\n\n        focused = $(':focus');\n        if (focused.length > 0) {\n            var $th = focused.parents('th');\n            if ($th.length > 0) {\n                var dataField = $th.attr('data-field');\n                if (dataField !== undefined) {\n                    var $headerTh = this.$header.find(\"[data-field='\" + dataField + \"']\");\n                    if ($headerTh.length > 0) {\n                        $headerTh.find(\":input\").addClass(\"focus-temp\");\n                    }\n                }\n            }\n        }\n\n        this.$header_ = this.$header.clone(true, true);\n        this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]');\n        this.$tableHeader.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', this.$el.outerWidth())\n            .html('').attr('class', this.$el.attr('class'))\n            .append(this.$header_);\n\n\n        focusedTemp = $('.focus-temp:visible:eq(0)');\n        if (focusedTemp.length > 0) {\n            focusedTemp.focus();\n            this.$header.find('.focus-temp').removeClass('focus-temp');\n        }\n\n        // fix bug: $.data() is not working as expected after $.append()\n        this.$header.find('th[data-field]').each(function (i) {\n            that.$header_.find(sprintf('th[data-field=\"%s\"]', $(this).data('field'))).data($(this).data());\n        });\n\n        var visibleFields = this.getVisibleFields(),\n            $ths = this.$header_.find('th');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this),\n                index = i;\n\n            if (that.options.detailView && !that.options.cardView) {\n                if (i === 0) {\n                    that.$header_.find('th.detail').find('.fht-cell').width($this.innerWidth());\n                }\n                index = i - 1;\n            }\n\n            var $th = that.$header_.find(sprintf('th[data-field=\"%s\"]', visibleFields[index]));\n            if ($th.length > 1) {\n                $th = $($ths[$this[0].cellIndex]);\n            }\n\n            $th.find('.fht-cell').width($this.innerWidth());\n        });\n        // horizontal scroll event\n        // TODO: it's probably better improving the layout than binding to scroll event\n        this.$tableBody.off('scroll').on('scroll', function () {\n            that.$tableHeader.scrollLeft($(this).scrollLeft());\n\n            if (that.options.showFooter && !that.options.cardView) {\n                that.$tableFooter.scrollLeft($(this).scrollLeft());\n            }\n        });\n        that.trigger('post-header');\n    };\n\n    BootstrapTable.prototype.resetFooter = function () {\n        var that = this,\n            data = that.getData(),\n            html = [];\n\n        if (!this.options.showFooter || this.options.cardView) { //do nothing\n            return;\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td><div class=\"th-inner\">&nbsp;</div><div class=\"fht-cell\"></div></td>');\n        }\n\n        $.each(this.columns, function (i, column) {\n            var key,\n                falign = '', // footer align style\n                valign = '',\n                csses = [],\n                style = {},\n                class_ = sprintf(' class=\"%s\"', column['class']);\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            falign = sprintf('text-align: %s; ', column.falign ? column.falign : column.align);\n            valign = sprintf('vertical-align: %s; ', column.valign);\n\n            style = calculateObjectValue(null, that.options.footerStyle);\n\n            if (style && style.css) {\n                for (key in style.css) {\n                    csses.push(key + ': ' + style.css[key]);\n                }\n            }\n\n            html.push('<td', class_, sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')), '>');\n            html.push('<div class=\"th-inner\">');\n\n            html.push(calculateObjectValue(column, column.footerFormatter, [data], '&nbsp;') || '&nbsp;');\n\n            html.push('</div>');\n            html.push('<div class=\"fht-cell\"></div>');\n            html.push('</div>');\n            html.push('</td>');\n        });\n\n        this.$tableFooter.find('tr').html(html.join(''));\n        this.$tableFooter.show();\n        clearTimeout(this.timeoutFooter_);\n        this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this),\n            this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitFooter = function () {\n        var that = this,\n            $footerTd,\n            elWidth,\n            scrollWidth;\n\n        clearTimeout(this.timeoutFooter_);\n        if (this.$el.is(':hidden')) {\n            this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this), 100);\n            return;\n        }\n\n        elWidth = this.$el.css('width');\n        scrollWidth = elWidth > this.$tableBody.width() ? getScrollBarWidth() : 0;\n\n        this.$tableFooter.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', elWidth)\n            .attr('class', this.$el.attr('class'));\n\n        $footerTd = this.$tableFooter.find('td');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this);\n\n            $footerTd.eq(i).find('.fht-cell').width($this.innerWidth());\n        });\n    };\n\n    BootstrapTable.prototype.toggleColumn = function (index, checked, needUpdate) {\n        if (index === -1) {\n            return;\n        }\n        this.columns[index].visible = checked;\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if (needUpdate) {\n                $items.filter(sprintf('[value=\"%s\"]', index)).prop('checked', checked);\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getVisibleFields = function () {\n        var that = this,\n            visibleFields = [];\n\n        $.each(this.header.fields, function (j, field) {\n            var column = that.columns[getFieldIndex(that.columns, field)];\n\n            if (!column.visible) {\n                return;\n            }\n            visibleFields.push(field);\n        });\n        return visibleFields;\n    };\n\n    // PUBLIC FUNCTION DEFINITION\n    // =======================\n\n    BootstrapTable.prototype.resetView = function (params) {\n        var padding = 0;\n\n        if (params && params.height) {\n            this.options.height = params.height;\n        }\n\n        this.$selectAll.prop('checked', this.$selectItem.length > 0 &&\n            this.$selectItem.length === this.$selectItem.filter(':checked').length);\n\n        if (this.options.height) {\n            var toolbarHeight = this.$toolbar.outerHeight(true),\n                paginationHeight = this.$pagination.outerHeight(true),\n                height = this.options.height - toolbarHeight - paginationHeight;\n\n            this.$tableContainer.css('height', height + 'px');\n        }\n\n        if (this.options.cardView) {\n            // remove the element css\n            this.$el.css('margin-top', '0');\n            this.$tableContainer.css('padding-bottom', '0');\n            this.$tableFooter.hide();\n            return;\n        }\n\n        if (this.options.showHeader && this.options.height) {\n            this.$tableHeader.show();\n            this.resetHeader();\n            padding += this.$header.outerHeight();\n        } else {\n            this.$tableHeader.hide();\n            this.trigger('post-header');\n        }\n\n        if (this.options.showFooter) {\n            this.resetFooter();\n            if (this.options.height) {\n                padding += this.$tableFooter.outerHeight() + 1;\n            }\n        }\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n        this.$tableContainer.css('padding-bottom', padding + 'px');\n        this.trigger('reset-view');\n    };\n\n    BootstrapTable.prototype.getData = function (useCurrentPage) {\n        return (this.searchText || !$.isEmptyObject(this.filterColumns) || !$.isEmptyObject(this.filterColumnsPartial)) ?\n            (useCurrentPage ? this.data.slice(this.pageFrom - 1, this.pageTo) : this.data) :\n            (useCurrentPage ? this.options.data.slice(this.pageFrom - 1, this.pageTo) : this.options.data);\n    };\n\n    BootstrapTable.prototype.load = function (data) {\n        var fixedScroll = false;\n\n        // #431: support pagination\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows = data[this.options.totalField];\n            fixedScroll = data.fixedScroll;\n            data = data[this.options.dataField];\n        } else if (!$.isArray(data)) { // support fixedScroll\n            fixedScroll = data.fixedScroll;\n            data = data.data;\n        }\n\n        this.initData(data);\n        this.initSearch();\n        this.initPagination();\n        this.initBody(fixedScroll);\n    };\n\n    BootstrapTable.prototype.append = function (data) {\n        this.initData(data, 'append');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.prepend = function (data) {\n        this.initData(data, 'prepend');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.remove = function (params) {\n        var len = this.options.data.length,\n            i, row;\n\n        if (!params.hasOwnProperty('field') || !params.hasOwnProperty('values')) {\n            return;\n        }\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (!row.hasOwnProperty(params.field)) {\n                continue;\n            }\n            if ($.inArray(row[params.field], params.values) !== -1) {\n                this.options.data.splice(i, 1);\n                if (this.options.sidePagination === 'server') {\n                    this.options.totalRows -= 1;\n                }\n            }\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.removeAll = function () {\n        if (this.options.data.length > 0) {\n            this.options.data.splice(0, this.options.data.length);\n            this.initSearch();\n            this.initPagination();\n            this.initBody(true);\n        }\n    };\n\n    BootstrapTable.prototype.getRowByUniqueId = function (id) {\n        var uniqueId = this.options.uniqueId,\n            len = this.options.data.length,\n            dataRow = null,\n            i, row, rowUniqueId;\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (row.hasOwnProperty(uniqueId)) { // uniqueId is a column\n                rowUniqueId = row[uniqueId];\n            } else if(row._data.hasOwnProperty(uniqueId)) { // uniqueId is a row data property\n                rowUniqueId = row._data[uniqueId];\n            } else {\n                continue;\n            }\n\n            if (typeof rowUniqueId === 'string') {\n                id = id.toString();\n            } else if (typeof rowUniqueId === 'number') {\n                if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n                    id = parseInt(id);\n                } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n                    id = parseFloat(id);\n                }\n            }\n\n            if (rowUniqueId === id) {\n                dataRow = row;\n                break;\n            }\n        }\n\n        return dataRow;\n    };\n\n    BootstrapTable.prototype.removeByUniqueId = function (id) {\n        var len = this.options.data.length,\n            row = this.getRowByUniqueId(id);\n\n        if (row) {\n            this.options.data.splice(this.options.data.indexOf(row), 1);\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateByUniqueId = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            var rowId;\n\n            if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n                return;\n            }\n\n            rowId = $.inArray(that.getRowByUniqueId(params.id), that.options.data);\n\n            if (rowId === -1) {\n                return;\n            }\n            $.extend(that.options.data[rowId], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.insertRow = function (params) {\n        if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n            return;\n        }\n        this.data.splice(params.index, 0, params.row);\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateRow = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n                return;\n            }\n            $.extend(that.options.data[params.index], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.initHiddenRows = function () {\n        this.hiddenRows = [];\n    };\n\n    BootstrapTable.prototype.showRow = function (params) {\n        this.toggleRow(params, true);\n    };\n\n    BootstrapTable.prototype.hideRow = function (params) {\n        this.toggleRow(params, false);\n    };\n\n    BootstrapTable.prototype.toggleRow = function (params, visible) {\n        var row, index;\n\n        if (params.hasOwnProperty('index')) {\n            row = this.getData()[params.index];\n        } else if (params.hasOwnProperty('uniqueId')) {\n            row = this.getRowByUniqueId(params.uniqueId);\n        }\n\n        if (!row) {\n            return;\n        }\n\n        index = $.inArray(row, this.hiddenRows);\n\n        if (!visible && index === -1) {\n            this.hiddenRows.push(row);\n        } else if (visible && index > -1) {\n            this.hiddenRows.splice(index, 1);\n        }\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getHiddenRows = function (show) {\n        var that = this,\n            data = this.getData(),\n            rows = [];\n\n        $.each(data, function (i, row) {\n            if ($.inArray(row, that.hiddenRows) > -1) {\n                rows.push(row);\n            }\n        });\n        this.hiddenRows = rows;\n        return rows;\n    };\n\n    BootstrapTable.prototype.mergeCells = function (options) {\n        var row = options.index,\n            col = $.inArray(options.field, this.getVisibleFields()),\n            rowspan = options.rowspan || 1,\n            colspan = options.colspan || 1,\n            i, j,\n            $tr = this.$body.find('>tr'),\n            $td;\n\n        if (this.options.detailView && !this.options.cardView) {\n            col += 1;\n        }\n\n        $td = $tr.eq(row).find('>td').eq(col);\n\n        if (row < 0 || col < 0 || row >= this.data.length) {\n            return;\n        }\n\n        for (i = row; i < row + rowspan; i++) {\n            for (j = col; j < col + colspan; j++) {\n                $tr.eq(i).find('>td').eq(j).hide();\n            }\n        }\n\n        $td.attr('rowspan', rowspan).attr('colspan', colspan).show();\n    };\n\n    BootstrapTable.prototype.updateCell = function (params) {\n        if (!params.hasOwnProperty('index') ||\n            !params.hasOwnProperty('field') ||\n            !params.hasOwnProperty('value')) {\n            return;\n        }\n        this.data[params.index][params.field] = params.value;\n\n        if (params.reinit === false) {\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getOptions = function () {\n        return this.options;\n    };\n\n    BootstrapTable.prototype.getSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            // fix #2424: from html with checkbox\n            return row[that.header.stateField] === true;\n        });\n    };\n\n    BootstrapTable.prototype.getAllSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            return row[that.header.stateField];\n        });\n    };\n\n    BootstrapTable.prototype.checkAll = function () {\n        this.checkAll_(true);\n    };\n\n    BootstrapTable.prototype.uncheckAll = function () {\n        this.checkAll_(false);\n    };\n\n    BootstrapTable.prototype.checkInvert = function () {\n        var that = this;\n        var rows = that.$selectItem.filter(':enabled');\n        var checked = rows.filter(':checked');\n        rows.each(function() {\n            $(this).prop('checked', !$(this).prop('checked'));\n        });\n        that.updateRows();\n        that.updateSelected();\n        that.trigger('uncheck-some', checked);\n        checked = that.getSelections();\n        that.trigger('check-some', checked);\n    };\n\n    BootstrapTable.prototype.checkAll_ = function (checked) {\n        var rows;\n        if (!checked) {\n            rows = this.getSelections();\n        }\n        this.$selectAll.add(this.$selectAll_).prop('checked', checked);\n        this.$selectItem.filter(':enabled').prop('checked', checked);\n        this.updateRows();\n        if (checked) {\n            rows = this.getSelections();\n        }\n        this.trigger(checked ? 'check-all' : 'uncheck-all', rows);\n    };\n\n    BootstrapTable.prototype.check = function (index) {\n        this.check_(true, index);\n    };\n\n    BootstrapTable.prototype.uncheck = function (index) {\n        this.check_(false, index);\n    };\n\n    BootstrapTable.prototype.check_ = function (checked, index) {\n        var $el = this.$selectItem.filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n        this.data[index][this.header.stateField] = checked;\n        this.updateSelected();\n        this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el);\n    };\n\n    BootstrapTable.prototype.checkBy = function (obj) {\n        this.checkBy_(true, obj);\n    };\n\n    BootstrapTable.prototype.uncheckBy = function (obj) {\n        this.checkBy_(false, obj);\n    };\n\n    BootstrapTable.prototype.checkBy_ = function (checked, obj) {\n        if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n            return;\n        }\n\n        var that = this,\n            rows = [];\n        $.each(this.options.data, function (index, row) {\n            if (!row.hasOwnProperty(obj.field)) {\n                return false;\n            }\n            if ($.inArray(row[obj.field], obj.values) !== -1) {\n                var $el = that.$selectItem.filter(':enabled')\n                    .filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n                row[that.header.stateField] = checked;\n                rows.push(row);\n                that.trigger(checked ? 'check' : 'uncheck', row, $el);\n            }\n        });\n        this.updateSelected();\n        this.trigger(checked ? 'check-some' : 'uncheck-some', rows);\n    };\n\n    BootstrapTable.prototype.destroy = function () {\n        this.$el.insertBefore(this.$container);\n        $(this.options.toolbar).insertBefore(this.$el);\n        this.$container.next().remove();\n        this.$container.remove();\n        this.$el.html(this.$el_.html())\n            .css('margin-top', '0')\n            .attr('class', this.$el_.attr('class') || ''); // reset the class\n    };\n\n    BootstrapTable.prototype.showLoading = function () {\n        this.$tableLoading.show();\n    };\n\n    BootstrapTable.prototype.hideLoading = function () {\n        this.$tableLoading.hide();\n    };\n\n    BootstrapTable.prototype.togglePagination = function () {\n        this.options.pagination = !this.options.pagination;\n        var button = this.$toolbar.find('button[name=\"paginationSwitch\"] i');\n        if (this.options.pagination) {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchDown);\n        } else {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchUp);\n        }\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.refresh = function (params) {\n        if (params && params.url) {\n            this.options.url = params.url;\n        }\n        if (params && params.pageNumber) {\n            this.options.pageNumber = params.pageNumber;\n        }\n        if (params && params.pageSize) {\n            this.options.pageSize = params.pageSize;\n        }\n        this.initServer(params && params.silent,\n            params && params.query, params && params.url);\n        this.trigger('refresh', params);\n    };\n\n    BootstrapTable.prototype.resetWidth = function () {\n        if (this.options.showHeader && this.options.height) {\n            this.fitHeader();\n        }\n        if (this.options.showFooter) {\n            this.fitFooter();\n        }\n    };\n\n    BootstrapTable.prototype.showColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), true, true);\n    };\n\n    BootstrapTable.prototype.hideColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), false, true);\n    };\n\n    BootstrapTable.prototype.getHiddenColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return !column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.getVisibleColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.toggleAllColumns = function (visible) {\n        $.each(this.columns, function (i, column) {\n            this.columns[i].visible = visible;\n        });\n\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.showAllColumns = function () {\n        this.toggleAllColumns(true);\n    };\n\n    BootstrapTable.prototype.hideAllColumns = function () {\n        this.toggleAllColumns(false);\n    };\n\n    BootstrapTable.prototype.filterBy = function (columns) {\n        this.filterColumns = $.isEmptyObject(columns) ? {} : columns;\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.scrollTo = function (value) {\n        if (typeof value === 'string') {\n            value = value === 'bottom' ? this.$tableBody[0].scrollHeight : 0;\n        }\n        if (typeof value === 'number') {\n            this.$tableBody.scrollTop(value);\n        }\n        if (typeof value === 'undefined') {\n            return this.$tableBody.scrollTop();\n        }\n    };\n\n    BootstrapTable.prototype.getScrollPosition = function () {\n        return this.scrollTo();\n    };\n\n    BootstrapTable.prototype.selectPage = function (page) {\n        if (page > 0 && page <= this.options.totalPages) {\n            this.options.pageNumber = page;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.prevPage = function () {\n        if (this.options.pageNumber > 1) {\n            this.options.pageNumber--;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.nextPage = function () {\n        if (this.options.pageNumber < this.options.totalPages) {\n            this.options.pageNumber++;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.toggleView = function () {\n        this.options.cardView = !this.options.cardView;\n        this.initHeader();\n        // Fixed remove toolbar when click cardView button.\n        //that.initToolbar();\n        this.initBody();\n        this.trigger('toggle', this.options.cardView);\n    };\n\n    BootstrapTable.prototype.refreshOptions = function (options) {\n        //If the objects are equivalent then avoid the call of destroy / init methods\n        if (compareObjects(this.options, options, true)) {\n            return;\n        }\n        this.options = $.extend(this.options, options);\n        this.trigger('refresh-options', this.options);\n        this.destroy();\n        this.init();\n    };\n\n    BootstrapTable.prototype.resetSearch = function (text) {\n        var $search = this.$toolbar.find('.search input');\n        $search.val(text || '');\n        this.onSearch({currentTarget: $search});\n    };\n\n    BootstrapTable.prototype.expandRow_ = function (expand, index) {\n        var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', index));\n        if ($tr.next().is('tr.detail-view') === (expand ? false : true)) {\n            $tr.find('> td > .detail-icon').click();\n        }\n    };\n\n    BootstrapTable.prototype.expandRow = function (index) {\n        this.expandRow_(true, index);\n    };\n\n    BootstrapTable.prototype.collapseRow = function (index) {\n        this.expandRow_(false, index);\n    };\n\n    BootstrapTable.prototype.expandAllRows = function (isSubTable) {\n        if (isSubTable) {\n            var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', 0)),\n                that = this,\n                detailIcon = null,\n                executeInterval = false,\n                idInterval = -1;\n\n            if (!$tr.next().is('tr.detail-view')) {\n                $tr.find('> td > .detail-icon').click();\n                executeInterval = true;\n            } else if (!$tr.next().next().is('tr.detail-view')) {\n                $tr.next().find(\".detail-icon\").click();\n                executeInterval = true;\n            }\n\n            if (executeInterval) {\n                try {\n                    idInterval = setInterval(function () {\n                        detailIcon = that.$body.find(\"tr.detail-view\").last().find(\".detail-icon\");\n                        if (detailIcon.length > 0) {\n                            detailIcon.click();\n                        } else {\n                            clearInterval(idInterval);\n                        }\n                    }, 1);\n                } catch (ex) {\n                    clearInterval(idInterval);\n                }\n            }\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(true, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.collapseAllRows = function (isSubTable) {\n        if (isSubTable) {\n            this.expandRow_(false, 0);\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(false, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.updateFormatText = function (name, text) {\n        if (this.options[sprintf('format%s', name)]) {\n            if (typeof text === 'string') {\n                this.options[sprintf('format%s', name)] = function () {\n                    return text;\n                };\n            } else if (typeof text === 'function') {\n                this.options[sprintf('format%s', name)] = text;\n            }\n        }\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n    };\n\n    // BOOTSTRAP TABLE PLUGIN DEFINITION\n    // =======================\n\n    var allowedMethods = [\n        'getOptions',\n        'getSelections', 'getAllSelections', 'getData',\n        'load', 'append', 'prepend', 'remove', 'removeAll',\n        'insertRow', 'updateRow', 'updateCell', 'updateByUniqueId', 'removeByUniqueId',\n        'getRowByUniqueId', 'showRow', 'hideRow', 'getHiddenRows',\n        'mergeCells',\n        'checkAll', 'uncheckAll', 'checkInvert',\n        'check', 'uncheck',\n        'checkBy', 'uncheckBy',\n        'refresh',\n        'resetView',\n        'resetWidth',\n        'destroy',\n        'showLoading', 'hideLoading',\n        'showColumn', 'hideColumn', 'getHiddenColumns', 'getVisibleColumns',\n        'showAllColumns', 'hideAllColumns',\n        'filterBy',\n        'scrollTo',\n        'getScrollPosition',\n        'selectPage', 'prevPage', 'nextPage',\n        'togglePagination',\n        'toggleView',\n        'refreshOptions',\n        'resetSearch',\n        'expandRow', 'collapseRow', 'expandAllRows', 'collapseAllRows',\n        'updateFormatText'\n    ];\n\n    $.fn.bootstrapTable = function (option) {\n        var value,\n            args = Array.prototype.slice.call(arguments, 1);\n\n        this.each(function () {\n            var $this = $(this),\n                data = $this.data('bootstrap.table'),\n                options = $.extend({}, BootstrapTable.DEFAULTS, $this.data(),\n                    typeof option === 'object' && option);\n\n            if (typeof option === 'string') {\n                if ($.inArray(option, allowedMethods) < 0) {\n                    throw new Error(\"Unknown method: \" + option);\n                }\n\n                if (!data) {\n                    return;\n                }\n\n                value = data[option].apply(data, args);\n\n                if (option === 'destroy') {\n                    $this.removeData('bootstrap.table');\n                }\n            }\n\n            if (!data) {\n                $this.data('bootstrap.table', (data = new BootstrapTable(this, options)));\n            }\n        });\n\n        return typeof value === 'undefined' ? this : value;\n    };\n\n    $.fn.bootstrapTable.Constructor = BootstrapTable;\n    $.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS;\n    $.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS;\n    $.fn.bootstrapTable.locales = BootstrapTable.LOCALES;\n    $.fn.bootstrapTable.methods = allowedMethods;\n    $.fn.bootstrapTable.utils = {\n        sprintf: sprintf,\n        getFieldIndex: getFieldIndex,\n        compareObjects: compareObjects,\n        calculateObjectValue: calculateObjectValue,\n        getItemField: getItemField,\n        objectKeys: objectKeys,\n        isIEBrowser: isIEBrowser\n    };\n\n    // BOOTSTRAP TABLE INIT\n    // =======================\n\n    $(function () {\n        $('[data-toggle=\"table\"]').bootstrapTable();\n    });\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bootstrap-table/dist/bootstrap-table.js\n// module id = 86\n// module chunks = 0 1 2 3 5 6","/**\n * Bootstrap Table Spanish (España) translation\n * Author: Antonio Pérez <anpegar@gmail.com>\n */\n (function ($) {\n    'use strict';\n    \n    $.fn.bootstrapTable.locales['es-SP'] = {\n        formatLoadingMessage: function () {\n            return 'Cargando, por favor espera...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return pageNumber + ' registros por p&#225;gina.';\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return pageFrom + ' - ' + pageTo + ' de ' + totalRows + ' registros.';\n        },\n        formatSearch: function () {\n            return 'Buscar';\n        },\n        formatNoMatches: function () {\n            return 'No se han encontrado registros.';\n        },\n        formatRefresh: function () {\n            return 'Actualizar';\n        },\n        formatToggle: function () {\n            return 'Alternar';\n        },\n        formatColumns: function () {\n            return 'Columnas';\n        },\n        formatAllRows: function () {\n            return 'Todo';\n        }\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales['es-SP']);\n\n})(jQuery);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP.js\n// module id = 87\n// module chunks = 0 1 2 3 5 6","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"display\",attrs:{\"id\":_vm.ids,\"cellspacing\":\"0\",\"width\":\"100%\"}},[_c('thead'),_c('tbody')])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-357e043f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/modules/sharedComponents/DataTable.vue\n// module id = 88\n// module chunks = 0 1 2 3 5 6"],"sourceRoot":""}