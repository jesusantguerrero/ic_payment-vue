{"version":3,"sources":["webpack:///assets/js/secciones.js","webpack:///./resources/src/modules/secciones/RouterSection.vue","webpack:///./node_modules/bootstrap-table/dist/bootstrap-table.js","webpack:///./node_modules/bootstrap-table/dist/extensions/mobile/bootstrap-table-mobile.js","webpack:///./node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP.js","webpack:///./resources/src/modules/sharedComponents/DataTable.vue","webpack:///resources/src/modules/sharedComponents/DataTable.vue","webpack:///./node_modules/babel-runtime/helpers/defineProperty.js","webpack:///./resources/src/modules/sharedComponents/DataTable.vue?c348","webpack:///resources/src/modules/secciones/RouterSection.vue","webpack:///./resources/src/modules/secciones/components/RouterModal.vue","webpack:///resources/src/modules/secciones/components/RouterModal.vue","webpack:///./resources/src/modules/secciones/components/RouterModal.vue?a202","webpack:///./resources/src/modules/sharedComponents/Progress.js","webpack:///./resources/src/modules/secciones/RouterSection.vue?e16c"],"names":["webpackJsonp","245","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterSection_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1988f582_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterSection_vue__","normalizeComponent","Component","260","exports","$","cachedWidth","sprintf","str","args","arguments","flag","i","replace","arg","getPropertyFromOther","list","from","to","result","each","item","getFieldIndex","columns","field","index","column","setFieldIndex","j","k","totalCol","length","colspan","r","rowspan","inArray","fieldIndex","getScrollBarWidth","w1","w2","inner","addClass","outer","append","offsetWidth","css","clientWidth","remove","calculateObjectValue","self","name","defaultValue","func","names","split","window","f","apply","this","concat","compareObjects","objectA","objectB","compareLength","objectAProperties","getOwnPropertyNames","objectBProperties","propName","escapeHTML","text","getRealDataAttr","dataAttr","attr","auxAttr","join","toLowerCase","getItemField","escape","hasOwnProperty","props","p","isIEBrowser","navigator","userAgent","indexOf","match","objectKeys","keys","prototype","hasDontEnumBug","toString","propertyIsEnumerable","dontEnums","dontEnumsLength","obj","TypeError","prop","call","push","BootstrapTable","el","options","$el","$el_","clone","timeoutId_","timeoutFooter_","init","DEFAULTS","classes","sortClass","undefined","locale","height","undefinedText","sortName","sortOrder","sortStable","striped","data","totalField","dataField","method","url","ajax","cache","contentType","dataType","ajaxOptions","queryParams","params","queryParamsType","responseHandler","res","pagination","onlyInfoPagination","paginationLoop","sidePagination","totalRows","pageNumber","pageSize","pageList","paginationHAlign","paginationVAlign","paginationDetailHAlign","paginationPreText","paginationNextText","search","searchOnEnterKey","strictSearch","searchAlign","selectItemName","showHeader","showFooter","showColumns","showPaginationSwitch","showRefresh","showToggle","buttonsAlign","smartDisplay","minimumCountColumns","idField","uniqueId","cardView","detailView","detailFormatter","row","trimOnSearch","clickToSelect","singleSelect","toolbar","toolbarAlign","checkboxHeader","sortable","silentSort","maintainSelected","searchTimeOut","searchText","iconSize","buttonsClass","iconsPrefix","icons","paginationSwitchDown","paginationSwitchUp","refresh","toggle","detailOpen","detailClose","customSearch","noop","customSort","rowStyle","rowAttributes","footerStyle","onAll","onClickCell","$element","onDblClickCell","onClickRow","onDblClickRow","onSort","order","onCheck","onUncheck","onCheckAll","rows","onUncheckAll","onCheckSome","onUncheckSome","onLoadSuccess","onLoadError","status","onColumnSwitch","checked","onPageChange","number","size","onSearch","onToggle","onPreBody","onPostBody","onPostHeader","onExpandRow","$detail","onCollapseRow","onRefreshOptions","onRefresh","onResetView","LOCALES","en","formatLoadingMessage","formatRecordsPerPage","formatShowingRows","pageFrom","pageTo","formatDetailPagination","formatSearch","formatNoMatches","formatPaginationSwitch","formatRefresh","formatToggle","formatColumns","formatAllRows","extend","COLUMN_DEFAULTS","radio","checkbox","checkboxEnabled","title","titleTooltip","class","align","halign","falign","valign","width","visible","switchable","formatter","footerFormatter","events","sorter","cellStyle","searchable","searchFormatter","cardVisible","EVENTS","all.bs.table","click-cell.bs.table","dbl-click-cell.bs.table","click-row.bs.table","dbl-click-row.bs.table","sort.bs.table","check.bs.table","uncheck.bs.table","check-all.bs.table","uncheck-all.bs.table","check-some.bs.table","uncheck-some.bs.table","load-success.bs.table","load-error.bs.table","column-switch.bs.table","page-change.bs.table","search.bs.table","toggle.bs.table","pre-body.bs.table","post-body.bs.table","post-header.bs.table","expand-row.bs.table","collapse-row.bs.table","refresh-options.bs.table","reset-view.bs.table","refresh.bs.table","initLocale","initContainer","initTable","initHeader","initData","initHiddenRows","initFooter","initToolbar","initPagination","initBody","initSearchText","initServer","parts","toUpperCase","fn","bootstrapTable","locales","$container","insertAfter","$tableContainer","find","$tableHeader","$tableBody","$tableLoading","$tableFooter","$toolbar","$pagination","after","that","$header","appendTo","html","isArray","m","y","_id","_class","_data","x","tx","ty","$this","cspan","rspan","fromHtml","visibleColumns","header","fields","styles","formatters","sorters","sortNames","cellStyles","searchables","style","class_","unitWidth","stateField","off","on","event","target","closest","parent","children","keyCode","which","hide","show","outerHeight","getCaret","proxy","resetWidth","$selectAll","updateSelected","type","initSort","timeoutId","_position","sort","a","b","aa","bb","isNumeric","parseFloat","localeCompare","clearTimeout","setTimeout","removeClass","currentTarget","$this_","eq","add","$header_","trigger","$keepOpen","$search","switchableCount","showToolbar","togglePagination","toggleView","stopImmediatePropagation","toggleColumn","val","trim","initSearch","updatePagination","s","isEmptyObject","filterColumns","grep","key","parseInt","prop_index","$pageList","$first","$pre","$next","$last","$number","$allSelected","getData","totalPages","pageLst","page","active","onPageListChange","onPageFirst","onPagePre","onPageNext","onPageLast","onPageNumber","hasClass","resetRows","siblings","initRow","parentDom","csses","data_","attributes","htmlAttributes","hiddenRows","v","value_","id_","rowspan_","colspan_","title_","csses_","disabled","fixedScroll","$body","hasTr","trFragments","document","createDocumentFragment","tr","scrollTo","e","$td","$tr","cellIndex","getVisibleFields","$selectItem","click","next","is","content","resetView","not","filter","substring","silent","query","request","offset","limit","filterColumnsPartial","JSON","stringify","success","load","error","_xhr","readyState","abort","th","checkAll","$selectAll_","updateRows","Array","slice","Event","resetHeader","fitHeader","fixedBody","scrollWidth","focused","focusedTemp","get","scrollHeight","clientHeight","$th","parents","$headerTh","margin-right","outerWidth","focus","visibleFields","$ths","innerWidth","scrollLeft","resetFooter","fitFooter","$footerTd","elWidth","needUpdate","$items","padding","toolbarHeight","paginationHeight","useCurrentPage","prepend","len","values","splice","removeAll","getRowByUniqueId","id","rowUniqueId","dataRow","Number","removeByUniqueId","updateByUniqueId","allParams","rowId","insertRow","updateRow","showRow","toggleRow","hideRow","getHiddenRows","mergeCells","col","updateCell","reinit","getOptions","getSelections","getAllSelections","checkAll_","uncheckAll","checkInvert","check","check_","uncheck","checkBy","checkBy_","uncheckBy","destroy","insertBefore","showLoading","hideLoading","button","showColumn","hideColumn","getHiddenColumns","getVisibleColumns","toggleAllColumns","showAllColumns","hideAllColumns","filterBy","scrollTop","getScrollPosition","selectPage","prevPage","nextPage","refreshOptions","resetSearch","expandRow_","expand","expandRow","collapseRow","expandAllRows","isSubTable","detailIcon","executeInterval","idInterval","setInterval","last","clearInterval","ex","trs","collapseAllRows","updateFormatText","allowedMethods","option","Error","removeData","Constructor","defaults","columnDefaults","methods","utils","jQuery","261","showHideColumns","columnsHidden","changeView","minHeight","minWidth","conditionCardView","conditionFullView","changeTableView","cardViewState","debounce","wait","timeout","context","later","mobileResponsive","heightThreshold","checkOnInit","_init","resizable","console","log","old","evt","Math","abs","262","263","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d9ec8fe2_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__","266","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default","n","__WEBPACK_IMPORTED_MODULE_1_bootstrap_table__","__WEBPACK_IMPORTED_MODULE_2__node_modules_bootstrap_table_dist_extensions_mobile_bootstrap_table_mobile__","__WEBPACK_IMPORTED_MODULE_3__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__","cols","String","ids","endpoint","parentId","mounted","watch","intialized","table","$filter","activate","listen","showExport","fixed","footer","display","change","initialized","getSelectedRow","emit","$emit","getId","map","_this","resize","$inputSearch","filterWord","states","applyFilter","267","__esModule","_defineProperty","_defineProperty2","default","enumerable","configurable","writable","268","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","cellspacing","staticRenderFns","esExports","508","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","__WEBPACK_IMPORTED_MODULE_1__components_RouterModal_vue__","__WEBPACK_IMPORTED_MODULE_2__sharedComponents_DataTable_vue__","__WEBPACK_IMPORTED_MODULE_3__sharedComponents_utils__","__WEBPACK_IMPORTED_MODULE_3__sharedComponents_utils___default","__WEBPACK_IMPORTED_MODULE_4__sharedComponents_Progress__","__WEBPACK_IMPORTED_MODULE_4__sharedComponents_Progress___default","heavyLoad","components","DataTable","RouterModal","getSectionList","spyLeftNavigation","selectedId","modalMode","sections","sector","nombre","codigo_area","tableOptions","state","totales","pagado","pendiente","total_vendido","tableId","save","isEmpty","$toasted","play","$http","post","getDataForm","then","showMessage","message","sectorEmpty","modal","stop","getIps","appBus","catch","err","_this2","id_section","ips","updateIpState","IP","form","send","displayMessage","mensaje","_this3","updateState","code","_this4","stateChanges","theOptions","selectState","select","codigo","computed","reportUrl","baseURL","509","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterModal_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_23e52ed5_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterModal_vue__","510","modalTitle","511","tabindex","role","_m","_v","_s","for","directives","rawName","expression","placeholder","domProps","input","$event","composing","$set","data-dismiss","aria-label","aria-hidden","512","_interopRequireDefault","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","Progress","$heavy","$line","overflow","513","href","$$selectedVal","o","selected","_value","multiple","_l","section","cell-clicked","modal-mode","data-toggle","data-target"],"mappings":"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jD,KAAKykB,MAAQ9nB,EAAE,IAAMqD,KM3yG3BmkB,KN4yGMnkB,KAAK0kB,QAAU/nB,EAAEqD,KM3yGvBqkB,SAAA,YN4yGMrkB,KM3yGN2kB,WN4yGM3kB,KM3yGN4kB,UN6yGID,SAAU,SAAkBnO,GAC1B,GAAIjX,GM1yGVS,KN2yGUyF,GM1yGV,MN2yGyC,KAAxBlG,EAAKoD,QAAQ8C,SACtBA,GM1yGR,GN4yGMzF,KAAKykB,MAAM/U,gBACT7R,QAAS0B,EM1yGjB0kB,KN2yGQvgB,UM1yGR,MACA+B,SN2yGQuB,QAASzH,EM1yGjByH,QN2yGQd,aM1yGR,EN2yGQF,aM1yGR,EN2yGQ6e,YM1yGR,EN2yGQve,oBM1yGR,EN2yGQL,sBM1yGR,EN2yGQrB,YM1yGR,EN2yGQ2B,QM1yGR,KN2yGQrB,SAAU3F,EAAKoD,QAAQuC,UM1yG/B,GN2yGQC,SAAU5F,EAAKoD,QAAQwC,WAAa,GAAI,GAAI,GAAI,IM1yGxD,KN2yGQY,YM1yGR,EN2yGQe,eM1yGR,EN2yGQC,cM1yGR,EN2yGQnD,SM1yGR,EN2yGQkhB,OM1yGR,EN2yGQC,QM1yGR,EN2yGQpC,kBM1yGR,EN2yGQE,aMzyGR,IN2yGM7iB,KAAKykB,MAAM1U,KAAK,SAAS5Q,KAAM6lB,QM1yGrC,oBN2yGMhlB,KAAKykB,MAAM1lB,SM1yGjB,cN2yGMiB,KAAK0kB,QM1yGXO,SN2yGWjlB,KAAKwkB,aACRxkB,KAAKklB,aM1yGb,EN2yGQllB,KM1yGRkI,eN2yGQlI,KM1yGR4kB,UN4yGUpO,GACFxW,KAAKykB,MAAM/U,eAAe,aM1yGlC8G,IN6yGI2O,eAAgB,WMzyGpB,GAAAC,KAAApoB,UAAAqB,OAAA,OAAAgF,KAAArG,UAAA,KAAAA,UAAA,GN4yGU4J,EAAM5G,KAAKykB,MAAM/U,eAAe,iBM3yG1C,EN+yGM,OAHI0V,IACFplB,KAAKqlB,MAAM,eM3yGnBze,GAEAA,GN6yGI0e,MAAO,WM1yGX,GAAAF,KAAApoB,UAAAqB,OAAA,OAAAgF,KAAArG,UAAA,KAAAA,UAAA,GN6yGUuC,EM5yGVS,KN6yGUgd,EAAKrgB,EAAE4oB,IAAI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C,SAAU,+BAAiCnrB,KSzgHxDioB,YT2gHIhE,KAAM,WACJ,QACEnmB,MSxgHR,MTygHQgO,MSxgHR,MTygHQM,OSxgHR,STygHQH,MSxgHR,STygHQ9E,SSvgHR,STygHQyE,USvgHR,ETwgHQ9N,MSvgHR,WTwgHQgO,MSvgHR,GTwgHQM,OSvgHR,STwgHQH,MSvgHR,STwgHQD,MStgHR,STwgHQlO,MStgHR,STugHQgO,MStgHR,STugHQM,OStgHR,STugHQH,MSrgHR,WTugHQnO,MSrgHR,STsgHQgO,MSrgHR,STsgHQM,OSrgHR,STsgHQH,MSrgHR,STsgHQD,MSpgHR,STsgHQlO,MSpgHR,KTqgHQgO,MSpgHR,eTqgHQM,OSpgHR,STqgHQH,MSngHR,WTqgHQnO,MSngHR,STogHQgO,MSngHR,STogHQM,OSngHR,STogHQH,MSlgHR,WTogHQnO,MSlgHR,WTmgHQgO,MSlgHR,WTmgHQM,OSlgHR,STmgHQH,MShgHR,eTwgHMmf,IACA,SAAUrvB,EAAQC,EAAqBC,GAE7C,YACqB,IAAIovB,GAAuHpvB,EAAoB,KU5vHpKqvB,EAAArvB,EAAA,KAAAM,EAAAN,EAAA,GAaAO,EAAAD,EACA8uB,EAAA,EACAC,EAAA,GATA,EAEA,KAEA,KAEA,KAUAtvB,GAAA,EAAAQ,EAAA,SVmwHM+uB,IACA,SAAUxvB,EAAQC,EAAqBC,GAE7C,YWpwHAD,GAAA,GX8xHEqF,OACE+mB,QACE9U,KW3xHNpX,QX6xHIgsB,WACE5U,KWzxHN4Q,SX6xHEI,QAAS,WW5xHX,GAAAkB,GAAAxlB,IX+xHIrD,GAAE,iBAAiB2V,GAAG,gBAAiB,WACrCkT,EAAMH,MW9xHZ,aXmyHE5D,SACEqH,KAAM,WACJ9oB,KAAKqlB,MW/xHX,UXmyHE4F,UACEO,WAAY,WACV,GW9xHN1f,OAAA,EXgyHM,QAAQ9L,KW/xHdkoB,WXgyHQ,IW/xHR,MXgyHUpc,EW/xHV,cACA,MXgyHQ,KW/xHR,OXgyHUA,EW/xHV,gBXqyHM,MW/xHNA,OXsyHM2f,IACA,SAAU1vB,EAAQC,EAAqBC,GAE7C,YYv2HA,IAAAsqB,GAAA,WAA0B,GAAAC,GA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","file":"assets/js/secciones.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 245:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterSection_vue__ = __webpack_require__(508);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1988f582_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterSection_vue__ = __webpack_require__(513);\nvar normalizeComponent = __webpack_require__(4)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterSection_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1988f582_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterSection_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(module, exports) {\n\n/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.11.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\n(function ($) {\n    'use strict';\n\n    // TOOLS DEFINITION\n    // ======================\n\n    var cachedWidth = null;\n\n    // it only does '%s', and return '' when arguments are undefined\n    var sprintf = function (str) {\n        var args = arguments,\n            flag = true,\n            i = 1;\n\n        str = str.replace(/%s/g, function () {\n            var arg = args[i++];\n\n            if (typeof arg === 'undefined') {\n                flag = false;\n                return '';\n            }\n            return arg;\n        });\n        return flag ? str : '';\n    };\n\n    var getPropertyFromOther = function (list, from, to, value) {\n        var result = '';\n        $.each(list, function (i, item) {\n            if (item[from] === value) {\n                result = item[to];\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n\n    var getFieldIndex = function (columns, field) {\n        var index = -1;\n\n        $.each(columns, function (i, column) {\n            if (column.field === field) {\n                index = i;\n                return false;\n            }\n            return true;\n        });\n        return index;\n    };\n\n    // http://jsfiddle.net/wenyi/47nz7ez9/3/\n    var setFieldIndex = function (columns) {\n        var i, j, k,\n            totalCol = 0,\n            flag = [];\n\n        for (i = 0; i < columns[0].length; i++) {\n            totalCol += columns[0][i].colspan || 1;\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            flag[i] = [];\n            for (j = 0; j < totalCol; j++) {\n                flag[i][j] = false;\n            }\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            for (j = 0; j < columns[i].length; j++) {\n                var r = columns[i][j],\n                    rowspan = r.rowspan || 1,\n                    colspan = r.colspan || 1,\n                    index = $.inArray(false, flag[i]);\n\n                if (colspan === 1) {\n                    r.fieldIndex = index;\n                    // when field is undefined, use index instead\n                    if (typeof r.field === 'undefined') {\n                        r.field = index;\n                    }\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    flag[i + k][index] = true;\n                }\n                for (k = 0; k < colspan; k++) {\n                    flag[i][index + k] = true;\n                }\n            }\n        }\n    };\n\n    var getScrollBarWidth = function () {\n        if (cachedWidth === null) {\n            var inner = $('<p/>').addClass('fixed-table-scroll-inner'),\n                outer = $('<div/>').addClass('fixed-table-scroll-outer'),\n                w1, w2;\n\n            outer.append(inner);\n            $('body').append(outer);\n\n            w1 = inner[0].offsetWidth;\n            outer.css('overflow', 'scroll');\n            w2 = inner[0].offsetWidth;\n\n            if (w1 === w2) {\n                w2 = outer[0].clientWidth;\n            }\n\n            outer.remove();\n            cachedWidth = w1 - w2;\n        }\n        return cachedWidth;\n    };\n\n    var calculateObjectValue = function (self, name, args, defaultValue) {\n        var func = name;\n\n        if (typeof name === 'string') {\n            // support obj.func1.func2\n            var names = name.split('.');\n\n            if (names.length > 1) {\n                func = window;\n                $.each(names, function (i, f) {\n                    func = func[f];\n                });\n            } else {\n                func = window[name];\n            }\n        }\n        if (typeof func === 'object') {\n            return func;\n        }\n        if (typeof func === 'function') {\n            return func.apply(self, args || []);\n        }\n        if (!func && typeof name === 'string' && sprintf.apply(this, [name].concat(args))) {\n            return sprintf.apply(this, [name].concat(args));\n        }\n        return defaultValue;\n    };\n\n    var compareObjects = function (objectA, objectB, compareLength) {\n        // Create arrays of property names\n        var objectAProperties = Object.getOwnPropertyNames(objectA),\n            objectBProperties = Object.getOwnPropertyNames(objectB),\n            propName = '';\n\n        if (compareLength) {\n            // If number of properties is different, objects are not equivalent\n            if (objectAProperties.length !== objectBProperties.length) {\n                return false;\n            }\n        }\n\n        for (var i = 0; i < objectAProperties.length; i++) {\n            propName = objectAProperties[i];\n\n            // If the property is not in the object B properties, continue with the next property\n            if ($.inArray(propName, objectBProperties) > -1) {\n                // If values of same property are not equal, objects are not equivalent\n                if (objectA[propName] !== objectB[propName]) {\n                    return false;\n                }\n            }\n        }\n\n        // If we made it this far, objects are considered equivalent\n        return true;\n    };\n\n    var escapeHTML = function (text) {\n        if (typeof text === 'string') {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;')\n                .replace(/`/g, '&#x60;');\n        }\n        return text;\n    };\n\n    var getRealDataAttr = function (dataAttr) {\n        for (var attr in dataAttr) {\n            var auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase();\n            if (auxAttr !== attr) {\n                dataAttr[auxAttr] = dataAttr[attr];\n                delete dataAttr[attr];\n            }\n        }\n\n        return dataAttr;\n    };\n\n    var getItemField = function (item, field, escape) {\n        var value = item;\n\n        if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n            return escape ? escapeHTML(item[field]) : item[field];\n        }\n        var props = field.split('.');\n        for (var p in props) {\n            if (props.hasOwnProperty(p)) {\n                value = value && value[props[p]];\n            }\n        }\n        return escape ? escapeHTML(value) : value;\n    };\n\n    var isIEBrowser = function () {\n        return !!(navigator.userAgent.indexOf(\"MSIE \") > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./));\n    };\n\n    var objectKeys = function () {\n        // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n                    dontEnums = [\n                        'toString',\n                        'toLocaleString',\n                        'valueOf',\n                        'hasOwnProperty',\n                        'isPrototypeOf',\n                        'propertyIsEnumerable',\n                        'constructor'\n                    ],\n                    dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    var result = [], prop, i;\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n                    return result;\n                };\n            }());\n        }\n    };\n\n    // BOOTSTRAP TABLE CLASS DEFINITION\n    // ======================\n\n    var BootstrapTable = function (el, options) {\n        this.options = options;\n        this.$el = $(el);\n        this.$el_ = this.$el.clone();\n        this.timeoutId_ = 0;\n        this.timeoutFooter_ = 0;\n\n        this.init();\n    };\n\n    BootstrapTable.DEFAULTS = {\n        classes: 'table table-hover',\n        sortClass: undefined,\n        locale: undefined,\n        height: undefined,\n        undefinedText: '-',\n        sortName: undefined,\n        sortOrder: 'asc',\n        sortStable: false,\n        striped: false,\n        columns: [[]],\n        data: [],\n        totalField: 'total',\n        dataField: 'rows',\n        method: 'get',\n        url: undefined,\n        ajax: undefined,\n        cache: true,\n        contentType: 'application/json',\n        dataType: 'json',\n        ajaxOptions: {},\n        queryParams: function (params) {\n            return params;\n        },\n        queryParamsType: 'limit', // undefined\n        responseHandler: function (res) {\n            return res;\n        },\n        pagination: false,\n        onlyInfoPagination: false,\n        paginationLoop: true,\n        sidePagination: 'client', // client or server\n        totalRows: 0, // server side need to set\n        pageNumber: 1,\n        pageSize: 10,\n        pageList: [10, 25, 50, 100],\n        paginationHAlign: 'right', //right, left\n        paginationVAlign: 'bottom', //bottom, top, both\n        paginationDetailHAlign: 'left', //right, left\n        paginationPreText: '&lsaquo;',\n        paginationNextText: '&rsaquo;',\n        search: false,\n        searchOnEnterKey: false,\n        strictSearch: false,\n        searchAlign: 'right',\n        selectItemName: 'btSelectItem',\n        showHeader: true,\n        showFooter: false,\n        showColumns: false,\n        showPaginationSwitch: false,\n        showRefresh: false,\n        showToggle: false,\n        buttonsAlign: 'right',\n        smartDisplay: true,\n        escape: false,\n        minimumCountColumns: 1,\n        idField: undefined,\n        uniqueId: undefined,\n        cardView: false,\n        detailView: false,\n        detailFormatter: function (index, row) {\n            return '';\n        },\n        trimOnSearch: true,\n        clickToSelect: false,\n        singleSelect: false,\n        toolbar: undefined,\n        toolbarAlign: 'left',\n        checkboxHeader: true,\n        sortable: true,\n        silentSort: true,\n        maintainSelected: false,\n        searchTimeOut: 500,\n        searchText: '',\n        iconSize: undefined,\n        buttonsClass: 'default',\n        iconsPrefix: 'glyphicon', // glyphicon of fa (font awesome)\n        icons: {\n            paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n            paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n            refresh: 'glyphicon-refresh icon-refresh',\n            toggle: 'glyphicon-list-alt icon-list-alt',\n            columns: 'glyphicon-th icon-th',\n            detailOpen: 'glyphicon-plus icon-plus',\n            detailClose: 'glyphicon-minus icon-minus'\n        },\n\n        customSearch: $.noop,\n\n        customSort: $.noop,\n\n        rowStyle: function (row, index) {\n            return {};\n        },\n\n        rowAttributes: function (row, index) {\n            return {};\n        },\n\n        footerStyle: function (row, index) {\n            return {};\n        },\n\n        onAll: function (name, args) {\n            return false;\n        },\n        onClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onDblClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onClickRow: function (item, $element) {\n            return false;\n        },\n        onDblClickRow: function (item, $element) {\n            return false;\n        },\n        onSort: function (name, order) {\n            return false;\n        },\n        onCheck: function (row) {\n            return false;\n        },\n        onUncheck: function (row) {\n            return false;\n        },\n        onCheckAll: function (rows) {\n            return false;\n        },\n        onUncheckAll: function (rows) {\n            return false;\n        },\n        onCheckSome: function (rows) {\n            return false;\n        },\n        onUncheckSome: function (rows) {\n            return false;\n        },\n        onLoadSuccess: function (data) {\n            return false;\n        },\n        onLoadError: function (status) {\n            return false;\n        },\n        onColumnSwitch: function (field, checked) {\n            return false;\n        },\n        onPageChange: function (number, size) {\n            return false;\n        },\n        onSearch: function (text) {\n            return false;\n        },\n        onToggle: function (cardView) {\n            return false;\n        },\n        onPreBody: function (data) {\n            return false;\n        },\n        onPostBody: function () {\n            return false;\n        },\n        onPostHeader: function () {\n            return false;\n        },\n        onExpandRow: function (index, row, $detail) {\n            return false;\n        },\n        onCollapseRow: function (index, row) {\n            return false;\n        },\n        onRefreshOptions: function (options) {\n            return false;\n        },\n        onRefresh: function (params) {\n          return false;\n        },\n        onResetView: function () {\n            return false;\n        }\n    };\n\n    BootstrapTable.LOCALES = {};\n\n    BootstrapTable.LOCALES['en-US'] = BootstrapTable.LOCALES.en = {\n        formatLoadingMessage: function () {\n            return 'Loading, please wait...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return sprintf('%s rows per page', pageNumber);\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return sprintf('Showing %s to %s of %s rows', pageFrom, pageTo, totalRows);\n        },\n        formatDetailPagination: function (totalRows) {\n            return sprintf('Showing %s rows', totalRows);\n        },\n        formatSearch: function () {\n            return 'Search';\n        },\n        formatNoMatches: function () {\n            return 'No matching records found';\n        },\n        formatPaginationSwitch: function () {\n            return 'Hide/Show pagination';\n        },\n        formatRefresh: function () {\n            return 'Refresh';\n        },\n        formatToggle: function () {\n            return 'Toggle';\n        },\n        formatColumns: function () {\n            return 'Columns';\n        },\n        formatAllRows: function () {\n            return 'All';\n        }\n    };\n\n    $.extend(BootstrapTable.DEFAULTS, BootstrapTable.LOCALES['en-US']);\n\n    BootstrapTable.COLUMN_DEFAULTS = {\n        radio: false,\n        checkbox: false,\n        checkboxEnabled: true,\n        field: undefined,\n        title: undefined,\n        titleTooltip: undefined,\n        'class': undefined,\n        align: undefined, // left, right, center\n        halign: undefined, // left, right, center\n        falign: undefined, // left, right, center\n        valign: undefined, // top, middle, bottom\n        width: undefined,\n        sortable: false,\n        order: 'asc', // asc, desc\n        visible: true,\n        switchable: true,\n        clickToSelect: true,\n        formatter: undefined,\n        footerFormatter: undefined,\n        events: undefined,\n        sorter: undefined,\n        sortName: undefined,\n        cellStyle: undefined,\n        searchable: true,\n        searchFormatter: true,\n        cardVisible: true,\n        escape : false\n    };\n\n    BootstrapTable.EVENTS = {\n        'all.bs.table': 'onAll',\n        'click-cell.bs.table': 'onClickCell',\n        'dbl-click-cell.bs.table': 'onDblClickCell',\n        'click-row.bs.table': 'onClickRow',\n        'dbl-click-row.bs.table': 'onDblClickRow',\n        'sort.bs.table': 'onSort',\n        'check.bs.table': 'onCheck',\n        'uncheck.bs.table': 'onUncheck',\n        'check-all.bs.table': 'onCheckAll',\n        'uncheck-all.bs.table': 'onUncheckAll',\n        'check-some.bs.table': 'onCheckSome',\n        'uncheck-some.bs.table': 'onUncheckSome',\n        'load-success.bs.table': 'onLoadSuccess',\n        'load-error.bs.table': 'onLoadError',\n        'column-switch.bs.table': 'onColumnSwitch',\n        'page-change.bs.table': 'onPageChange',\n        'search.bs.table': 'onSearch',\n        'toggle.bs.table': 'onToggle',\n        'pre-body.bs.table': 'onPreBody',\n        'post-body.bs.table': 'onPostBody',\n        'post-header.bs.table': 'onPostHeader',\n        'expand-row.bs.table': 'onExpandRow',\n        'collapse-row.bs.table': 'onCollapseRow',\n        'refresh-options.bs.table': 'onRefreshOptions',\n        'reset-view.bs.table': 'onResetView',\n        'refresh.bs.table': 'onRefresh'\n    };\n\n    BootstrapTable.prototype.init = function () {\n        this.initLocale();\n        this.initContainer();\n        this.initTable();\n        this.initHeader();\n        this.initData();\n        this.initHiddenRows();\n        this.initFooter();\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n        this.initSearchText();\n        this.initServer();\n    };\n\n    BootstrapTable.prototype.initLocale = function () {\n        if (this.options.locale) {\n            var parts = this.options.locale.split(/-|_/);\n            parts[0].toLowerCase();\n            if (parts[1]) parts[1].toUpperCase();\n            if ($.fn.bootstrapTable.locales[this.options.locale]) {\n                // locale as requested\n                $.extend(this.options, $.fn.bootstrapTable.locales[this.options.locale]);\n            } else if ($.fn.bootstrapTable.locales[parts.join('-')]) {\n                // locale with sep set to - (in case original was specified with _)\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts.join('-')]);\n            } else if ($.fn.bootstrapTable.locales[parts[0]]) {\n                // short locale language code (i.e. 'en')\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts[0]]);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.initContainer = function () {\n        this.$container = $([\n            '<div class=\"bootstrap-table\">',\n            '<div class=\"fixed-table-toolbar\"></div>',\n            this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\" style=\"clear: both;\"></div>' :\n                '',\n            '<div class=\"fixed-table-container\">',\n            '<div class=\"fixed-table-header\"><table></table></div>',\n            '<div class=\"fixed-table-body\">',\n            '<div class=\"fixed-table-loading\">',\n            this.options.formatLoadingMessage(),\n            '</div>',\n            '</div>',\n            '<div class=\"fixed-table-footer\"><table><tr></tr></table></div>',\n            this.options.paginationVAlign === 'bottom' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\"></div>' :\n                '',\n            '</div>',\n            '</div>'\n        ].join(''));\n\n        this.$container.insertAfter(this.$el);\n        this.$tableContainer = this.$container.find('.fixed-table-container');\n        this.$tableHeader = this.$container.find('.fixed-table-header');\n        this.$tableBody = this.$container.find('.fixed-table-body');\n        this.$tableLoading = this.$container.find('.fixed-table-loading');\n        this.$tableFooter = this.$container.find('.fixed-table-footer');\n        this.$toolbar = this.$container.find('.fixed-table-toolbar');\n        this.$pagination = this.$container.find('.fixed-table-pagination');\n\n        this.$tableBody.append(this.$el);\n        this.$container.after('<div class=\"clearfix\"></div>');\n\n        this.$el.addClass(this.options.classes);\n        if (this.options.striped) {\n            this.$el.addClass('table-striped');\n        }\n        if ($.inArray('table-no-bordered', this.options.classes.split(' ')) !== -1) {\n            this.$tableContainer.addClass('table-no-bordered');\n        }\n    };\n\n    BootstrapTable.prototype.initTable = function () {\n        var that = this,\n            columns = [],\n            data = [];\n\n        this.$header = this.$el.find('>thead');\n        if (!this.$header.length) {\n            this.$header = $('<thead></thead>').appendTo(this.$el);\n        }\n        this.$header.find('tr').each(function () {\n            var column = [];\n\n            $(this).find('th').each(function () {\n                // Fix #2014 - getFieldIndex and elsewhere assume this is string, causes issues if not\n                if (typeof $(this).data('field') !== 'undefined') {\n                    $(this).data('field', $(this).data('field') + '');\n                }\n                column.push($.extend({}, {\n                    title: $(this).html(),\n                    'class': $(this).attr('class'),\n                    titleTooltip: $(this).attr('title'),\n                    rowspan: $(this).attr('rowspan') ? +$(this).attr('rowspan') : undefined,\n                    colspan: $(this).attr('colspan') ? +$(this).attr('colspan') : undefined\n                }, $(this).data()));\n            });\n            columns.push(column);\n        });\n        if (!$.isArray(this.options.columns[0])) {\n            this.options.columns = [this.options.columns];\n        }\n        this.options.columns = $.extend(true, [], columns, this.options.columns);\n        this.columns = [];\n\n        setFieldIndex(this.options.columns);\n        $.each(this.options.columns, function (i, columns) {\n            $.each(columns, function (j, column) {\n                column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, column);\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.columns[column.fieldIndex] = column;\n                }\n\n                that.options.columns[i][j] = column;\n            });\n        });\n\n        // if options.data is setting, do not process tbody data\n        if (this.options.data.length) {\n            return;\n        }\n\n        var m = [];\n        this.$el.find('>tbody>tr').each(function (y) {\n            var row = {};\n\n            // save tr's id, class and data-* attributes\n            row._id = $(this).attr('id');\n            row._class = $(this).attr('class');\n            row._data = getRealDataAttr($(this).data());\n\n            $(this).find('>td').each(function (x) {\n                var $this = $(this),\n                    cspan = +$this.attr('colspan') || 1,\n                    rspan = +$this.attr('rowspan') || 1,\n                    tx, ty;\n\n                for (; m[y] && m[y][x]; x++); //skip already occupied cells in current row\n\n                for (tx = x; tx < x + cspan; tx++) { //mark matrix elements occupied by current cell with true\n                    for (ty = y; ty < y + rspan; ty++) {\n                        if (!m[ty]) { //fill missing rows\n                            m[ty] = [];\n                        }\n                        m[ty][tx] = true;\n                    }\n                }\n\n                var field = that.columns[x].field;\n\n                row[field] = $(this).html();\n                // save td's id, class and data-* attributes\n                row['_' + field + '_id'] = $(this).attr('id');\n                row['_' + field + '_class'] = $(this).attr('class');\n                row['_' + field + '_rowspan'] = $(this).attr('rowspan');\n                row['_' + field + '_colspan'] = $(this).attr('colspan');\n                row['_' + field + '_title'] = $(this).attr('title');\n                row['_' + field + '_data'] = getRealDataAttr($(this).data());\n            });\n            data.push(row);\n        });\n        this.options.data = data;\n        if (data.length) this.fromHtml = true;\n    };\n\n    BootstrapTable.prototype.initHeader = function () {\n        var that = this,\n            visibleColumns = {},\n            html = [];\n\n        this.header = {\n            fields: [],\n            styles: [],\n            classes: [],\n            formatters: [],\n            events: [],\n            sorters: [],\n            sortNames: [],\n            cellStyles: [],\n            searchables: []\n        };\n\n        $.each(this.options.columns, function (i, columns) {\n            html.push('<tr>');\n\n            if (i === 0 && !that.options.cardView && that.options.detailView) {\n                html.push(sprintf('<th class=\"detail\" rowspan=\"%s\"><div class=\"fht-cell\"></div></th>',\n                    that.options.columns.length));\n            }\n\n            $.each(columns, function (j, column) {\n                var text = '',\n                    halign = '', // header align style\n                    align = '', // body align style\n                    style = '',\n                    class_ = sprintf(' class=\"%s\"', column['class']),\n                    order = that.options.sortOrder || column.order,\n                    unitWidth = 'px',\n                    width = column.width;\n\n                if (column.width !== undefined && (!that.options.cardView)) {\n                    if (typeof column.width === 'string') {\n                        if (column.width.indexOf('%') !== -1) {\n                            unitWidth = '%';\n                        }\n                    }\n                }\n                if (column.width && typeof column.width === 'string') {\n                    width = column.width.replace('%', '').replace('px', '');\n                }\n\n                halign = sprintf('text-align: %s; ', column.halign ? column.halign : column.align);\n                align = sprintf('text-align: %s; ', column.align);\n                style = sprintf('vertical-align: %s; ', column.valign);\n                style += sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n                    '36px' : (width ? width + unitWidth : undefined));\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.header.fields[column.fieldIndex] = column.field;\n                    that.header.styles[column.fieldIndex] = align + style;\n                    that.header.classes[column.fieldIndex] = class_;\n                    that.header.formatters[column.fieldIndex] = column.formatter;\n                    that.header.events[column.fieldIndex] = column.events;\n                    that.header.sorters[column.fieldIndex] = column.sorter;\n                    that.header.sortNames[column.fieldIndex] = column.sortName;\n                    that.header.cellStyles[column.fieldIndex] = column.cellStyle;\n                    that.header.searchables[column.fieldIndex] = column.searchable;\n\n                    if (!column.visible) {\n                        return;\n                    }\n\n                    if (that.options.cardView && (!column.cardVisible)) {\n                        return;\n                    }\n\n                    visibleColumns[column.field] = column;\n                }\n\n                html.push('<th' + sprintf(' title=\"%s\"', column.titleTooltip),\n                    column.checkbox || column.radio ?\n                        sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n                        class_,\n                    sprintf(' style=\"%s\"', halign + style),\n                    sprintf(' rowspan=\"%s\"', column.rowspan),\n                    sprintf(' colspan=\"%s\"', column.colspan),\n                    sprintf(' data-field=\"%s\"', column.field),\n                    '>');\n\n                html.push(sprintf('<div class=\"th-inner %s\">', that.options.sortable && column.sortable ?\n                    'sortable both' : ''));\n\n                text = that.options.escape ? escapeHTML(column.title) : column.title;\n\n                if (column.checkbox) {\n                    if (!that.options.singleSelect && that.options.checkboxHeader) {\n                        text = '<input name=\"btSelectAll\" type=\"checkbox\" />';\n                    }\n                    that.header.stateField = column.field;\n                }\n                if (column.radio) {\n                    text = '';\n                    that.header.stateField = column.field;\n                    that.options.singleSelect = true;\n                }\n\n                html.push(text);\n                html.push('</div>');\n                html.push('<div class=\"fht-cell\"></div>');\n                html.push('</div>');\n                html.push('</th>');\n            });\n            html.push('</tr>');\n        });\n\n        this.$header.html(html.join(''));\n        this.$header.find('th[data-field]').each(function (i) {\n            $(this).data(visibleColumns[$(this).data('field')]);\n        });\n        this.$container.off('click', '.th-inner').on('click', '.th-inner', function (event) {\n            var target = $(this);\n\n            if (that.options.detailView) {\n                if (target.closest('.bootstrap-table')[0] !== that.$container[0])\n                    return false;\n            }\n\n            if (that.options.sortable && target.parent().data().sortable) {\n                that.onSort(event);\n            }\n        });\n\n        this.$header.children().children().off('keypress').on('keypress', function (event) {\n            if (that.options.sortable && $(this).data().sortable) {\n                var code = event.keyCode || event.which;\n                if (code == 13) { //Enter keycode\n                    that.onSort(event);\n                }\n            }\n        });\n\n        $(window).off('resize.bootstrap-table');\n        if (!this.options.showHeader || this.options.cardView) {\n            this.$header.hide();\n            this.$tableHeader.hide();\n            this.$tableLoading.css('top', 0);\n        } else {\n            this.$header.show();\n            this.$tableHeader.show();\n            this.$tableLoading.css('top', this.$header.outerHeight() + 1);\n            // Assign the correct sortable arrow\n            this.getCaret();\n            $(window).on('resize.bootstrap-table', $.proxy(this.resetWidth, this));\n        }\n\n        this.$selectAll = this.$header.find('[name=\"btSelectAll\"]');\n        this.$selectAll.off('click').on('click', function () {\n                var checked = $(this).prop('checked');\n                that[checked ? 'checkAll' : 'uncheckAll']();\n                that.updateSelected();\n            });\n    };\n\n    BootstrapTable.prototype.initFooter = function () {\n        if (!this.options.showFooter || this.options.cardView) {\n            this.$tableFooter.hide();\n        } else {\n            this.$tableFooter.show();\n        }\n    };\n\n    /**\n     * @param data\n     * @param type: append / prepend\n     */\n    BootstrapTable.prototype.initData = function (data, type) {\n        if (type === 'append') {\n            this.data = this.data.concat(data);\n        } else if (type === 'prepend') {\n            this.data = [].concat(data).concat(this.data);\n        } else {\n            this.data = data || this.options.data;\n        }\n\n        // Fix #839 Records deleted when adding new row on filtered table\n        if (type === 'append') {\n            this.options.data = this.options.data.concat(data);\n        } else if (type === 'prepend') {\n            this.options.data = [].concat(data).concat(this.options.data);\n        } else {\n            this.options.data = this.data;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            return;\n        }\n        this.initSort();\n    };\n\n    BootstrapTable.prototype.initSort = function () {\n        var that = this,\n            name = this.options.sortName,\n            order = this.options.sortOrder === 'desc' ? -1 : 1,\n            index = $.inArray(this.options.sortName, this.header.fields),\n            timeoutId = 0;\n\n        if (this.options.customSort !== $.noop) {\n            this.options.customSort.apply(this, [this.options.sortName, this.options.sortOrder]);\n            return;\n        }\n\n        if (index !== -1) {\n            if (this.options.sortStable) {\n                $.each(this.data, function (i, row) {\n                    if (!row.hasOwnProperty('_position')) row._position = i;\n                });\n            }\n\n            this.data.sort(function (a, b) {\n                if (that.header.sortNames[index]) {\n                    name = that.header.sortNames[index];\n                }\n                var aa = getItemField(a, name, that.options.escape),\n                    bb = getItemField(b, name, that.options.escape),\n                    value = calculateObjectValue(that.header, that.header.sorters[index], [aa, bb]);\n\n                if (value !== undefined) {\n                    return order * value;\n                }\n\n                // Fix #161: undefined or null string sort bug.\n                if (aa === undefined || aa === null) {\n                    aa = '';\n                }\n                if (bb === undefined || bb === null) {\n                    bb = '';\n                }\n\n                if (that.options.sortStable && aa === bb) {\n                    aa = a._position;\n                    bb = b._position;\n                }\n\n                // IF both values are numeric, do a numeric comparison\n                if ($.isNumeric(aa) && $.isNumeric(bb)) {\n                    // Convert numerical values form string to float.\n                    aa = parseFloat(aa);\n                    bb = parseFloat(bb);\n                    if (aa < bb) {\n                        return order * -1;\n                    }\n                    return order;\n                }\n\n                if (aa === bb) {\n                    return 0;\n                }\n\n                // If value is not a string, convert to string\n                if (typeof aa !== 'string') {\n                    aa = aa.toString();\n                }\n\n                if (aa.localeCompare(bb) === -1) {\n                    return order * -1;\n                }\n\n                return order;\n            });\n\n            if (this.options.sortClass !== undefined) {\n                clearTimeout(timeoutId);\n                timeoutId = setTimeout(function () {\n                    that.$el.removeClass(that.options.sortClass);\n                    var index = that.$header.find(sprintf('[data-field=\"%s\"]',\n                        that.options.sortName).index() + 1);\n                    that.$el.find(sprintf('tr td:nth-child(%s)', index))\n                        .addClass(that.options.sortClass);\n                }, 250);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSort = function (event) {\n        var $this = event.type === \"keypress\" ? $(event.currentTarget) : $(event.currentTarget).parent(),\n            $this_ = this.$header.find('th').eq($this.index());\n\n        this.$header.add(this.$header_).find('span.order').remove();\n\n        if (this.options.sortName === $this.data('field')) {\n            this.options.sortOrder = this.options.sortOrder === 'asc' ? 'desc' : 'asc';\n        } else {\n            this.options.sortName = $this.data('field');\n            this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc';\n        }\n        this.trigger('sort', this.options.sortName, this.options.sortOrder);\n\n        $this.add($this_).data('order', this.options.sortOrder);\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n\n        if (this.options.sidePagination === 'server') {\n            this.initServer(this.options.silentSort);\n            return;\n        }\n\n        this.initSort();\n        this.initBody();\n    };\n\n    BootstrapTable.prototype.initToolbar = function () {\n        var that = this,\n            html = [],\n            timeoutId = 0,\n            $keepOpen,\n            $search,\n            switchableCount = 0;\n\n        if (this.$toolbar.find('.bs-bars').children().length) {\n            $('body').append($(this.options.toolbar));\n        }\n        this.$toolbar.html('');\n\n        if (typeof this.options.toolbar === 'string' || typeof this.options.toolbar === 'object') {\n            $(sprintf('<div class=\"bs-bars pull-%s\"></div>', this.options.toolbarAlign))\n                .appendTo(this.$toolbar)\n                .append($(this.options.toolbar));\n        }\n\n        // showColumns, showToggle, showRefresh\n        html = [sprintf('<div class=\"columns columns-%s btn-group pull-%s\">',\n            this.options.buttonsAlign, this.options.buttonsAlign)];\n\n        if (typeof this.options.icons === 'string') {\n            this.options.icons = calculateObjectValue(null, this.options.icons);\n        }\n\n        if (this.options.showPaginationSwitch) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"paginationSwitch\" aria-label=\"pagination Switch\" title=\"%s\">',\n                    this.options.formatPaginationSwitch()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.paginationSwitchDown),\n                '</button>');\n        }\n\n        if (this.options.showRefresh) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"refresh\" aria-label=\"refresh\" title=\"%s\">',\n                    this.options.formatRefresh()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.refresh),\n                '</button>');\n        }\n\n        if (this.options.showToggle) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"toggle\" aria-label=\"toggle\" title=\"%s\">',\n                    this.options.formatToggle()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.toggle),\n                '</button>');\n        }\n\n        if (this.options.showColumns) {\n            html.push(sprintf('<div class=\"keep-open btn-group\" title=\"%s\">',\n                    this.options.formatColumns()),\n                '<button type=\"button\" aria-label=\"columns\" class=\"btn' +\n                sprintf(' btn-%s', this.options.buttonsClass) +\n                sprintf(' btn-%s', this.options.iconSize) +\n                ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.columns),\n                ' <span class=\"caret\"></span>',\n                '</button>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">');\n\n            $.each(this.columns, function (i, column) {\n                if (column.radio || column.checkbox) {\n                    return;\n                }\n\n                if (that.options.cardView && !column.cardVisible) {\n                    return;\n                }\n\n                var checked = column.visible ? ' checked=\"checked\"' : '';\n\n                if (column.switchable) {\n                    html.push(sprintf('<li role=\"menuitem\">' +\n                        '<label><input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s> %s</label>' +\n                        '</li>', column.field, i, checked, column.title));\n                    switchableCount++;\n                }\n            });\n            html.push('</ul>',\n                '</div>');\n        }\n\n        html.push('</div>');\n\n        // Fix #188: this.showToolbar is for extensions\n        if (this.showToolbar || html.length > 2) {\n            this.$toolbar.append(html.join(''));\n        }\n\n        if (this.options.showPaginationSwitch) {\n            this.$toolbar.find('button[name=\"paginationSwitch\"]')\n                .off('click').on('click', $.proxy(this.togglePagination, this));\n        }\n\n        if (this.options.showRefresh) {\n            this.$toolbar.find('button[name=\"refresh\"]')\n                .off('click').on('click', $.proxy(this.refresh, this));\n        }\n\n        if (this.options.showToggle) {\n            this.$toolbar.find('button[name=\"toggle\"]')\n                .off('click').on('click', function () {\n                    that.toggleView();\n                });\n        }\n\n        if (this.options.showColumns) {\n            $keepOpen = this.$toolbar.find('.keep-open');\n\n            if (switchableCount <= this.options.minimumCountColumns) {\n                $keepOpen.find('input').prop('disabled', true);\n            }\n\n            $keepOpen.find('li').off('click').on('click', function (event) {\n                event.stopImmediatePropagation();\n            });\n            $keepOpen.find('input').off('click').on('click', function () {\n                var $this = $(this);\n\n                that.toggleColumn($(this).val(), $this.prop('checked'), false);\n                that.trigger('column-switch', $(this).data('field'), $this.prop('checked'));\n            });\n        }\n\n        if (this.options.search) {\n            html = [];\n            html.push(\n                '<div class=\"pull-' + this.options.searchAlign + ' search\">',\n                sprintf('<input class=\"form-control' +\n                    sprintf(' input-%s', this.options.iconSize) +\n                    '\" type=\"text\" placeholder=\"%s\">',\n                    this.options.formatSearch()),\n                '</div>');\n\n            this.$toolbar.append(html.join(''));\n            $search = this.$toolbar.find('.search input');\n            $search.off('keyup drop blur').on('keyup drop blur', function (event) {\n                if (that.options.searchOnEnterKey && event.keyCode !== 13) {\n                    return;\n                }\n\n                if ($.inArray(event.keyCode, [37, 38, 39, 40]) > -1) {\n                    return;\n                }\n\n                clearTimeout(timeoutId); // doesn't matter if it's 0\n                timeoutId = setTimeout(function () {\n                    that.onSearch(event);\n                }, that.options.searchTimeOut);\n            });\n\n            if (isIEBrowser()) {\n                $search.off('mouseup').on('mouseup', function (event) {\n                    clearTimeout(timeoutId); // doesn't matter if it's 0\n                    timeoutId = setTimeout(function () {\n                        that.onSearch(event);\n                    }, that.options.searchTimeOut);\n                });\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSearch = function (event) {\n        var text = $.trim($(event.currentTarget).val());\n\n        // trim search input\n        if (this.options.trimOnSearch && $(event.currentTarget).val() !== text) {\n            $(event.currentTarget).val(text);\n        }\n\n        if (text === this.searchText) {\n            return;\n        }\n        this.searchText = text;\n        this.options.searchText = text;\n\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n        this.trigger('search', text);\n    };\n\n    BootstrapTable.prototype.initSearch = function () {\n        var that = this;\n\n        if (this.options.sidePagination !== 'server') {\n            if (this.options.customSearch !== $.noop) {\n                this.options.customSearch.apply(this, [this.searchText]);\n                return;\n            }\n\n            var s = this.searchText && (this.options.escape ?\n                escapeHTML(this.searchText) : this.searchText).toLowerCase();\n            var f = $.isEmptyObject(this.filterColumns) ? null : this.filterColumns;\n\n            // Check filter\n            this.data = f ? $.grep(this.options.data, function (item, i) {\n                for (var key in f) {\n                    if ($.isArray(f[key]) && $.inArray(item[key], f[key]) === -1 ||\n                            !$.isArray(f[key]) && item[key] !== f[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }) : this.options.data;\n\n            this.data = s ? $.grep(this.data, function (item, i) {\n                for (var j = 0; j < that.header.fields.length; j++) {\n\n                    if (!that.header.searchables[j]) {\n                        continue;\n                    }\n\n                    var key = $.isNumeric(that.header.fields[j]) ? parseInt(that.header.fields[j], 10) : that.header.fields[j];\n                    var column = that.columns[getFieldIndex(that.columns, key)];\n                    var value;\n\n                    if (typeof key === 'string') {\n                        value = item;\n                        var props = key.split('.');\n                        for (var prop_index = 0; prop_index < props.length; prop_index++) {\n                            value = value[props[prop_index]];\n                        }\n\n                        // Fix #142: respect searchForamtter boolean\n                        if (column && column.searchFormatter) {\n                            value = calculateObjectValue(column,\n                                that.header.formatters[j], [value, item, i], value);\n                        }\n                    } else {\n                        value = item[key];\n                    }\n\n                    if (typeof value === 'string' || typeof value === 'number') {\n                        if (that.options.strictSearch) {\n                            if ((value + '').toLowerCase() === s) {\n                                return true;\n                            }\n                        } else {\n                            if ((value + '').toLowerCase().indexOf(s) !== -1) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }) : this.data;\n        }\n    };\n\n    BootstrapTable.prototype.initPagination = function () {\n        if (!this.options.pagination) {\n            this.$pagination.hide();\n            return;\n        } else {\n            this.$pagination.show();\n        }\n\n        var that = this,\n            html = [],\n            $allSelected = false,\n            i, from, to,\n            $pageList,\n            $first, $pre,\n            $next, $last,\n            $number,\n            data = this.getData(),\n            pageList = this.options.pageList;\n\n        if (this.options.sidePagination !== 'server') {\n            this.options.totalRows = data.length;\n        }\n\n        this.totalPages = 0;\n        if (this.options.totalRows) {\n            if (this.options.pageSize === this.options.formatAllRows()) {\n                this.options.pageSize = this.options.totalRows;\n                $allSelected = true;\n            } else if (this.options.pageSize === this.options.totalRows) {\n                // Fix #667 Table with pagination,\n                // multiple pages and a search that matches to one page throws exception\n                var pageLst = typeof this.options.pageList === 'string' ?\n                    this.options.pageList.replace('[', '').replace(']', '')\n                        .replace(/ /g, '').toLowerCase().split(',') : this.options.pageList;\n                if ($.inArray(this.options.formatAllRows().toLowerCase(), pageLst)  > -1) {\n                    $allSelected = true;\n                }\n            }\n\n            this.totalPages = ~~((this.options.totalRows - 1) / this.options.pageSize) + 1;\n\n            this.options.totalPages = this.totalPages;\n        }\n        if (this.totalPages > 0 && this.options.pageNumber > this.totalPages) {\n            this.options.pageNumber = this.totalPages;\n        }\n\n        this.pageFrom = (this.options.pageNumber - 1) * this.options.pageSize + 1;\n        this.pageTo = this.options.pageNumber * this.options.pageSize;\n        if (this.pageTo > this.options.totalRows) {\n            this.pageTo = this.options.totalRows;\n        }\n\n        html.push(\n            '<div class=\"pull-' + this.options.paginationDetailHAlign + ' pagination-detail\">',\n            '<span class=\"pagination-info\">',\n            this.options.onlyInfoPagination ? this.options.formatDetailPagination(this.options.totalRows) :\n            this.options.formatShowingRows(this.pageFrom, this.pageTo, this.options.totalRows),\n            '</span>');\n\n        if (!this.options.onlyInfoPagination) {\n            html.push('<span class=\"page-list\">');\n\n            var pageNumber = [\n                    sprintf('<span class=\"btn-group %s\">',\n                        this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                            'dropdown' : 'dropup'),\n                    '<button type=\"button\" class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                    '<span class=\"page-size\">',\n                    $allSelected ? this.options.formatAllRows() : this.options.pageSize,\n                    '</span>',\n                    ' <span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu\" role=\"menu\">'\n                ];\n\n            if (typeof this.options.pageList === 'string') {\n                var list = this.options.pageList.replace('[', '').replace(']', '')\n                    .replace(/ /g, '').split(',');\n\n                pageList = [];\n                $.each(list, function (i, value) {\n                    pageList.push(value.toUpperCase() === that.options.formatAllRows().toUpperCase() ?\n                        that.options.formatAllRows() : +value);\n                });\n            }\n\n            $.each(pageList, function (i, page) {\n                if (!that.options.smartDisplay || i === 0 || pageList[i - 1] < that.options.totalRows) {\n                    var active;\n                    if ($allSelected) {\n                        active = page === that.options.formatAllRows() ? ' class=\"active\"' : '';\n                    } else {\n                        active = page === that.options.pageSize ? ' class=\"active\"' : '';\n                    }\n                    pageNumber.push(sprintf('<li role=\"menuitem\"%s><a href=\"#\">%s</a></li>', active, page));\n                }\n            });\n            pageNumber.push('</ul></span>');\n\n            html.push(this.options.formatRecordsPerPage(pageNumber.join('')));\n            html.push('</span>');\n\n            html.push('</div>',\n                '<div class=\"pull-' + this.options.paginationHAlign + ' pagination\">',\n                '<ul class=\"pagination' + sprintf(' pagination-%s', this.options.iconSize) + '\">',\n                '<li class=\"page-pre\"><a href=\"#\">' + this.options.paginationPreText + '</a></li>');\n\n            if (this.totalPages < 5) {\n                from = 1;\n                to = this.totalPages;\n            } else {\n                from = this.options.pageNumber - 2;\n                to = from + 4;\n                if (from < 1) {\n                    from = 1;\n                    to = 5;\n                }\n                if (to > this.totalPages) {\n                    to = this.totalPages;\n                    from = to - 4;\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber >= 3) {\n                    html.push('<li class=\"page-first' + (1 === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', 1, '</a>',\n                        '</li>');\n\n                    from++;\n                }\n\n                if (this.options.pageNumber >= 4) {\n                    if (this.options.pageNumber == 4 || this.totalPages == 6 || this.totalPages == 7) {\n                        from--;\n                    } else {\n                        html.push('<li class=\"page-first-separator disabled\">',\n                            '<a href=\"#\">...</a>',\n                            '</li>');\n                    }\n\n                    to--;\n                }\n            }\n\n            if (this.totalPages >= 7) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    from--;\n                }\n            }\n\n            if (this.totalPages == 6) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    to++;\n                }\n            } else if (this.totalPages >= 7) {\n                if (this.totalPages == 7 || this.options.pageNumber >= (this.totalPages - 3)) {\n                    to++;\n                }\n            }\n\n            for (i = from; i <= to; i++) {\n                html.push('<li class=\"page-number' + (i === this.options.pageNumber ? ' active' : '') + '\">',\n                    '<a href=\"#\">', i, '</a>',\n                    '</li>');\n            }\n\n            if (this.totalPages >= 8) {\n                if (this.options.pageNumber <= (this.totalPages - 4)) {\n                    html.push('<li class=\"page-last-separator disabled\">',\n                        '<a href=\"#\">...</a>',\n                        '</li>');\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber <= (this.totalPages - 3)) {\n                    html.push('<li class=\"page-last' + (this.totalPages === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', this.totalPages, '</a>',\n                        '</li>');\n                }\n            }\n\n            html.push(\n                '<li class=\"page-next\"><a href=\"#\">' + this.options.paginationNextText + '</a></li>',\n                '</ul>',\n                '</div>');\n        }\n        this.$pagination.html(html.join(''));\n\n        if (!this.options.onlyInfoPagination) {\n            $pageList = this.$pagination.find('.page-list a');\n            $first = this.$pagination.find('.page-first');\n            $pre = this.$pagination.find('.page-pre');\n            $next = this.$pagination.find('.page-next');\n            $last = this.$pagination.find('.page-last');\n            $number = this.$pagination.find('.page-number');\n\n            if (this.options.smartDisplay) {\n                if (this.totalPages <= 1) {\n                    this.$pagination.find('div.pagination').hide();\n                }\n                if (pageList.length < 2 || this.options.totalRows <= pageList[0]) {\n                    this.$pagination.find('span.page-list').hide();\n                }\n\n                // when data is empty, hide the pagination\n                this.$pagination[this.getData().length ? 'show' : 'hide']();\n            }\n\n            if (!this.options.paginationLoop) {\n                if (this.options.pageNumber === 1) {\n                    $pre.addClass('disabled');\n                }\n                if (this.options.pageNumber === this.totalPages) {\n                    $next.addClass('disabled');\n                }\n            }\n\n            if ($allSelected) {\n                this.options.pageSize = this.options.formatAllRows();\n            }\n            $pageList.off('click').on('click', $.proxy(this.onPageListChange, this));\n            $first.off('click').on('click', $.proxy(this.onPageFirst, this));\n            $pre.off('click').on('click', $.proxy(this.onPagePre, this));\n            $next.off('click').on('click', $.proxy(this.onPageNext, this));\n            $last.off('click').on('click', $.proxy(this.onPageLast, this));\n            $number.off('click').on('click', $.proxy(this.onPageNumber, this));\n        }\n    };\n\n    BootstrapTable.prototype.updatePagination = function (event) {\n        // Fix #171: IE disabled button can be clicked bug.\n        if (event && $(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        if (!this.options.maintainSelected) {\n            this.resetRows();\n        }\n\n        this.initPagination();\n        if (this.options.sidePagination === 'server') {\n            this.initServer();\n        } else {\n            this.initBody();\n        }\n\n        this.trigger('page-change', this.options.pageNumber, this.options.pageSize);\n    };\n\n    BootstrapTable.prototype.onPageListChange = function (event) {\n        var $this = $(event.currentTarget);\n\n        $this.parent().addClass('active').siblings().removeClass('active');\n        this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n            this.options.formatAllRows() : +$this.text();\n        this.$toolbar.find('.page-size').text(this.options.pageSize);\n\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageFirst = function (event) {\n        this.options.pageNumber = 1;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPagePre = function (event) {\n        if ((this.options.pageNumber - 1) === 0) {\n            this.options.pageNumber = this.options.totalPages;\n        } else {\n            this.options.pageNumber--;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNext = function (event) {\n        if ((this.options.pageNumber + 1) > this.options.totalPages) {\n            this.options.pageNumber = 1;\n        } else {\n            this.options.pageNumber++;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageLast = function (event) {\n        this.options.pageNumber = this.totalPages;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNumber = function (event) {\n        if (this.options.pageNumber === +$(event.currentTarget).text()) {\n            return;\n        }\n        this.options.pageNumber = +$(event.currentTarget).text();\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.initRow = function(item, i, data, parentDom) {\n        var that=this,\n            key,\n            html = [],\n            style = {},\n            csses = [],\n            data_ = '',\n            attributes = {},\n            htmlAttributes = [];\n\n        if ($.inArray(item, this.hiddenRows) > -1) {\n            return;\n        }\n\n        style = calculateObjectValue(this.options, this.options.rowStyle, [item, i], style);\n\n        if (style && style.css) {\n            for (key in style.css) {\n                csses.push(key + ': ' + style.css[key]);\n            }\n        }\n\n        attributes = calculateObjectValue(this.options,\n            this.options.rowAttributes, [item, i], attributes);\n\n        if (attributes) {\n            for (key in attributes) {\n                htmlAttributes.push(sprintf('%s=\"%s\"', key, escapeHTML(attributes[key])));\n            }\n        }\n\n        if (item._data && !$.isEmptyObject(item._data)) {\n            $.each(item._data, function(k, v) {\n                // ignore data-index\n                if (k === 'index') {\n                    return;\n                }\n                data_ += sprintf(' data-%s=\"%s\"', k, v);\n            });\n        }\n\n        html.push('<tr',\n            sprintf(' %s', htmlAttributes.join(' ')),\n            sprintf(' id=\"%s\"', $.isArray(item) ? undefined : item._id),\n            sprintf(' class=\"%s\"', style.classes || ($.isArray(item) ? undefined : item._class)),\n            sprintf(' data-index=\"%s\"', i),\n            sprintf(' data-uniqueid=\"%s\"', item[this.options.uniqueId]),\n            sprintf('%s', data_),\n            '>'\n        );\n\n        if (this.options.cardView) {\n            html.push(sprintf('<td colspan=\"%s\"><div class=\"card-views\">', this.header.fields.length));\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td>',\n                '<a class=\"detail-icon\" href=\"#\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.detailOpen),\n                '</a>',\n                '</td>');\n        }\n\n        $.each(this.header.fields, function(j, field) {\n            var text = '',\n                value_ = getItemField(item, field, that.options.escape),\n                value = '',\n                type = '',\n                cellStyle = {},\n                id_ = '',\n                class_ = that.header.classes[j],\n                data_ = '',\n                rowspan_ = '',\n                colspan_ = '',\n                title_ = '',\n                column = that.columns[j];\n\n            if (that.fromHtml && typeof value_ === 'undefined') {\n                return;\n            }\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            if (column.escape) {\n                value_ = escapeHTML(value_);\n            }\n\n            style = sprintf('style=\"%s\"', csses.concat(that.header.styles[j]).join('; '));\n\n            // handle td's id and class\n            if (item['_' + field + '_id']) {\n                id_ = sprintf(' id=\"%s\"', item['_' + field + '_id']);\n            }\n            if (item['_' + field + '_class']) {\n                class_ = sprintf(' class=\"%s\"', item['_' + field + '_class']);\n            }\n            if (item['_' + field + '_rowspan']) {\n                rowspan_ = sprintf(' rowspan=\"%s\"', item['_' + field + '_rowspan']);\n            }\n            if (item['_' + field + '_colspan']) {\n                colspan_ = sprintf(' colspan=\"%s\"', item['_' + field + '_colspan']);\n            }\n            if (item['_' + field + '_title']) {\n                title_ = sprintf(' title=\"%s\"', item['_' + field + '_title']);\n            }\n            cellStyle = calculateObjectValue(that.header,\n                that.header.cellStyles[j], [value_, item, i, field], cellStyle);\n            if (cellStyle.classes) {\n                class_ = sprintf(' class=\"%s\"', cellStyle.classes);\n            }\n            if (cellStyle.css) {\n                var csses_ = [];\n                for (var key in cellStyle.css) {\n                    csses_.push(key + ': ' + cellStyle.css[key]);\n                }\n                style = sprintf('style=\"%s\"', csses_.concat(that.header.styles[j]).join('; '));\n            }\n\n            value = calculateObjectValue(column,\n                that.header.formatters[j], [value_, item, i], value_);\n\n            if (item['_' + field + '_data'] && !$.isEmptyObject(item['_' + field + '_data'])) {\n                $.each(item['_' + field + '_data'], function(k, v) {\n                    // ignore data-index\n                    if (k === 'index') {\n                        return;\n                    }\n                    data_ += sprintf(' data-%s=\"%s\"', k, v);\n                });\n            }\n\n            if (column.checkbox || column.radio) {\n                type = column.checkbox ? 'checkbox' : type;\n                type = column.radio ? 'radio' : type;\n\n                text = [sprintf(that.options.cardView ?\n                        '<div class=\"card-view %s\">' : '<td class=\"bs-checkbox %s\">', column['class'] || ''),\n                    '<input' +\n                    sprintf(' data-index=\"%s\"', i) +\n                    sprintf(' name=\"%s\"', that.options.selectItemName) +\n                    sprintf(' type=\"%s\"', type) +\n                    sprintf(' value=\"%s\"', item[that.options.idField]) +\n                    sprintf(' checked=\"%s\"', value === true ||\n                        (value_ || value && value.checked) ? 'checked' : undefined) +\n                    sprintf(' disabled=\"%s\"', !column.checkboxEnabled ||\n                        (value && value.disabled) ? 'disabled' : undefined) +\n                    ' />',\n                    that.header.formatters[j] && typeof value === 'string' ? value : '',\n                    that.options.cardView ? '</div>' : '</td>'\n                ].join('');\n\n                item[that.header.stateField] = value === true || (value && value.checked);\n            } else {\n                value = typeof value === 'undefined' || value === null ?\n                    that.options.undefinedText : value;\n\n                text = that.options.cardView ? ['<div class=\"card-view\">',\n                    that.options.showHeader ? sprintf('<span class=\"title\" %s>%s</span>', style,\n                        getPropertyFromOther(that.columns, 'field', 'title', field)) : '',\n                    sprintf('<span class=\"value\">%s</span>', value),\n                    '</div>'\n                ].join('') : [sprintf('<td%s %s %s %s %s %s %s>',\n                        id_, class_, style, data_, rowspan_, colspan_, title_),\n                    value,\n                    '</td>'\n                ].join('');\n\n                // Hide empty data on Card view when smartDisplay is set to true.\n                if (that.options.cardView && that.options.smartDisplay && value === '') {\n                    // Should set a placeholder for event binding correct fieldIndex\n                    text = '<div class=\"card-view\"></div>';\n                }\n            }\n\n            html.push(text);\n        });\n\n        if (this.options.cardView) {\n            html.push('</div></td>');\n        }\n        html.push('</tr>');\n\n        return html.join(' ');\n    };\n\n    BootstrapTable.prototype.initBody = function (fixedScroll) {\n        var that = this,\n            html = [],\n            data = this.getData();\n\n        this.trigger('pre-body', data);\n\n        this.$body = this.$el.find('>tbody');\n        if (!this.$body.length) {\n            this.$body = $('<tbody></tbody>').appendTo(this.$el);\n        }\n\n        //Fix #389 Bootstrap-table-flatJSON is not working\n\n        if (!this.options.pagination || this.options.sidePagination === 'server') {\n            this.pageFrom = 1;\n            this.pageTo = data.length;\n        }\n\n        var trFragments = $(document.createDocumentFragment());\n        var hasTr;\n\n        for (var i = this.pageFrom - 1; i < this.pageTo; i++) {\n            var item = data[i];\n            var tr = this.initRow(item, i, data, trFragments);\n            hasTr = hasTr || !!tr;\n            if (tr&&tr!==true) {\n                trFragments.append(tr);\n            }\n        }\n\n        // show no records\n        if (!hasTr) {\n            trFragments.append('<tr class=\"no-records-found\">' +\n                sprintf('<td colspan=\"%s\">%s</td>',\n                this.$header.find('th').length,\n                this.options.formatNoMatches()) +\n                '</tr>');\n        }\n\n        this.$body.html(trFragments);\n\n        if (!fixedScroll) {\n            this.scrollTo(0);\n        }\n\n        // click to select by column\n        this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', function (e) {\n            var $td = $(this),\n                $tr = $td.parent(),\n                item = that.data[$tr.data('index')],\n                index = $td[0].cellIndex,\n                fields = that.getVisibleFields(),\n                field = fields[that.options.detailView && !that.options.cardView ? index - 1 : index],\n                column = that.columns[getFieldIndex(that.columns, field)],\n                value = getItemField(item, field, that.options.escape);\n\n            if ($td.find('.detail-icon').length) {\n                return;\n            }\n\n            that.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td);\n            that.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field);\n\n            // if click to select - then trigger the checkbox/radio click\n            if (e.type === 'click' && that.options.clickToSelect && column.clickToSelect) {\n                var $selectItem = $tr.find(sprintf('[name=\"%s\"]', that.options.selectItemName));\n                if ($selectItem.length) {\n                    $selectItem[0].click(); // #144: .trigger('click') bug\n                }\n            }\n        });\n\n        this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', function () {\n            var $this = $(this),\n                $tr = $this.parent().parent(),\n                index = $tr.data('index'),\n                row = data[index]; // Fix #980 Detail view, when searching, returns wrong row\n\n            // remove and update\n            if ($tr.next().is('tr.detail-view')) {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailOpen));\n                that.trigger('collapse-row', index, row);\n                $tr.next().remove();\n            } else {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailClose));\n                $tr.after(sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.find('td').length));\n                var $element = $tr.next().find('td');\n                var content = calculateObjectValue(that.options, that.options.detailFormatter, [index, row, $element], '');\n                if($element.length === 1) {\n                    $element.append(content);\n                }\n                that.trigger('expand-row', index, row, $element);\n            }\n            that.resetView();\n            return false;\n        });\n\n        this.$selectItem = this.$body.find(sprintf('[name=\"%s\"]', this.options.selectItemName));\n        this.$selectItem.off('click').on('click', function (event) {\n            event.stopImmediatePropagation();\n\n            var $this = $(this),\n                checked = $this.prop('checked'),\n                row = that.data[$this.data('index')];\n\n            if (that.options.maintainSelected && $(this).is(':radio')) {\n                $.each(that.options.data, function (i, row) {\n                    row[that.header.stateField] = false;\n                });\n            }\n\n            row[that.header.stateField] = checked;\n\n            if (that.options.singleSelect) {\n                that.$selectItem.not(this).each(function () {\n                    that.data[$(this).data('index')][that.header.stateField] = false;\n                });\n                that.$selectItem.filter(':checked').not(this).prop('checked', false);\n            }\n\n            that.updateSelected();\n            that.trigger(checked ? 'check' : 'uncheck', row, $this);\n        });\n\n        $.each(this.header.events, function (i, events) {\n            if (!events) {\n                return;\n            }\n            // fix bug, if events is defined with namespace\n            if (typeof events === 'string') {\n                events = calculateObjectValue(null, events);\n            }\n\n            var field = that.header.fields[i],\n                fieldIndex = $.inArray(field, that.getVisibleFields());\n\n            if (that.options.detailView && !that.options.cardView) {\n                fieldIndex += 1;\n            }\n\n            for (var key in events) {\n                that.$body.find('>tr:not(.no-records-found)').each(function () {\n                    var $tr = $(this),\n                        $td = $tr.find(that.options.cardView ? '.card-view' : 'td').eq(fieldIndex),\n                        index = key.indexOf(' '),\n                        name = key.substring(0, index),\n                        el = key.substring(index + 1),\n                        func = events[key];\n\n                    $td.find(el).off(name).on(name, function (e) {\n                        var index = $tr.data('index'),\n                            row = that.data[index],\n                            value = row[field];\n\n                        func.apply(this, [e, value, row, index]);\n                    });\n                });\n            }\n        });\n\n        this.updateSelected();\n        this.resetView();\n\n        this.trigger('post-body', data);\n    };\n\n    BootstrapTable.prototype.initServer = function (silent, query, url) {\n        var that = this,\n            data = {},\n            params = {\n                searchText: this.searchText,\n                sortName: this.options.sortName,\n                sortOrder: this.options.sortOrder\n            },\n            request;\n\n        if (this.options.pagination) {\n            params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n                this.options.totalRows : this.options.pageSize;\n            params.pageNumber = this.options.pageNumber;\n        }\n\n        if (!(url || this.options.url) && !this.options.ajax) {\n            return;\n        }\n\n        if (this.options.queryParamsType === 'limit') {\n            params = {\n                search: params.searchText,\n                sort: params.sortName,\n                order: params.sortOrder\n            };\n\n            if (this.options.pagination) {\n                params.offset = this.options.pageSize === this.options.formatAllRows() ?\n                    0 : this.options.pageSize * (this.options.pageNumber - 1);\n                params.limit = this.options.pageSize === this.options.formatAllRows() ?\n                    this.options.totalRows : this.options.pageSize;\n            }\n        }\n\n        if (!($.isEmptyObject(this.filterColumnsPartial))) {\n            params.filter = JSON.stringify(this.filterColumnsPartial, null);\n        }\n\n        data = calculateObjectValue(this.options, this.options.queryParams, [params], data);\n\n        $.extend(data, query || {});\n\n        // false to stop request\n        if (data === false) {\n            return;\n        }\n\n        if (!silent) {\n            this.$tableLoading.show();\n        }\n        request = $.extend({}, calculateObjectValue(null, this.options.ajaxOptions), {\n            type: this.options.method,\n            url:  url || this.options.url,\n            data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n                JSON.stringify(data) : data,\n            cache: this.options.cache,\n            contentType: this.options.contentType,\n            dataType: this.options.dataType,\n            success: function (res) {\n                res = calculateObjectValue(that.options, that.options.responseHandler, [res], res);\n\n                that.load(res);\n                that.trigger('load-success', res);\n                if (!silent) that.$tableLoading.hide();\n            },\n            error: function (res) {\n                that.trigger('load-error', res.status, res);\n                if (!silent) that.$tableLoading.hide();\n            }\n        });\n\n        if (this.options.ajax) {\n            calculateObjectValue(this, this.options.ajax, [request], null);\n        } else {\n            if (this._xhr && this._xhr.readyState !== 4) {\n                this._xhr.abort();\n            }\n            this._xhr = $.ajax(request);\n        }\n    };\n\n    BootstrapTable.prototype.initSearchText = function () {\n        if (this.options.search) {\n            if (this.options.searchText !== '') {\n                var $search = this.$toolbar.find('.search input');\n                $search.val(this.options.searchText);\n                this.onSearch({currentTarget: $search});\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getCaret = function () {\n        var that = this;\n\n        $.each(this.$header.find('th'), function (i, th) {\n            $(th).find('.sortable').removeClass('desc asc').addClass($(th).data('field') === that.options.sortName ? that.options.sortOrder : 'both');\n        });\n    };\n\n    BootstrapTable.prototype.updateSelected = function () {\n        var checkAll = this.$selectItem.filter(':enabled').length &&\n            this.$selectItem.filter(':enabled').length ===\n            this.$selectItem.filter(':enabled').filter(':checked').length;\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checkAll);\n\n        this.$selectItem.each(function () {\n            $(this).closest('tr')[$(this).prop('checked') ? 'addClass' : 'removeClass']('selected');\n        });\n    };\n\n    BootstrapTable.prototype.updateRows = function () {\n        var that = this;\n\n        this.$selectItem.each(function () {\n            that.data[$(this).data('index')][that.header.stateField] = $(this).prop('checked');\n        });\n    };\n\n    BootstrapTable.prototype.resetRows = function () {\n        var that = this;\n\n        $.each(this.data, function (i, row) {\n            that.$selectAll.prop('checked', false);\n            that.$selectItem.prop('checked', false);\n            if (that.header.stateField) {\n                row[that.header.stateField] = false;\n            }\n        });\n        this.initHiddenRows();\n    };\n\n    BootstrapTable.prototype.trigger = function (name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        name += '.bs.table';\n        this.options[BootstrapTable.EVENTS[name]].apply(this.options, args);\n        this.$el.trigger($.Event(name), args);\n\n        this.options.onAll(name, args);\n        this.$el.trigger($.Event('all.bs.table'), [name, args]);\n    };\n\n    BootstrapTable.prototype.resetHeader = function () {\n        // fix #61: the hidden table reset header bug.\n        // fix bug: get $el.css('width') error sometime (height = 500)\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout($.proxy(this.fitHeader, this), this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitHeader = function () {\n        var that = this,\n            fixedBody,\n            scrollWidth,\n            focused,\n            focusedTemp;\n\n        if (that.$el.is(':hidden')) {\n            that.timeoutId_ = setTimeout($.proxy(that.fitHeader, that), 100);\n            return;\n        }\n        fixedBody = this.$tableBody.get(0);\n\n        scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n        fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            getScrollBarWidth() : 0;\n\n        this.$el.css('margin-top', -this.$header.outerHeight());\n\n        focused = $(':focus');\n        if (focused.length > 0) {\n            var $th = focused.parents('th');\n            if ($th.length > 0) {\n                var dataField = $th.attr('data-field');\n                if (dataField !== undefined) {\n                    var $headerTh = this.$header.find(\"[data-field='\" + dataField + \"']\");\n                    if ($headerTh.length > 0) {\n                        $headerTh.find(\":input\").addClass(\"focus-temp\");\n                    }\n                }\n            }\n        }\n\n        this.$header_ = this.$header.clone(true, true);\n        this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]');\n        this.$tableHeader.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', this.$el.outerWidth())\n            .html('').attr('class', this.$el.attr('class'))\n            .append(this.$header_);\n\n\n        focusedTemp = $('.focus-temp:visible:eq(0)');\n        if (focusedTemp.length > 0) {\n            focusedTemp.focus();\n            this.$header.find('.focus-temp').removeClass('focus-temp');\n        }\n\n        // fix bug: $.data() is not working as expected after $.append()\n        this.$header.find('th[data-field]').each(function (i) {\n            that.$header_.find(sprintf('th[data-field=\"%s\"]', $(this).data('field'))).data($(this).data());\n        });\n\n        var visibleFields = this.getVisibleFields(),\n            $ths = this.$header_.find('th');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this),\n                index = i;\n\n            if (that.options.detailView && !that.options.cardView) {\n                if (i === 0) {\n                    that.$header_.find('th.detail').find('.fht-cell').width($this.innerWidth());\n                }\n                index = i - 1;\n            }\n\n            var $th = that.$header_.find(sprintf('th[data-field=\"%s\"]', visibleFields[index]));\n            if ($th.length > 1) {\n                $th = $($ths[$this[0].cellIndex]);\n            }\n\n            $th.find('.fht-cell').width($this.innerWidth());\n        });\n        // horizontal scroll event\n        // TODO: it's probably better improving the layout than binding to scroll event\n        this.$tableBody.off('scroll').on('scroll', function () {\n            that.$tableHeader.scrollLeft($(this).scrollLeft());\n\n            if (that.options.showFooter && !that.options.cardView) {\n                that.$tableFooter.scrollLeft($(this).scrollLeft());\n            }\n        });\n        that.trigger('post-header');\n    };\n\n    BootstrapTable.prototype.resetFooter = function () {\n        var that = this,\n            data = that.getData(),\n            html = [];\n\n        if (!this.options.showFooter || this.options.cardView) { //do nothing\n            return;\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td><div class=\"th-inner\">&nbsp;</div><div class=\"fht-cell\"></div></td>');\n        }\n\n        $.each(this.columns, function (i, column) {\n            var key,\n                falign = '', // footer align style\n                valign = '',\n                csses = [],\n                style = {},\n                class_ = sprintf(' class=\"%s\"', column['class']);\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            falign = sprintf('text-align: %s; ', column.falign ? column.falign : column.align);\n            valign = sprintf('vertical-align: %s; ', column.valign);\n\n            style = calculateObjectValue(null, that.options.footerStyle);\n\n            if (style && style.css) {\n                for (key in style.css) {\n                    csses.push(key + ': ' + style.css[key]);\n                }\n            }\n\n            html.push('<td', class_, sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')), '>');\n            html.push('<div class=\"th-inner\">');\n\n            html.push(calculateObjectValue(column, column.footerFormatter, [data], '&nbsp;') || '&nbsp;');\n\n            html.push('</div>');\n            html.push('<div class=\"fht-cell\"></div>');\n            html.push('</div>');\n            html.push('</td>');\n        });\n\n        this.$tableFooter.find('tr').html(html.join(''));\n        this.$tableFooter.show();\n        clearTimeout(this.timeoutFooter_);\n        this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this),\n            this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitFooter = function () {\n        var that = this,\n            $footerTd,\n            elWidth,\n            scrollWidth;\n\n        clearTimeout(this.timeoutFooter_);\n        if (this.$el.is(':hidden')) {\n            this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this), 100);\n            return;\n        }\n\n        elWidth = this.$el.css('width');\n        scrollWidth = elWidth > this.$tableBody.width() ? getScrollBarWidth() : 0;\n\n        this.$tableFooter.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', elWidth)\n            .attr('class', this.$el.attr('class'));\n\n        $footerTd = this.$tableFooter.find('td');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this);\n\n            $footerTd.eq(i).find('.fht-cell').width($this.innerWidth());\n        });\n    };\n\n    BootstrapTable.prototype.toggleColumn = function (index, checked, needUpdate) {\n        if (index === -1) {\n            return;\n        }\n        this.columns[index].visible = checked;\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if (needUpdate) {\n                $items.filter(sprintf('[value=\"%s\"]', index)).prop('checked', checked);\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getVisibleFields = function () {\n        var that = this,\n            visibleFields = [];\n\n        $.each(this.header.fields, function (j, field) {\n            var column = that.columns[getFieldIndex(that.columns, field)];\n\n            if (!column.visible) {\n                return;\n            }\n            visibleFields.push(field);\n        });\n        return visibleFields;\n    };\n\n    // PUBLIC FUNCTION DEFINITION\n    // =======================\n\n    BootstrapTable.prototype.resetView = function (params) {\n        var padding = 0;\n\n        if (params && params.height) {\n            this.options.height = params.height;\n        }\n\n        this.$selectAll.prop('checked', this.$selectItem.length > 0 &&\n            this.$selectItem.length === this.$selectItem.filter(':checked').length);\n\n        if (this.options.height) {\n            var toolbarHeight = this.$toolbar.outerHeight(true),\n                paginationHeight = this.$pagination.outerHeight(true),\n                height = this.options.height - toolbarHeight - paginationHeight;\n\n            this.$tableContainer.css('height', height + 'px');\n        }\n\n        if (this.options.cardView) {\n            // remove the element css\n            this.$el.css('margin-top', '0');\n            this.$tableContainer.css('padding-bottom', '0');\n            this.$tableFooter.hide();\n            return;\n        }\n\n        if (this.options.showHeader && this.options.height) {\n            this.$tableHeader.show();\n            this.resetHeader();\n            padding += this.$header.outerHeight();\n        } else {\n            this.$tableHeader.hide();\n            this.trigger('post-header');\n        }\n\n        if (this.options.showFooter) {\n            this.resetFooter();\n            if (this.options.height) {\n                padding += this.$tableFooter.outerHeight() + 1;\n            }\n        }\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n        this.$tableContainer.css('padding-bottom', padding + 'px');\n        this.trigger('reset-view');\n    };\n\n    BootstrapTable.prototype.getData = function (useCurrentPage) {\n        return (this.searchText || !$.isEmptyObject(this.filterColumns) || !$.isEmptyObject(this.filterColumnsPartial)) ?\n            (useCurrentPage ? this.data.slice(this.pageFrom - 1, this.pageTo) : this.data) :\n            (useCurrentPage ? this.options.data.slice(this.pageFrom - 1, this.pageTo) : this.options.data);\n    };\n\n    BootstrapTable.prototype.load = function (data) {\n        var fixedScroll = false;\n\n        // #431: support pagination\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows = data[this.options.totalField];\n            fixedScroll = data.fixedScroll;\n            data = data[this.options.dataField];\n        } else if (!$.isArray(data)) { // support fixedScroll\n            fixedScroll = data.fixedScroll;\n            data = data.data;\n        }\n\n        this.initData(data);\n        this.initSearch();\n        this.initPagination();\n        this.initBody(fixedScroll);\n    };\n\n    BootstrapTable.prototype.append = function (data) {\n        this.initData(data, 'append');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.prepend = function (data) {\n        this.initData(data, 'prepend');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.remove = function (params) {\n        var len = this.options.data.length,\n            i, row;\n\n        if (!params.hasOwnProperty('field') || !params.hasOwnProperty('values')) {\n            return;\n        }\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (!row.hasOwnProperty(params.field)) {\n                continue;\n            }\n            if ($.inArray(row[params.field], params.values) !== -1) {\n                this.options.data.splice(i, 1);\n                if (this.options.sidePagination === 'server') {\n                    this.options.totalRows -= 1;\n                }\n            }\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.removeAll = function () {\n        if (this.options.data.length > 0) {\n            this.options.data.splice(0, this.options.data.length);\n            this.initSearch();\n            this.initPagination();\n            this.initBody(true);\n        }\n    };\n\n    BootstrapTable.prototype.getRowByUniqueId = function (id) {\n        var uniqueId = this.options.uniqueId,\n            len = this.options.data.length,\n            dataRow = null,\n            i, row, rowUniqueId;\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (row.hasOwnProperty(uniqueId)) { // uniqueId is a column\n                rowUniqueId = row[uniqueId];\n            } else if(row._data.hasOwnProperty(uniqueId)) { // uniqueId is a row data property\n                rowUniqueId = row._data[uniqueId];\n            } else {\n                continue;\n            }\n\n            if (typeof rowUniqueId === 'string') {\n                id = id.toString();\n            } else if (typeof rowUniqueId === 'number') {\n                if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n                    id = parseInt(id);\n                } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n                    id = parseFloat(id);\n                }\n            }\n\n            if (rowUniqueId === id) {\n                dataRow = row;\n                break;\n            }\n        }\n\n        return dataRow;\n    };\n\n    BootstrapTable.prototype.removeByUniqueId = function (id) {\n        var len = this.options.data.length,\n            row = this.getRowByUniqueId(id);\n\n        if (row) {\n            this.options.data.splice(this.options.data.indexOf(row), 1);\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateByUniqueId = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            var rowId;\n\n            if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n                return;\n            }\n\n            rowId = $.inArray(that.getRowByUniqueId(params.id), that.options.data);\n\n            if (rowId === -1) {\n                return;\n            }\n            $.extend(that.options.data[rowId], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.insertRow = function (params) {\n        if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n            return;\n        }\n        this.data.splice(params.index, 0, params.row);\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateRow = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n                return;\n            }\n            $.extend(that.options.data[params.index], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.initHiddenRows = function () {\n        this.hiddenRows = [];\n    };\n\n    BootstrapTable.prototype.showRow = function (params) {\n        this.toggleRow(params, true);\n    };\n\n    BootstrapTable.prototype.hideRow = function (params) {\n        this.toggleRow(params, false);\n    };\n\n    BootstrapTable.prototype.toggleRow = function (params, visible) {\n        var row, index;\n\n        if (params.hasOwnProperty('index')) {\n            row = this.getData()[params.index];\n        } else if (params.hasOwnProperty('uniqueId')) {\n            row = this.getRowByUniqueId(params.uniqueId);\n        }\n\n        if (!row) {\n            return;\n        }\n\n        index = $.inArray(row, this.hiddenRows);\n\n        if (!visible && index === -1) {\n            this.hiddenRows.push(row);\n        } else if (visible && index > -1) {\n            this.hiddenRows.splice(index, 1);\n        }\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getHiddenRows = function (show) {\n        var that = this,\n            data = this.getData(),\n            rows = [];\n\n        $.each(data, function (i, row) {\n            if ($.inArray(row, that.hiddenRows) > -1) {\n                rows.push(row);\n            }\n        });\n        this.hiddenRows = rows;\n        return rows;\n    };\n\n    BootstrapTable.prototype.mergeCells = function (options) {\n        var row = options.index,\n            col = $.inArray(options.field, this.getVisibleFields()),\n            rowspan = options.rowspan || 1,\n            colspan = options.colspan || 1,\n            i, j,\n            $tr = this.$body.find('>tr'),\n            $td;\n\n        if (this.options.detailView && !this.options.cardView) {\n            col += 1;\n        }\n\n        $td = $tr.eq(row).find('>td').eq(col);\n\n        if (row < 0 || col < 0 || row >= this.data.length) {\n            return;\n        }\n\n        for (i = row; i < row + rowspan; i++) {\n            for (j = col; j < col + colspan; j++) {\n                $tr.eq(i).find('>td').eq(j).hide();\n            }\n        }\n\n        $td.attr('rowspan', rowspan).attr('colspan', colspan).show();\n    };\n\n    BootstrapTable.prototype.updateCell = function (params) {\n        if (!params.hasOwnProperty('index') ||\n            !params.hasOwnProperty('field') ||\n            !params.hasOwnProperty('value')) {\n            return;\n        }\n        this.data[params.index][params.field] = params.value;\n\n        if (params.reinit === false) {\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getOptions = function () {\n        return this.options;\n    };\n\n    BootstrapTable.prototype.getSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            // fix #2424: from html with checkbox\n            return row[that.header.stateField] === true;\n        });\n    };\n\n    BootstrapTable.prototype.getAllSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            return row[that.header.stateField];\n        });\n    };\n\n    BootstrapTable.prototype.checkAll = function () {\n        this.checkAll_(true);\n    };\n\n    BootstrapTable.prototype.uncheckAll = function () {\n        this.checkAll_(false);\n    };\n\n    BootstrapTable.prototype.checkInvert = function () {\n        var that = this;\n        var rows = that.$selectItem.filter(':enabled');\n        var checked = rows.filter(':checked');\n        rows.each(function() {\n            $(this).prop('checked', !$(this).prop('checked'));\n        });\n        that.updateRows();\n        that.updateSelected();\n        that.trigger('uncheck-some', checked);\n        checked = that.getSelections();\n        that.trigger('check-some', checked);\n    };\n\n    BootstrapTable.prototype.checkAll_ = function (checked) {\n        var rows;\n        if (!checked) {\n            rows = this.getSelections();\n        }\n        this.$selectAll.add(this.$selectAll_).prop('checked', checked);\n        this.$selectItem.filter(':enabled').prop('checked', checked);\n        this.updateRows();\n        if (checked) {\n            rows = this.getSelections();\n        }\n        this.trigger(checked ? 'check-all' : 'uncheck-all', rows);\n    };\n\n    BootstrapTable.prototype.check = function (index) {\n        this.check_(true, index);\n    };\n\n    BootstrapTable.prototype.uncheck = function (index) {\n        this.check_(false, index);\n    };\n\n    BootstrapTable.prototype.check_ = function (checked, index) {\n        var $el = this.$selectItem.filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n        this.data[index][this.header.stateField] = checked;\n        this.updateSelected();\n        this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el);\n    };\n\n    BootstrapTable.prototype.checkBy = function (obj) {\n        this.checkBy_(true, obj);\n    };\n\n    BootstrapTable.prototype.uncheckBy = function (obj) {\n        this.checkBy_(false, obj);\n    };\n\n    BootstrapTable.prototype.checkBy_ = function (checked, obj) {\n        if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n            return;\n        }\n\n        var that = this,\n            rows = [];\n        $.each(this.options.data, function (index, row) {\n            if (!row.hasOwnProperty(obj.field)) {\n                return false;\n            }\n            if ($.inArray(row[obj.field], obj.values) !== -1) {\n                var $el = that.$selectItem.filter(':enabled')\n                    .filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n                row[that.header.stateField] = checked;\n                rows.push(row);\n                that.trigger(checked ? 'check' : 'uncheck', row, $el);\n            }\n        });\n        this.updateSelected();\n        this.trigger(checked ? 'check-some' : 'uncheck-some', rows);\n    };\n\n    BootstrapTable.prototype.destroy = function () {\n        this.$el.insertBefore(this.$container);\n        $(this.options.toolbar).insertBefore(this.$el);\n        this.$container.next().remove();\n        this.$container.remove();\n        this.$el.html(this.$el_.html())\n            .css('margin-top', '0')\n            .attr('class', this.$el_.attr('class') || ''); // reset the class\n    };\n\n    BootstrapTable.prototype.showLoading = function () {\n        this.$tableLoading.show();\n    };\n\n    BootstrapTable.prototype.hideLoading = function () {\n        this.$tableLoading.hide();\n    };\n\n    BootstrapTable.prototype.togglePagination = function () {\n        this.options.pagination = !this.options.pagination;\n        var button = this.$toolbar.find('button[name=\"paginationSwitch\"] i');\n        if (this.options.pagination) {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchDown);\n        } else {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchUp);\n        }\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.refresh = function (params) {\n        if (params && params.url) {\n            this.options.url = params.url;\n        }\n        if (params && params.pageNumber) {\n            this.options.pageNumber = params.pageNumber;\n        }\n        if (params && params.pageSize) {\n            this.options.pageSize = params.pageSize;\n        }\n        this.initServer(params && params.silent,\n            params && params.query, params && params.url);\n        this.trigger('refresh', params);\n    };\n\n    BootstrapTable.prototype.resetWidth = function () {\n        if (this.options.showHeader && this.options.height) {\n            this.fitHeader();\n        }\n        if (this.options.showFooter) {\n            this.fitFooter();\n        }\n    };\n\n    BootstrapTable.prototype.showColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), true, true);\n    };\n\n    BootstrapTable.prototype.hideColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), false, true);\n    };\n\n    BootstrapTable.prototype.getHiddenColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return !column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.getVisibleColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.toggleAllColumns = function (visible) {\n        $.each(this.columns, function (i, column) {\n            this.columns[i].visible = visible;\n        });\n\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.showAllColumns = function () {\n        this.toggleAllColumns(true);\n    };\n\n    BootstrapTable.prototype.hideAllColumns = function () {\n        this.toggleAllColumns(false);\n    };\n\n    BootstrapTable.prototype.filterBy = function (columns) {\n        this.filterColumns = $.isEmptyObject(columns) ? {} : columns;\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.scrollTo = function (value) {\n        if (typeof value === 'string') {\n            value = value === 'bottom' ? this.$tableBody[0].scrollHeight : 0;\n        }\n        if (typeof value === 'number') {\n            this.$tableBody.scrollTop(value);\n        }\n        if (typeof value === 'undefined') {\n            return this.$tableBody.scrollTop();\n        }\n    };\n\n    BootstrapTable.prototype.getScrollPosition = function () {\n        return this.scrollTo();\n    };\n\n    BootstrapTable.prototype.selectPage = function (page) {\n        if (page > 0 && page <= this.options.totalPages) {\n            this.options.pageNumber = page;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.prevPage = function () {\n        if (this.options.pageNumber > 1) {\n            this.options.pageNumber--;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.nextPage = function () {\n        if (this.options.pageNumber < this.options.totalPages) {\n            this.options.pageNumber++;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.toggleView = function () {\n        this.options.cardView = !this.options.cardView;\n        this.initHeader();\n        // Fixed remove toolbar when click cardView button.\n        //that.initToolbar();\n        this.initBody();\n        this.trigger('toggle', this.options.cardView);\n    };\n\n    BootstrapTable.prototype.refreshOptions = function (options) {\n        //If the objects are equivalent then avoid the call of destroy / init methods\n        if (compareObjects(this.options, options, true)) {\n            return;\n        }\n        this.options = $.extend(this.options, options);\n        this.trigger('refresh-options', this.options);\n        this.destroy();\n        this.init();\n    };\n\n    BootstrapTable.prototype.resetSearch = function (text) {\n        var $search = this.$toolbar.find('.search input');\n        $search.val(text || '');\n        this.onSearch({currentTarget: $search});\n    };\n\n    BootstrapTable.prototype.expandRow_ = function (expand, index) {\n        var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', index));\n        if ($tr.next().is('tr.detail-view') === (expand ? false : true)) {\n            $tr.find('> td > .detail-icon').click();\n        }\n    };\n\n    BootstrapTable.prototype.expandRow = function (index) {\n        this.expandRow_(true, index);\n    };\n\n    BootstrapTable.prototype.collapseRow = function (index) {\n        this.expandRow_(false, index);\n    };\n\n    BootstrapTable.prototype.expandAllRows = function (isSubTable) {\n        if (isSubTable) {\n            var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', 0)),\n                that = this,\n                detailIcon = null,\n                executeInterval = false,\n                idInterval = -1;\n\n            if (!$tr.next().is('tr.detail-view')) {\n                $tr.find('> td > .detail-icon').click();\n                executeInterval = true;\n            } else if (!$tr.next().next().is('tr.detail-view')) {\n                $tr.next().find(\".detail-icon\").click();\n                executeInterval = true;\n            }\n\n            if (executeInterval) {\n                try {\n                    idInterval = setInterval(function () {\n                        detailIcon = that.$body.find(\"tr.detail-view\").last().find(\".detail-icon\");\n                        if (detailIcon.length > 0) {\n                            detailIcon.click();\n                        } else {\n                            clearInterval(idInterval);\n                        }\n                    }, 1);\n                } catch (ex) {\n                    clearInterval(idInterval);\n                }\n            }\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(true, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.collapseAllRows = function (isSubTable) {\n        if (isSubTable) {\n            this.expandRow_(false, 0);\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(false, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.updateFormatText = function (name, text) {\n        if (this.options[sprintf('format%s', name)]) {\n            if (typeof text === 'string') {\n                this.options[sprintf('format%s', name)] = function () {\n                    return text;\n                };\n            } else if (typeof text === 'function') {\n                this.options[sprintf('format%s', name)] = text;\n            }\n        }\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n    };\n\n    // BOOTSTRAP TABLE PLUGIN DEFINITION\n    // =======================\n\n    var allowedMethods = [\n        'getOptions',\n        'getSelections', 'getAllSelections', 'getData',\n        'load', 'append', 'prepend', 'remove', 'removeAll',\n        'insertRow', 'updateRow', 'updateCell', 'updateByUniqueId', 'removeByUniqueId',\n        'getRowByUniqueId', 'showRow', 'hideRow', 'getHiddenRows',\n        'mergeCells',\n        'checkAll', 'uncheckAll', 'checkInvert',\n        'check', 'uncheck',\n        'checkBy', 'uncheckBy',\n        'refresh',\n        'resetView',\n        'resetWidth',\n        'destroy',\n        'showLoading', 'hideLoading',\n        'showColumn', 'hideColumn', 'getHiddenColumns', 'getVisibleColumns',\n        'showAllColumns', 'hideAllColumns',\n        'filterBy',\n        'scrollTo',\n        'getScrollPosition',\n        'selectPage', 'prevPage', 'nextPage',\n        'togglePagination',\n        'toggleView',\n        'refreshOptions',\n        'resetSearch',\n        'expandRow', 'collapseRow', 'expandAllRows', 'collapseAllRows',\n        'updateFormatText'\n    ];\n\n    $.fn.bootstrapTable = function (option) {\n        var value,\n            args = Array.prototype.slice.call(arguments, 1);\n\n        this.each(function () {\n            var $this = $(this),\n                data = $this.data('bootstrap.table'),\n                options = $.extend({}, BootstrapTable.DEFAULTS, $this.data(),\n                    typeof option === 'object' && option);\n\n            if (typeof option === 'string') {\n                if ($.inArray(option, allowedMethods) < 0) {\n                    throw new Error(\"Unknown method: \" + option);\n                }\n\n                if (!data) {\n                    return;\n                }\n\n                value = data[option].apply(data, args);\n\n                if (option === 'destroy') {\n                    $this.removeData('bootstrap.table');\n                }\n            }\n\n            if (!data) {\n                $this.data('bootstrap.table', (data = new BootstrapTable(this, options)));\n            }\n        });\n\n        return typeof value === 'undefined' ? this : value;\n    };\n\n    $.fn.bootstrapTable.Constructor = BootstrapTable;\n    $.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS;\n    $.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS;\n    $.fn.bootstrapTable.locales = BootstrapTable.LOCALES;\n    $.fn.bootstrapTable.methods = allowedMethods;\n    $.fn.bootstrapTable.utils = {\n        sprintf: sprintf,\n        getFieldIndex: getFieldIndex,\n        compareObjects: compareObjects,\n        calculateObjectValue: calculateObjectValue,\n        getItemField: getItemField,\n        objectKeys: objectKeys,\n        isIEBrowser: isIEBrowser\n    };\n\n    // BOOTSTRAP TABLE INIT\n    // =======================\n\n    $(function () {\n        $('[data-toggle=\"table\"]').bootstrapTable();\n    });\n})(jQuery);\n\n\n/***/ }),\n\n/***/ 261:\n/***/ (function(module, exports) {\n\n/**\n * @author: Dennis Hernández\n * @webSite: http://djhvscf.github.io/Blog\n * @version: v1.1.0\n */\n\n!function ($) {\n\n    'use strict';\n\n    var showHideColumns = function (that, checked) {\n        if (that.options.columnsHidden.length > 0 ) {\n            $.each(that.columns, function (i, column) {\n                if (that.options.columnsHidden.indexOf(column.field) !== -1) {\n                    if (column.visible !== checked) {\n                        that.toggleColumn($.fn.bootstrapTable.utils.getFieldIndex(that.columns, column.field), checked, true);\n                    }\n                }\n            });\n        }\n    };\n\n    var resetView = function (that) {\n        if (that.options.height || that.options.showFooter) {\n            setTimeout(function(){\n                that.resetView.call(that);\n            }, 1);\n        }\n    };\n\n    var changeView = function (that, width, height) {\n        if (that.options.minHeight) {\n            if ((width <= that.options.minWidth) && (height <= that.options.minHeight)) {\n                conditionCardView(that);\n            } else if ((width > that.options.minWidth) && (height > that.options.minHeight)) {\n                conditionFullView(that);\n            }\n        } else {\n            if (width <= that.options.minWidth) {\n                conditionCardView(that);\n            } else if (width > that.options.minWidth) {\n                conditionFullView(that);\n            }\n        }\n\n        resetView(that);\n    };\n\n    var conditionCardView = function (that) {\n        changeTableView(that, false);\n        showHideColumns(that, false);\n    };\n\n    var conditionFullView = function (that) {\n        changeTableView(that, true);\n        showHideColumns(that, true);\n    };\n\n    var changeTableView = function (that, cardViewState) {\n        that.options.cardView = cardViewState;\n        that.toggleView();\n    };\n\n    var debounce = function(func,wait) {\n        var timeout;\n        return function() {\n            var context = this,\n                args = arguments;\n            var later = function() {\n                timeout = null;\n                func.apply(context,args);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, {\n        mobileResponsive: false,\n        minWidth: 562,\n        minHeight: undefined,\n        heightThreshold: 100, // just slightly larger than mobile chrome's auto-hiding toolbar\n        checkOnInit: true,\n        columnsHidden: []\n    });\n\n    var BootstrapTable = $.fn.bootstrapTable.Constructor,\n        _init = BootstrapTable.prototype.init;\n\n    BootstrapTable.prototype.init = function () {\n        _init.apply(this, Array.prototype.slice.apply(arguments));\n\n        if (!this.options.mobileResponsive) {\n            return;\n        }\n\n        if (!this.options.minWidth) {\n            return;\n        }\n\n        if (this.options.minWidth < 100 && this.options.resizable) {\n            console.log(\"The minWidth when the resizable extension is active should be greater or equal than 100\");\n            this.options.minWidth = 100;\n        }\n\n        var that = this,\n            old = {\n                width: $(window).width(),\n                height: $(window).height()\n            };\n\n        $(window).on('resize orientationchange',debounce(function (evt) {\n            // reset view if height has only changed by at least the threshold.\n            var height = $(this).height(),\n                width = $(this).width();\n\n            if (Math.abs(old.height - height) > that.options.heightThreshold || old.width != width) {\n                changeView(that, width, height);\n                old = {\n                    width: width,\n                    height: height\n                };\n            }\n        },200));\n\n        if (this.options.checkOnInit) {\n            var height = $(window).height(),\n                width = $(window).width();\n            changeView(this, width, height);\n            old = {\n                width: width,\n                height: height\n            };\n        }\n    };\n}(jQuery);\n\n\n/***/ }),\n\n/***/ 262:\n/***/ (function(module, exports) {\n\n/**\n * Bootstrap Table Spanish (España) translation\n * Author: Antonio Pérez <anpegar@gmail.com>\n */\n (function ($) {\n    'use strict';\n    \n    $.fn.bootstrapTable.locales['es-SP'] = {\n        formatLoadingMessage: function () {\n            return 'Cargando, por favor espera...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return pageNumber + ' registros por p&#225;gina.';\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return pageFrom + ' - ' + pageTo + ' de ' + totalRows + ' registros.';\n        },\n        formatSearch: function () {\n            return 'Buscar';\n        },\n        formatNoMatches: function () {\n            return 'No se han encontrado registros.';\n        },\n        formatRefresh: function () {\n            return 'Actualizar';\n        },\n        formatToggle: function () {\n            return 'Alternar';\n        },\n        formatColumns: function () {\n            return 'Columnas';\n        },\n        formatAllRows: function () {\n            return 'Todo';\n        }\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales['es-SP']);\n\n})(jQuery);\n\n/***/ }),\n\n/***/ 263:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__ = __webpack_require__(266);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d9ec8fe2_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__ = __webpack_require__(268);\nvar normalizeComponent = __webpack_require__(4)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_d9ec8fe2_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 266:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__ = __webpack_require__(267);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_bootstrap_table__ = __webpack_require__(260);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_bootstrap_table___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_bootstrap_table__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_bootstrap_table_dist_extensions_mobile_bootstrap_table_mobile__ = __webpack_require__(261);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_bootstrap_table_dist_extensions_mobile_bootstrap_table_mobile___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__node_modules_bootstrap_table_dist_extensions_mobile_bootstrap_table_mobile__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__ = __webpack_require__(262);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__);\n\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    cols: {\n      type: Array\n    },\n    data: {\n      type: String\n    },\n    options: {\n      type: Object\n    },\n    ids: {\n      type: String\n    },\n    endpoint: {\n      type: String\n    },\n    parentId: {\n      type: String\n    },\n    toolbar: {\n      type: String\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.refresh(this.data);\n  },\n\n  watch: {\n    data: function data() {\n      this.refresh(this.data);\n      this.intialized = false;\n    }\n  },\n\n  methods: {\n    init: function init() {\n      this.table = $('#' + this.ids);\n      this.$filter = $(this.parentId + ' .filter');\n      this.activate();\n      this.listen();\n    },\n    activate: function activate(page) {\n      var self = this;\n      var search = true;\n      if (typeof self.options.search !== 'undefined') {\n        search = false;\n      }\n      this.table.bootstrapTable({\n        columns: self.cols,\n        sortOrder: 'asc',\n        search: search,\n        toolbar: self.toolbar,\n        showRefresh: false,\n        showColumns: false,\n        showExport: false,\n        minimumCountColumns: 2,\n        showPaginationSwitch: false,\n        pagination: true,\n        idField: 'id',\n        pageSize: self.options.pageSize || 50,\n        pageList: self.options.pageList || [10, 20, 50, 100, 2000],\n        showFooter: false,\n        clickToSelect: true,\n        singleSelect: true,\n        striped: false,\n        fixed: true,\n        footer: false,\n        mobileResponsive: true,\n        checkOnInit: true\n      });\n      this.table.find('tbody').css({ display: 'table-row-group' });\n      this.table.addClass('innertable');\n      this.$filter.change();\n      if (!this.intialized) {\n        this.initialized = true;\n        this.customSearch();\n        this.listen();\n      }\n      if (page) {\n        this.table.bootstrapTable('selectPage', page);\n      }\n    },\n    getSelectedRow: function getSelectedRow() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var row = this.table.bootstrapTable('getSelections')[0];\n      if (emit) {\n        this.$emit('selected-row', row);\n      }\n      return row;\n    },\n    getId: function getId() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var self = this;\n      var id = $.map(this.table.bootstrapTable('getSelections'), function (row) {\n        return row[self.idField];\n      });\n      if (emit) {\n        this.$emit('id', id);\n      }\n      return id;\n    },\n    refresh: function refresh(content) {\n      var options = this.table.bootstrapTable('getOptions');\n      this.table.bootstrapTable('destroy');\n      this.table.find('tbody').html(content);\n      this.activate(options.pageNumber);\n    },\n    listen: function listen() {\n      var _this = this;\n\n      var self = this;\n      this.table.on('all.bs.table', function (e, name, args) {\n        if (name === 'check.bs.table' || name === 'uncheck.bs.table') {\n          var row = _this.getSelectedRow();\n          self.$emit('check-uncheck', name, row, args);\n        } else if (name === 'click-cell.bs.table' && args[0] === 'estado') {\n          self.$emit('cell-clicked', name, args);\n        }\n      });\n\n      $(window).resize(function () {\n        self.table.bootstrapTable('resetView');\n      });\n    },\n    customSearch: function customSearch() {\n      $(this.parentId + ' .pull-right.search').addClass('hide');\n      var $inputSearch = $(this.parentId + ' .search input');\n\n      var self = this;\n      // eslint-disable-next-line\n      $inputSearch.on('click', function () {\n        var $this = $(this).parent();\n        $this.addClass('focus');\n      });\n      // eslint-disable-next-line\n      $inputSearch.on('blur', function () {\n        var $this = $(this).parent();\n        $this.removeClass('focus');\n      });\n      // eslint-disable-next-line\n      this.$filter.on('change', function () {\n        var filterWord = $(this).val();\n        if (filterWord === 'todo') {\n          filterWord = self.options.states;\n        }\n        self.applyFilter(filterWord);\n      });\n    },\n    applyFilter: function applyFilter(filter) {\n      var self = this;\n      this.table.bootstrapTable('filterBy', __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_defineProperty___default()({}, self.options.stateField, filter));\n      self.$emit('filter.bs');\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 267:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(153);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n/***/ }),\n\n/***/ 268:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"display\",attrs:{\"id\":_vm.ids,\"cellspacing\":\"0\",\"width\":\"100%\"}},[_c('thead'),_c('tbody')])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 508:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_RouterModal_vue__ = __webpack_require__(509);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sharedComponents_DataTable_vue__ = __webpack_require__(263);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sharedComponents_utils__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__sharedComponents_utils___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__sharedComponents_utils__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sharedComponents_Progress__ = __webpack_require__(512);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__sharedComponents_Progress___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__sharedComponents_Progress__);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\nvar heavyLoad = new __WEBPACK_IMPORTED_MODULE_4__sharedComponents_Progress___default.a('heavy');\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  components: {\n    DataTable: __WEBPACK_IMPORTED_MODULE_2__sharedComponents_DataTable_vue__[\"a\" /* default */],\n    RouterModal: __WEBPACK_IMPORTED_MODULE_1__components_RouterModal_vue__[\"a\" /* default */]\n  },\n  mounted: function mounted() {\n    this.getSectionList();\n    __WEBPACK_IMPORTED_MODULE_3__sharedComponents_utils___default.a.spyLeftNavigation();\n  },\n  data: function data() {\n    return {\n      title: 'Secciones',\n      parentId: '#extra-table-container',\n      toolbar: '#extra-toolbar',\n      content: '',\n      selectedId: '',\n      modalMode: 'add',\n      options: [{ key: 'todo', text: 'Todos' }, { key: 'ocupado', text: 'Ocupadas' }, { key: 'disponible', text: 'Disponibles' }, { key: 'sectorial', text: 'Sectoriales' }],\n      sections: [],\n      sector: {\n        nombre: '',\n        codigo_area: ''\n      },\n      tableOptions: {\n        pageSize: 200,\n        pageList: [50, 100, 200, 500, 1000],\n        states: ['ocupado', 'disponible', 'sectorial'],\n        stateField: 'estado'\n      },\n      search: {\n        text: '',\n        state: 'activo'\n      },\n      totales: {\n        pagado: 0,\n        pendiente: 0,\n        total_vendido: 0\n      },\n      tableId: '#extra-table-full'\n    };\n  },\n\n  methods: {\n    save: function save() {\n      var _this = this;\n\n      var empty = __WEBPACK_IMPORTED_MODULE_3__sharedComponents_utils___default.a.isEmpty(this.sector);\n      if (!empty) {\n        heavyLoad.play();\n        this.$http.post('section/' + this.modalMode, this.getDataForm(this.sector)).then(function (res) {\n          _this.showMessage(res.data.message);\n          if (res.data.message.type === 'success') {\n            _this.sectorEmpty();\n            $('#router-modal').modal('hide');\n          }\n          heavyLoad.stop();\n          _this.getIps();\n          window.appBus.$emit('transaction');\n          if (_this.modalMode === 'edit') {\n            $('#router-modal').modal('hide');\n          }\n        }).catch(function (err) {\n          heavyLoad.stop();\n          _this.$toasted.error(err);\n        });\n      } else {\n        this.$toasted.error('Revise y LLene todos los campos por favor');\n      }\n    },\n    getIps: function getIps() {\n      var _this2 = this;\n\n      if (this.selectedId) {\n        this.$http.post('section/get_ips', this.getDataForm({ id_section: this.selectedId })).then(function (res) {\n          _this2.content = res.data.ips;\n        }).catch(function (err) {\n          _this2.$toasted.error(err);\n        });\n      }\n    },\n    updateIpState: function updateIpState(IP) {\n      var form = 'data=' + __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(IP) + '&extra_info=' + __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({\n        module: 'ip'\n      });\n      this.send('axiosupdate', form).then(function (res) {\n        displayMessage(res.data.mensaje);\n      });\n    },\n    sectorEmpty: function sectorEmpty() {\n      this.sectorEmpty = {\n        nombre: '',\n        codigo_area: ''\n      };\n    },\n    getSectionList: function getSectionList() {\n      var _this3 = this;\n\n      heavyLoad.play();\n      this.$http.get('section/get_sections/list').then(function (res) {\n        _this3.sections = res.data.sections;\n        _this3.selectedId = _this3.sections[0].id;\n        _this3.getIps();\n        heavyLoad.stop();\n      });\n    },\n    updateState: function updateState(code, state) {\n      var _this4 = this;\n\n      this.$http.post('section/update_ip', this.getDataForm({ code: code, state: state })).then(function (res) {\n        _this4.getIps();\n        _this4.showMessage(res.data.message);\n      }).catch(function (err) {\n        _this4.$toasted.error(err);\n      });\n    },\n    stateChanges: function stateChanges(name, args) {\n      var self = this;\n      var options = this.options;\n\n      var theOptions = options.map(function (option) {\n        return option.key !== 'todo' ? '<option value=\\'' + option.key + '\\'> ' + option.key + '</value>' : '';\n      });\n      var selectState = '<select>' + theOptions.join('') + '</select>';\n      var select = $(selectState);\n      var $this = args[3];\n      var row = args[2];\n      var state = args[1];\n\n      $this.html(select);\n      select.focus();\n      select.val(state);\n      select.on('change blur', function () {\n        state = select.val();\n        $this.html(state);\n        $this.removeClass('text-danger text-success text-primary');\n        self.updateState(row.codigo, state);\n      });\n      select.on('click', function (event) {\n        event.stopImmediatePropagation();\n      });\n    }\n  },\n  computed: {\n    reportUrl: function reportUrl() {\n      return baseURL + 'process/getreport/secciones/' + this.selectedId;\n    },\n    cols: function cols() {\n      return [{\n        field: 'num',\n        title: 'No.',\n        valign: 'middle',\n        align: 'center',\n        sortable: 'true'\n      }, {\n        checkbox: true,\n        field: 'checkbox',\n        title: '',\n        valign: 'middle',\n        align: 'center',\n        class: 'hide'\n      }, {\n        field: 'sector',\n        title: 'Sector',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'codigo',\n        title: 'Codigo',\n        valign: 'middle',\n        align: 'center',\n        class: 'hide'\n      }, {\n        field: 'ip',\n        title: 'Direccion IP',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'estado',\n        title: 'Estado',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'acciones',\n        title: 'Acciones',\n        valign: 'middle',\n        align: 'center'\n      }];\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 509:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterModal_vue__ = __webpack_require__(510);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_23e52ed5_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterModal_vue__ = __webpack_require__(511);\nvar normalizeComponent = __webpack_require__(4)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RouterModal_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_23e52ed5_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_RouterModal_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 510:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    sector: {\n      type: Object\n    },\n    modalMode: {\n      type: String\n    }\n  },\n\n  mounted: function mounted() {\n    var _this = this;\n\n    $('#router-modal').on('hide.bs.modal', function () {\n      _this.$emit('dimiss');\n    });\n  },\n\n\n  methods: {\n    save: function save() {\n      this.$emit('save');\n    }\n  },\n\n  computed: {\n    modalTitle: function modalTitle() {\n      var title = void 0;\n\n      switch (this.modalMode) {\n        case 'add':\n          title = 'Nuevo Sector';\n          break;\n        case 'edit':\n          title = 'Editar Sector';\n          break;\n        default:\n          // nothing\n          break;\n      }\n      return title;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 511:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade\",attrs:{\"id\":\"router-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_vm._m(0,false,false),_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.modalTitle))])]),_c('div',{staticClass:\"modal-body\"},[_c('form',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"#sector-name\"}},[_vm._v(\"Nombre Sector\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sector.nombre),expression:\"sector.nombre\"}],staticClass:\"form-control\",attrs:{\"id\":\"secto-name\",\"type\":\"text\",\"placeholder\":\"nombre sector\"},domProps:{\"value\":(_vm.sector.nombre)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sector, \"nombre\", $event.target.value)}}})]),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"#sector-code\"}},[_vm._v(\"Codigo\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sector.codigo_area),expression:\"sector.codigo_area\"}],staticClass:\"form-control\",attrs:{\"id\":\"sector-code\",\"type\":\"number\",\"placeholder\":\"41\"},domProps:{\"value\":(_vm.sector.codigo_area)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sector, \"codigo_area\", $event.target.value)}}})])]),_c('div',{staticClass:\"col-md-12\"})])])]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"Cancelar\")]),_c('button',{staticClass:\"btn save\",attrs:{\"type\":\"button\",\"id\":\"btn-sector__save\"},on:{\"click\":_vm.save}},[_vm._v(\"Guardar\")])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 512:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = __webpack_require__(134);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(135);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Progress = function () {\n  function Progress(type) {\n    var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Cargando ...';\n    (0, _classCallCheck3.default)(this, Progress);\n\n    this.type = type;\n    this.content = '\\n    <div class=\"heavy-loader active\">\\n      <div class=\"circle-load\"></div>\\n      <div class=\"message\"> ' + text + '</div>\\n    </div>';\n    this.$heavy = null;\n    this.$body = $('body');\n    this.$line = $('.loader');\n  }\n\n  (0, _createClass3.default)(Progress, [{\n    key: 'play',\n    value: function play() {\n      this.stop();\n      if (this.type === 'heavy') {\n        $('body').append(this.content);\n        this.$heavy = $('.heavy-loader');\n        $('body').css({ overflow: 'hidden' });\n      } else {\n        $('.loader').css({\n          display: 'block'\n        });\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      if (this.type === 'heavy' && this.$heavy) {\n        this.$heavy.remove();\n        $('body').css({ overflow: 'auto' });\n      } else {\n        $('.loader').css({ display: 'none' });\n      }\n    }\n  }]);\n  return Progress;\n}();\n\nexports.default = Progress;\n\n/***/ }),\n\n/***/ 513:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"left-navigation col-md-2\"},[_c('div',{staticClass:\"aside-nav-container\"},[_c('div',{staticClass:\"left-navigation__header\"},[_c('h3',{staticClass:\"left-navigation__header-text\"},[_vm._v(_vm._s(_vm.title))])]),_vm._m(0,false,false)])]),_c('div',{staticClass:\"main-content col-md-10\"},[_c('div',{attrs:{\"id\":\"extra-table-container\"}},[_c('div',{staticClass:\"searcher-container main-toolbar\",attrs:{\"id\":\"extra-toolbar\"}},[_c('div',{staticClass:\"input-group search\"},[_vm._m(1,false,false),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search.text),expression:\"search.text\"}],staticClass:\"form-control searcher\",attrs:{\"type\":\"text\",\"placeholder\":\"Buscar\"},domProps:{\"value\":(_vm.search.text)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.search, \"text\", $event.target.value)}}})]),_c('div',{staticClass:\"pull-right\"},[_c('a',{staticClass:\"btn icon print-table\",attrs:{\"target\":\"_blank\",\"href\":_vm.reportUrl}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"print\")])])]),_c('div',{staticClass:\"pull-right\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedId),expression:\"selectedId\"}],staticClass:\"btn btn-primary\",attrs:{\"id\":\"select-sector\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedId=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.getIps]}},_vm._l((_vm.sections),function(section){return _c('option',{domProps:{\"value\":section.id}},[_vm._v(_vm._s(section.text))])}))]),_c('div',{staticClass:\"pull-right\"},[_c('select',{staticClass:\"form-group filter btn btn-primary\",attrs:{\"id\":\"client-filter\"}},_vm._l((_vm.options),function(option){return _c('option',{domProps:{\"value\":option.key}},[_vm._v(_vm._s(option.text))])}))])]),_c('DataTable',{attrs:{\"ids\":\"extra-table\",\"parentId\":_vm.parentId,\"data\":_vm.content,\"cols\":_vm.cols,\"toolbar\":_vm.toolbar,\"options\":_vm.tableOptions},on:{\"cell-clicked\":_vm.stateChanges}}),_c('RouterModal',{attrs:{\"sector\":_vm.sector,\"modal-mode\":_vm.modalMode},on:{\"save\":_vm.save}})],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"aside-nav\"},[_c('li',{staticClass:\"aside-buttons\"},[_c('a',{attrs:{\"href\":\"\",\"id\":\"make-payment\",\"data-toggle\":\"modal\",\"data-target\":\"#router-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"add\")]),_vm._v(\"Agregar Seccion\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-addon\"},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"search\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/secciones.js","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./RouterSection.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1988f582\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./RouterSection.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/src/modules/secciones/RouterSection.vue\n// module id = 245\n// module chunks = 9","/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.11.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\n(function ($) {\n    'use strict';\n\n    // TOOLS DEFINITION\n    // ======================\n\n    var cachedWidth = null;\n\n    // it only does '%s', and return '' when arguments are undefined\n    var sprintf = function (str) {\n        var args = arguments,\n            flag = true,\n            i = 1;\n\n        str = str.replace(/%s/g, function () {\n            var arg = args[i++];\n\n            if (typeof arg === 'undefined') {\n                flag = false;\n                return '';\n            }\n            return arg;\n        });\n        return flag ? str : '';\n    };\n\n    var getPropertyFromOther = function (list, from, to, value) {\n        var result = '';\n        $.each(list, function (i, item) {\n            if (item[from] === value) {\n                result = item[to];\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n\n    var getFieldIndex = function (columns, field) {\n        var index = -1;\n\n        $.each(columns, function (i, column) {\n            if (column.field === field) {\n                index = i;\n                return false;\n            }\n            return true;\n        });\n        return index;\n    };\n\n    // http://jsfiddle.net/wenyi/47nz7ez9/3/\n    var setFieldIndex = function (columns) {\n        var i, j, k,\n            totalCol = 0,\n            flag = [];\n\n        for (i = 0; i < columns[0].length; i++) {\n            totalCol += columns[0][i].colspan || 1;\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            flag[i] = [];\n            for (j = 0; j < totalCol; j++) {\n                flag[i][j] = false;\n            }\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            for (j = 0; j < columns[i].length; j++) {\n                var r = columns[i][j],\n                    rowspan = r.rowspan || 1,\n                    colspan = r.colspan || 1,\n                    index = $.inArray(false, flag[i]);\n\n                if (colspan === 1) {\n                    r.fieldIndex = index;\n                    // when field is undefined, use index instead\n                    if (typeof r.field === 'undefined') {\n                        r.field = index;\n                    }\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    flag[i + k][index] = true;\n                }\n                for (k = 0; k < colspan; k++) {\n                    flag[i][index + k] = true;\n                }\n            }\n        }\n    };\n\n    var getScrollBarWidth = function () {\n        if (cachedWidth === null) {\n            var inner = $('<p/>').addClass('fixed-table-scroll-inner'),\n                outer = $('<div/>').addClass('fixed-table-scroll-outer'),\n                w1, w2;\n\n            outer.append(inner);\n            $('body').append(outer);\n\n            w1 = inner[0].offsetWidth;\n            outer.css('overflow', 'scroll');\n            w2 = inner[0].offsetWidth;\n\n            if (w1 === w2) {\n                w2 = outer[0].clientWidth;\n            }\n\n            outer.remove();\n            cachedWidth = w1 - w2;\n        }\n        return cachedWidth;\n    };\n\n    var calculateObjectValue = function (self, name, args, defaultValue) {\n        var func = name;\n\n        if (typeof name === 'string') {\n            // support obj.func1.func2\n            var names = name.split('.');\n\n            if (names.length > 1) {\n                func = window;\n                $.each(names, function (i, f) {\n                    func = func[f];\n                });\n            } else {\n                func = window[name];\n            }\n        }\n        if (typeof func === 'object') {\n            return func;\n        }\n        if (typeof func === 'function') {\n            return func.apply(self, args || []);\n        }\n        if (!func && typeof name === 'string' && sprintf.apply(this, [name].concat(args))) {\n            return sprintf.apply(this, [name].concat(args));\n        }\n        return defaultValue;\n    };\n\n    var compareObjects = function (objectA, objectB, compareLength) {\n        // Create arrays of property names\n        var objectAProperties = Object.getOwnPropertyNames(objectA),\n            objectBProperties = Object.getOwnPropertyNames(objectB),\n            propName = '';\n\n        if (compareLength) {\n            // If number of properties is different, objects are not equivalent\n            if (objectAProperties.length !== objectBProperties.length) {\n                return false;\n            }\n        }\n\n        for (var i = 0; i < objectAProperties.length; i++) {\n            propName = objectAProperties[i];\n\n            // If the property is not in the object B properties, continue with the next property\n            if ($.inArray(propName, objectBProperties) > -1) {\n                // If values of same property are not equal, objects are not equivalent\n                if (objectA[propName] !== objectB[propName]) {\n                    return false;\n                }\n            }\n        }\n\n        // If we made it this far, objects are considered equivalent\n        return true;\n    };\n\n    var escapeHTML = function (text) {\n        if (typeof text === 'string') {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;')\n                .replace(/`/g, '&#x60;');\n        }\n        return text;\n    };\n\n    var getRealDataAttr = function (dataAttr) {\n        for (var attr in dataAttr) {\n            var auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase();\n            if (auxAttr !== attr) {\n                dataAttr[auxAttr] = dataAttr[attr];\n                delete dataAttr[attr];\n            }\n        }\n\n        return dataAttr;\n    };\n\n    var getItemField = function (item, field, escape) {\n        var value = item;\n\n        if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n            return escape ? escapeHTML(item[field]) : item[field];\n        }\n        var props = field.split('.');\n        for (var p in props) {\n            if (props.hasOwnProperty(p)) {\n                value = value && value[props[p]];\n            }\n        }\n        return escape ? escapeHTML(value) : value;\n    };\n\n    var isIEBrowser = function () {\n        return !!(navigator.userAgent.indexOf(\"MSIE \") > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./));\n    };\n\n    var objectKeys = function () {\n        // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n                    dontEnums = [\n                        'toString',\n                        'toLocaleString',\n                        'valueOf',\n                        'hasOwnProperty',\n                        'isPrototypeOf',\n                        'propertyIsEnumerable',\n                        'constructor'\n                    ],\n                    dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    var result = [], prop, i;\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n                    return result;\n                };\n            }());\n        }\n    };\n\n    // BOOTSTRAP TABLE CLASS DEFINITION\n    // ======================\n\n    var BootstrapTable = function (el, options) {\n        this.options = options;\n        this.$el = $(el);\n        this.$el_ = this.$el.clone();\n        this.timeoutId_ = 0;\n        this.timeoutFooter_ = 0;\n\n        this.init();\n    };\n\n    BootstrapTable.DEFAULTS = {\n        classes: 'table table-hover',\n        sortClass: undefined,\n        locale: undefined,\n        height: undefined,\n        undefinedText: '-',\n        sortName: undefined,\n        sortOrder: 'asc',\n        sortStable: false,\n        striped: false,\n        columns: [[]],\n        data: [],\n        totalField: 'total',\n        dataField: 'rows',\n        method: 'get',\n        url: undefined,\n        ajax: undefined,\n        cache: true,\n        contentType: 'application/json',\n        dataType: 'json',\n        ajaxOptions: {},\n        queryParams: function (params) {\n            return params;\n        },\n        queryParamsType: 'limit', // undefined\n        responseHandler: function (res) {\n            return res;\n        },\n        pagination: false,\n        onlyInfoPagination: false,\n        paginationLoop: true,\n        sidePagination: 'client', // client or server\n        totalRows: 0, // server side need to set\n        pageNumber: 1,\n        pageSize: 10,\n        pageList: [10, 25, 50, 100],\n        paginationHAlign: 'right', //right, left\n        paginationVAlign: 'bottom', //bottom, top, both\n        paginationDetailHAlign: 'left', //right, left\n        paginationPreText: '&lsaquo;',\n        paginationNextText: '&rsaquo;',\n        search: false,\n        searchOnEnterKey: false,\n        strictSearch: false,\n        searchAlign: 'right',\n        selectItemName: 'btSelectItem',\n        showHeader: true,\n        showFooter: false,\n        showColumns: false,\n        showPaginationSwitch: false,\n        showRefresh: false,\n        showToggle: false,\n        buttonsAlign: 'right',\n        smartDisplay: true,\n        escape: false,\n        minimumCountColumns: 1,\n        idField: undefined,\n        uniqueId: undefined,\n        cardView: false,\n        detailView: false,\n        detailFormatter: function (index, row) {\n            return '';\n        },\n        trimOnSearch: true,\n        clickToSelect: false,\n        singleSelect: false,\n        toolbar: undefined,\n        toolbarAlign: 'left',\n        checkboxHeader: true,\n        sortable: true,\n        silentSort: true,\n        maintainSelected: false,\n        searchTimeOut: 500,\n        searchText: '',\n        iconSize: undefined,\n        buttonsClass: 'default',\n        iconsPrefix: 'glyphicon', // glyphicon of fa (font awesome)\n        icons: {\n            paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n            paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n            refresh: 'glyphicon-refresh icon-refresh',\n            toggle: 'glyphicon-list-alt icon-list-alt',\n            columns: 'glyphicon-th icon-th',\n            detailOpen: 'glyphicon-plus icon-plus',\n            detailClose: 'glyphicon-minus icon-minus'\n        },\n\n        customSearch: $.noop,\n\n        customSort: $.noop,\n\n        rowStyle: function (row, index) {\n            return {};\n        },\n\n        rowAttributes: function (row, index) {\n            return {};\n        },\n\n        footerStyle: function (row, index) {\n            return {};\n        },\n\n        onAll: function (name, args) {\n            return false;\n        },\n        onClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onDblClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onClickRow: function (item, $element) {\n            return false;\n        },\n        onDblClickRow: function (item, $element) {\n            return false;\n        },\n        onSort: function (name, order) {\n            return false;\n        },\n        onCheck: function (row) {\n            return false;\n        },\n        onUncheck: function (row) {\n            return false;\n        },\n        onCheckAll: function (rows) {\n            return false;\n        },\n        onUncheckAll: function (rows) {\n            return false;\n        },\n        onCheckSome: function (rows) {\n            return false;\n        },\n        onUncheckSome: function (rows) {\n            return false;\n        },\n        onLoadSuccess: function (data) {\n            return false;\n        },\n        onLoadError: function (status) {\n            return false;\n        },\n        onColumnSwitch: function (field, checked) {\n            return false;\n        },\n        onPageChange: function (number, size) {\n            return false;\n        },\n        onSearch: function (text) {\n            return false;\n        },\n        onToggle: function (cardView) {\n            return false;\n        },\n        onPreBody: function (data) {\n            return false;\n        },\n        onPostBody: function () {\n            return false;\n        },\n        onPostHeader: function () {\n            return false;\n        },\n        onExpandRow: function (index, row, $detail) {\n            return false;\n        },\n        onCollapseRow: function (index, row) {\n            return false;\n        },\n        onRefreshOptions: function (options) {\n            return false;\n        },\n        onRefresh: function (params) {\n          return false;\n        },\n        onResetView: function () {\n            return false;\n        }\n    };\n\n    BootstrapTable.LOCALES = {};\n\n    BootstrapTable.LOCALES['en-US'] = BootstrapTable.LOCALES.en = {\n        formatLoadingMessage: function () {\n            return 'Loading, please wait...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return sprintf('%s rows per page', pageNumber);\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return sprintf('Showing %s to %s of %s rows', pageFrom, pageTo, totalRows);\n        },\n        formatDetailPagination: function (totalRows) {\n            return sprintf('Showing %s rows', totalRows);\n        },\n        formatSearch: function () {\n            return 'Search';\n        },\n        formatNoMatches: function () {\n            return 'No matching records found';\n        },\n        formatPaginationSwitch: function () {\n            return 'Hide/Show pagination';\n        },\n        formatRefresh: function () {\n            return 'Refresh';\n        },\n        formatToggle: function () {\n            return 'Toggle';\n        },\n        formatColumns: function () {\n            return 'Columns';\n        },\n        formatAllRows: function () {\n            return 'All';\n        }\n    };\n\n    $.extend(BootstrapTable.DEFAULTS, BootstrapTable.LOCALES['en-US']);\n\n    BootstrapTable.COLUMN_DEFAULTS = {\n        radio: false,\n        checkbox: false,\n        checkboxEnabled: true,\n        field: undefined,\n        title: undefined,\n        titleTooltip: undefined,\n        'class': undefined,\n        align: undefined, // left, right, center\n        halign: undefined, // left, right, center\n        falign: undefined, // left, right, center\n        valign: undefined, // top, middle, bottom\n        width: undefined,\n        sortable: false,\n        order: 'asc', // asc, desc\n        visible: true,\n        switchable: true,\n        clickToSelect: true,\n        formatter: undefined,\n        footerFormatter: undefined,\n        events: undefined,\n        sorter: undefined,\n        sortName: undefined,\n        cellStyle: undefined,\n        searchable: true,\n        searchFormatter: true,\n        cardVisible: true,\n        escape : false\n    };\n\n    BootstrapTable.EVENTS = {\n        'all.bs.table': 'onAll',\n        'click-cell.bs.table': 'onClickCell',\n        'dbl-click-cell.bs.table': 'onDblClickCell',\n        'click-row.bs.table': 'onClickRow',\n        'dbl-click-row.bs.table': 'onDblClickRow',\n        'sort.bs.table': 'onSort',\n        'check.bs.table': 'onCheck',\n        'uncheck.bs.table': 'onUncheck',\n        'check-all.bs.table': 'onCheckAll',\n        'uncheck-all.bs.table': 'onUncheckAll',\n        'check-some.bs.table': 'onCheckSome',\n        'uncheck-some.bs.table': 'onUncheckSome',\n        'load-success.bs.table': 'onLoadSuccess',\n        'load-error.bs.table': 'onLoadError',\n        'column-switch.bs.table': 'onColumnSwitch',\n        'page-change.bs.table': 'onPageChange',\n        'search.bs.table': 'onSearch',\n        'toggle.bs.table': 'onToggle',\n        'pre-body.bs.table': 'onPreBody',\n        'post-body.bs.table': 'onPostBody',\n        'post-header.bs.table': 'onPostHeader',\n        'expand-row.bs.table': 'onExpandRow',\n        'collapse-row.bs.table': 'onCollapseRow',\n        'refresh-options.bs.table': 'onRefreshOptions',\n        'reset-view.bs.table': 'onResetView',\n        'refresh.bs.table': 'onRefresh'\n    };\n\n    BootstrapTable.prototype.init = function () {\n        this.initLocale();\n        this.initContainer();\n        this.initTable();\n        this.initHeader();\n        this.initData();\n        this.initHiddenRows();\n        this.initFooter();\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n        this.initSearchText();\n        this.initServer();\n    };\n\n    BootstrapTable.prototype.initLocale = function () {\n        if (this.options.locale) {\n            var parts = this.options.locale.split(/-|_/);\n            parts[0].toLowerCase();\n            if (parts[1]) parts[1].toUpperCase();\n            if ($.fn.bootstrapTable.locales[this.options.locale]) {\n                // locale as requested\n                $.extend(this.options, $.fn.bootstrapTable.locales[this.options.locale]);\n            } else if ($.fn.bootstrapTable.locales[parts.join('-')]) {\n                // locale with sep set to - (in case original was specified with _)\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts.join('-')]);\n            } else if ($.fn.bootstrapTable.locales[parts[0]]) {\n                // short locale language code (i.e. 'en')\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts[0]]);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.initContainer = function () {\n        this.$container = $([\n            '<div class=\"bootstrap-table\">',\n            '<div class=\"fixed-table-toolbar\"></div>',\n            this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\" style=\"clear: both;\"></div>' :\n                '',\n            '<div class=\"fixed-table-container\">',\n            '<div class=\"fixed-table-header\"><table></table></div>',\n            '<div class=\"fixed-table-body\">',\n            '<div class=\"fixed-table-loading\">',\n            this.options.formatLoadingMessage(),\n            '</div>',\n            '</div>',\n            '<div class=\"fixed-table-footer\"><table><tr></tr></table></div>',\n            this.options.paginationVAlign === 'bottom' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\"></div>' :\n                '',\n            '</div>',\n            '</div>'\n        ].join(''));\n\n        this.$container.insertAfter(this.$el);\n        this.$tableContainer = this.$container.find('.fixed-table-container');\n        this.$tableHeader = this.$container.find('.fixed-table-header');\n        this.$tableBody = this.$container.find('.fixed-table-body');\n        this.$tableLoading = this.$container.find('.fixed-table-loading');\n        this.$tableFooter = this.$container.find('.fixed-table-footer');\n        this.$toolbar = this.$container.find('.fixed-table-toolbar');\n        this.$pagination = this.$container.find('.fixed-table-pagination');\n\n        this.$tableBody.append(this.$el);\n        this.$container.after('<div class=\"clearfix\"></div>');\n\n        this.$el.addClass(this.options.classes);\n        if (this.options.striped) {\n            this.$el.addClass('table-striped');\n        }\n        if ($.inArray('table-no-bordered', this.options.classes.split(' ')) !== -1) {\n            this.$tableContainer.addClass('table-no-bordered');\n        }\n    };\n\n    BootstrapTable.prototype.initTable = function () {\n        var that = this,\n            columns = [],\n            data = [];\n\n        this.$header = this.$el.find('>thead');\n        if (!this.$header.length) {\n            this.$header = $('<thead></thead>').appendTo(this.$el);\n        }\n        this.$header.find('tr').each(function () {\n            var column = [];\n\n            $(this).find('th').each(function () {\n                // Fix #2014 - getFieldIndex and elsewhere assume this is string, causes issues if not\n                if (typeof $(this).data('field') !== 'undefined') {\n                    $(this).data('field', $(this).data('field') + '');\n                }\n                column.push($.extend({}, {\n                    title: $(this).html(),\n                    'class': $(this).attr('class'),\n                    titleTooltip: $(this).attr('title'),\n                    rowspan: $(this).attr('rowspan') ? +$(this).attr('rowspan') : undefined,\n                    colspan: $(this).attr('colspan') ? +$(this).attr('colspan') : undefined\n                }, $(this).data()));\n            });\n            columns.push(column);\n        });\n        if (!$.isArray(this.options.columns[0])) {\n            this.options.columns = [this.options.columns];\n        }\n        this.options.columns = $.extend(true, [], columns, this.options.columns);\n        this.columns = [];\n\n        setFieldIndex(this.options.columns);\n        $.each(this.options.columns, function (i, columns) {\n            $.each(columns, function (j, column) {\n                column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, column);\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.columns[column.fieldIndex] = column;\n                }\n\n                that.options.columns[i][j] = column;\n            });\n        });\n\n        // if options.data is setting, do not process tbody data\n        if (this.options.data.length) {\n            return;\n        }\n\n        var m = [];\n        this.$el.find('>tbody>tr').each(function (y) {\n            var row = {};\n\n            // save tr's id, class and data-* attributes\n            row._id = $(this).attr('id');\n            row._class = $(this).attr('class');\n            row._data = getRealDataAttr($(this).data());\n\n            $(this).find('>td').each(function (x) {\n                var $this = $(this),\n                    cspan = +$this.attr('colspan') || 1,\n                    rspan = +$this.attr('rowspan') || 1,\n                    tx, ty;\n\n                for (; m[y] && m[y][x]; x++); //skip already occupied cells in current row\n\n                for (tx = x; tx < x + cspan; tx++) { //mark matrix elements occupied by current cell with true\n                    for (ty = y; ty < y + rspan; ty++) {\n                        if (!m[ty]) { //fill missing rows\n                            m[ty] = [];\n                        }\n                        m[ty][tx] = true;\n                    }\n                }\n\n                var field = that.columns[x].field;\n\n                row[field] = $(this).html();\n                // save td's id, class and data-* attributes\n                row['_' + field + '_id'] = $(this).attr('id');\n                row['_' + field + '_class'] = $(this).attr('class');\n                row['_' + field + '_rowspan'] = $(this).attr('rowspan');\n                row['_' + field + '_colspan'] = $(this).attr('colspan');\n                row['_' + field + '_title'] = $(this).attr('title');\n                row['_' + field + '_data'] = getRealDataAttr($(this).data());\n            });\n            data.push(row);\n        });\n        this.options.data = data;\n        if (data.length) this.fromHtml = true;\n    };\n\n    BootstrapTable.prototype.initHeader = function () {\n        var that = this,\n            visibleColumns = {},\n            html = [];\n\n        this.header = {\n            fields: [],\n            styles: [],\n            classes: [],\n            formatters: [],\n            events: [],\n            sorters: [],\n            sortNames: [],\n            cellStyles: [],\n            searchables: []\n        };\n\n        $.each(this.options.columns, function (i, columns) {\n            html.push('<tr>');\n\n            if (i === 0 && !that.options.cardView && that.options.detailView) {\n                html.push(sprintf('<th class=\"detail\" rowspan=\"%s\"><div class=\"fht-cell\"></div></th>',\n                    that.options.columns.length));\n            }\n\n            $.each(columns, function (j, column) {\n                var text = '',\n                    halign = '', // header align style\n                    align = '', // body align style\n                    style = '',\n                    class_ = sprintf(' class=\"%s\"', column['class']),\n                    order = that.options.sortOrder || column.order,\n                    unitWidth = 'px',\n                    width = column.width;\n\n                if (column.width !== undefined && (!that.options.cardView)) {\n                    if (typeof column.width === 'string') {\n                        if (column.width.indexOf('%') !== -1) {\n                            unitWidth = '%';\n                        }\n                    }\n                }\n                if (column.width && typeof column.width === 'string') {\n                    width = column.width.replace('%', '').replace('px', '');\n                }\n\n                halign = sprintf('text-align: %s; ', column.halign ? column.halign : column.align);\n                align = sprintf('text-align: %s; ', column.align);\n                style = sprintf('vertical-align: %s; ', column.valign);\n                style += sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n                    '36px' : (width ? width + unitWidth : undefined));\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.header.fields[column.fieldIndex] = column.field;\n                    that.header.styles[column.fieldIndex] = align + style;\n                    that.header.classes[column.fieldIndex] = class_;\n                    that.header.formatters[column.fieldIndex] = column.formatter;\n                    that.header.events[column.fieldIndex] = column.events;\n                    that.header.sorters[column.fieldIndex] = column.sorter;\n                    that.header.sortNames[column.fieldIndex] = column.sortName;\n                    that.header.cellStyles[column.fieldIndex] = column.cellStyle;\n                    that.header.searchables[column.fieldIndex] = column.searchable;\n\n                    if (!column.visible) {\n                        return;\n                    }\n\n                    if (that.options.cardView && (!column.cardVisible)) {\n                        return;\n                    }\n\n                    visibleColumns[column.field] = column;\n                }\n\n                html.push('<th' + sprintf(' title=\"%s\"', column.titleTooltip),\n                    column.checkbox || column.radio ?\n                        sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n                        class_,\n                    sprintf(' style=\"%s\"', halign + style),\n                    sprintf(' rowspan=\"%s\"', column.rowspan),\n                    sprintf(' colspan=\"%s\"', column.colspan),\n                    sprintf(' data-field=\"%s\"', column.field),\n                    '>');\n\n                html.push(sprintf('<div class=\"th-inner %s\">', that.options.sortable && column.sortable ?\n                    'sortable both' : ''));\n\n                text = that.options.escape ? escapeHTML(column.title) : column.title;\n\n                if (column.checkbox) {\n                    if (!that.options.singleSelect && that.options.checkboxHeader) {\n                        text = '<input name=\"btSelectAll\" type=\"checkbox\" />';\n                    }\n                    that.header.stateField = column.field;\n                }\n                if (column.radio) {\n                    text = '';\n                    that.header.stateField = column.field;\n                    that.options.singleSelect = true;\n                }\n\n                html.push(text);\n                html.push('</div>');\n                html.push('<div class=\"fht-cell\"></div>');\n                html.push('</div>');\n                html.push('</th>');\n            });\n            html.push('</tr>');\n        });\n\n        this.$header.html(html.join(''));\n        this.$header.find('th[data-field]').each(function (i) {\n            $(this).data(visibleColumns[$(this).data('field')]);\n        });\n        this.$container.off('click', '.th-inner').on('click', '.th-inner', function (event) {\n            var target = $(this);\n\n            if (that.options.detailView) {\n                if (target.closest('.bootstrap-table')[0] !== that.$container[0])\n                    return false;\n            }\n\n            if (that.options.sortable && target.parent().data().sortable) {\n                that.onSort(event);\n            }\n        });\n\n        this.$header.children().children().off('keypress').on('keypress', function (event) {\n            if (that.options.sortable && $(this).data().sortable) {\n                var code = event.keyCode || event.which;\n                if (code == 13) { //Enter keycode\n                    that.onSort(event);\n                }\n            }\n        });\n\n        $(window).off('resize.bootstrap-table');\n        if (!this.options.showHeader || this.options.cardView) {\n            this.$header.hide();\n            this.$tableHeader.hide();\n            this.$tableLoading.css('top', 0);\n        } else {\n            this.$header.show();\n            this.$tableHeader.show();\n            this.$tableLoading.css('top', this.$header.outerHeight() + 1);\n            // Assign the correct sortable arrow\n            this.getCaret();\n            $(window).on('resize.bootstrap-table', $.proxy(this.resetWidth, this));\n        }\n\n        this.$selectAll = this.$header.find('[name=\"btSelectAll\"]');\n        this.$selectAll.off('click').on('click', function () {\n                var checked = $(this).prop('checked');\n                that[checked ? 'checkAll' : 'uncheckAll']();\n                that.updateSelected();\n            });\n    };\n\n    BootstrapTable.prototype.initFooter = function () {\n        if (!this.options.showFooter || this.options.cardView) {\n            this.$tableFooter.hide();\n        } else {\n            this.$tableFooter.show();\n        }\n    };\n\n    /**\n     * @param data\n     * @param type: append / prepend\n     */\n    BootstrapTable.prototype.initData = function (data, type) {\n        if (type === 'append') {\n            this.data = this.data.concat(data);\n        } else if (type === 'prepend') {\n            this.data = [].concat(data).concat(this.data);\n        } else {\n            this.data = data || this.options.data;\n        }\n\n        // Fix #839 Records deleted when adding new row on filtered table\n        if (type === 'append') {\n            this.options.data = this.options.data.concat(data);\n        } else if (type === 'prepend') {\n            this.options.data = [].concat(data).concat(this.options.data);\n        } else {\n            this.options.data = this.data;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            return;\n        }\n        this.initSort();\n    };\n\n    BootstrapTable.prototype.initSort = function () {\n        var that = this,\n            name = this.options.sortName,\n            order = this.options.sortOrder === 'desc' ? -1 : 1,\n            index = $.inArray(this.options.sortName, this.header.fields),\n            timeoutId = 0;\n\n        if (this.options.customSort !== $.noop) {\n            this.options.customSort.apply(this, [this.options.sortName, this.options.sortOrder]);\n            return;\n        }\n\n        if (index !== -1) {\n            if (this.options.sortStable) {\n                $.each(this.data, function (i, row) {\n                    if (!row.hasOwnProperty('_position')) row._position = i;\n                });\n            }\n\n            this.data.sort(function (a, b) {\n                if (that.header.sortNames[index]) {\n                    name = that.header.sortNames[index];\n                }\n                var aa = getItemField(a, name, that.options.escape),\n                    bb = getItemField(b, name, that.options.escape),\n                    value = calculateObjectValue(that.header, that.header.sorters[index], [aa, bb]);\n\n                if (value !== undefined) {\n                    return order * value;\n                }\n\n                // Fix #161: undefined or null string sort bug.\n                if (aa === undefined || aa === null) {\n                    aa = '';\n                }\n                if (bb === undefined || bb === null) {\n                    bb = '';\n                }\n\n                if (that.options.sortStable && aa === bb) {\n                    aa = a._position;\n                    bb = b._position;\n                }\n\n                // IF both values are numeric, do a numeric comparison\n                if ($.isNumeric(aa) && $.isNumeric(bb)) {\n                    // Convert numerical values form string to float.\n                    aa = parseFloat(aa);\n                    bb = parseFloat(bb);\n                    if (aa < bb) {\n                        return order * -1;\n                    }\n                    return order;\n                }\n\n                if (aa === bb) {\n                    return 0;\n                }\n\n                // If value is not a string, convert to string\n                if (typeof aa !== 'string') {\n                    aa = aa.toString();\n                }\n\n                if (aa.localeCompare(bb) === -1) {\n                    return order * -1;\n                }\n\n                return order;\n            });\n\n            if (this.options.sortClass !== undefined) {\n                clearTimeout(timeoutId);\n                timeoutId = setTimeout(function () {\n                    that.$el.removeClass(that.options.sortClass);\n                    var index = that.$header.find(sprintf('[data-field=\"%s\"]',\n                        that.options.sortName).index() + 1);\n                    that.$el.find(sprintf('tr td:nth-child(%s)', index))\n                        .addClass(that.options.sortClass);\n                }, 250);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSort = function (event) {\n        var $this = event.type === \"keypress\" ? $(event.currentTarget) : $(event.currentTarget).parent(),\n            $this_ = this.$header.find('th').eq($this.index());\n\n        this.$header.add(this.$header_).find('span.order').remove();\n\n        if (this.options.sortName === $this.data('field')) {\n            this.options.sortOrder = this.options.sortOrder === 'asc' ? 'desc' : 'asc';\n        } else {\n            this.options.sortName = $this.data('field');\n            this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc';\n        }\n        this.trigger('sort', this.options.sortName, this.options.sortOrder);\n\n        $this.add($this_).data('order', this.options.sortOrder);\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n\n        if (this.options.sidePagination === 'server') {\n            this.initServer(this.options.silentSort);\n            return;\n        }\n\n        this.initSort();\n        this.initBody();\n    };\n\n    BootstrapTable.prototype.initToolbar = function () {\n        var that = this,\n            html = [],\n            timeoutId = 0,\n            $keepOpen,\n            $search,\n            switchableCount = 0;\n\n        if (this.$toolbar.find('.bs-bars').children().length) {\n            $('body').append($(this.options.toolbar));\n        }\n        this.$toolbar.html('');\n\n        if (typeof this.options.toolbar === 'string' || typeof this.options.toolbar === 'object') {\n            $(sprintf('<div class=\"bs-bars pull-%s\"></div>', this.options.toolbarAlign))\n                .appendTo(this.$toolbar)\n                .append($(this.options.toolbar));\n        }\n\n        // showColumns, showToggle, showRefresh\n        html = [sprintf('<div class=\"columns columns-%s btn-group pull-%s\">',\n            this.options.buttonsAlign, this.options.buttonsAlign)];\n\n        if (typeof this.options.icons === 'string') {\n            this.options.icons = calculateObjectValue(null, this.options.icons);\n        }\n\n        if (this.options.showPaginationSwitch) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"paginationSwitch\" aria-label=\"pagination Switch\" title=\"%s\">',\n                    this.options.formatPaginationSwitch()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.paginationSwitchDown),\n                '</button>');\n        }\n\n        if (this.options.showRefresh) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"refresh\" aria-label=\"refresh\" title=\"%s\">',\n                    this.options.formatRefresh()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.refresh),\n                '</button>');\n        }\n\n        if (this.options.showToggle) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"toggle\" aria-label=\"toggle\" title=\"%s\">',\n                    this.options.formatToggle()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.toggle),\n                '</button>');\n        }\n\n        if (this.options.showColumns) {\n            html.push(sprintf('<div class=\"keep-open btn-group\" title=\"%s\">',\n                    this.options.formatColumns()),\n                '<button type=\"button\" aria-label=\"columns\" class=\"btn' +\n                sprintf(' btn-%s', this.options.buttonsClass) +\n                sprintf(' btn-%s', this.options.iconSize) +\n                ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.columns),\n                ' <span class=\"caret\"></span>',\n                '</button>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">');\n\n            $.each(this.columns, function (i, column) {\n                if (column.radio || column.checkbox) {\n                    return;\n                }\n\n                if (that.options.cardView && !column.cardVisible) {\n                    return;\n                }\n\n                var checked = column.visible ? ' checked=\"checked\"' : '';\n\n                if (column.switchable) {\n                    html.push(sprintf('<li role=\"menuitem\">' +\n                        '<label><input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s> %s</label>' +\n                        '</li>', column.field, i, checked, column.title));\n                    switchableCount++;\n                }\n            });\n            html.push('</ul>',\n                '</div>');\n        }\n\n        html.push('</div>');\n\n        // Fix #188: this.showToolbar is for extensions\n        if (this.showToolbar || html.length > 2) {\n            this.$toolbar.append(html.join(''));\n        }\n\n        if (this.options.showPaginationSwitch) {\n            this.$toolbar.find('button[name=\"paginationSwitch\"]')\n                .off('click').on('click', $.proxy(this.togglePagination, this));\n        }\n\n        if (this.options.showRefresh) {\n            this.$toolbar.find('button[name=\"refresh\"]')\n                .off('click').on('click', $.proxy(this.refresh, this));\n        }\n\n        if (this.options.showToggle) {\n            this.$toolbar.find('button[name=\"toggle\"]')\n                .off('click').on('click', function () {\n                    that.toggleView();\n                });\n        }\n\n        if (this.options.showColumns) {\n            $keepOpen = this.$toolbar.find('.keep-open');\n\n            if (switchableCount <= this.options.minimumCountColumns) {\n                $keepOpen.find('input').prop('disabled', true);\n            }\n\n            $keepOpen.find('li').off('click').on('click', function (event) {\n                event.stopImmediatePropagation();\n            });\n            $keepOpen.find('input').off('click').on('click', function () {\n                var $this = $(this);\n\n                that.toggleColumn($(this).val(), $this.prop('checked'), false);\n                that.trigger('column-switch', $(this).data('field'), $this.prop('checked'));\n            });\n        }\n\n        if (this.options.search) {\n            html = [];\n            html.push(\n                '<div class=\"pull-' + this.options.searchAlign + ' search\">',\n                sprintf('<input class=\"form-control' +\n                    sprintf(' input-%s', this.options.iconSize) +\n                    '\" type=\"text\" placeholder=\"%s\">',\n                    this.options.formatSearch()),\n                '</div>');\n\n            this.$toolbar.append(html.join(''));\n            $search = this.$toolbar.find('.search input');\n            $search.off('keyup drop blur').on('keyup drop blur', function (event) {\n                if (that.options.searchOnEnterKey && event.keyCode !== 13) {\n                    return;\n                }\n\n                if ($.inArray(event.keyCode, [37, 38, 39, 40]) > -1) {\n                    return;\n                }\n\n                clearTimeout(timeoutId); // doesn't matter if it's 0\n                timeoutId = setTimeout(function () {\n                    that.onSearch(event);\n                }, that.options.searchTimeOut);\n            });\n\n            if (isIEBrowser()) {\n                $search.off('mouseup').on('mouseup', function (event) {\n                    clearTimeout(timeoutId); // doesn't matter if it's 0\n                    timeoutId = setTimeout(function () {\n                        that.onSearch(event);\n                    }, that.options.searchTimeOut);\n                });\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSearch = function (event) {\n        var text = $.trim($(event.currentTarget).val());\n\n        // trim search input\n        if (this.options.trimOnSearch && $(event.currentTarget).val() !== text) {\n            $(event.currentTarget).val(text);\n        }\n\n        if (text === this.searchText) {\n            return;\n        }\n        this.searchText = text;\n        this.options.searchText = text;\n\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n        this.trigger('search', text);\n    };\n\n    BootstrapTable.prototype.initSearch = function () {\n        var that = this;\n\n        if (this.options.sidePagination !== 'server') {\n            if (this.options.customSearch !== $.noop) {\n                this.options.customSearch.apply(this, [this.searchText]);\n                return;\n            }\n\n            var s = this.searchText && (this.options.escape ?\n                escapeHTML(this.searchText) : this.searchText).toLowerCase();\n            var f = $.isEmptyObject(this.filterColumns) ? null : this.filterColumns;\n\n            // Check filter\n            this.data = f ? $.grep(this.options.data, function (item, i) {\n                for (var key in f) {\n                    if ($.isArray(f[key]) && $.inArray(item[key], f[key]) === -1 ||\n                            !$.isArray(f[key]) && item[key] !== f[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }) : this.options.data;\n\n            this.data = s ? $.grep(this.data, function (item, i) {\n                for (var j = 0; j < that.header.fields.length; j++) {\n\n                    if (!that.header.searchables[j]) {\n                        continue;\n                    }\n\n                    var key = $.isNumeric(that.header.fields[j]) ? parseInt(that.header.fields[j], 10) : that.header.fields[j];\n                    var column = that.columns[getFieldIndex(that.columns, key)];\n                    var value;\n\n                    if (typeof key === 'string') {\n                        value = item;\n                        var props = key.split('.');\n                        for (var prop_index = 0; prop_index < props.length; prop_index++) {\n                            value = value[props[prop_index]];\n                        }\n\n                        // Fix #142: respect searchForamtter boolean\n                        if (column && column.searchFormatter) {\n                            value = calculateObjectValue(column,\n                                that.header.formatters[j], [value, item, i], value);\n                        }\n                    } else {\n                        value = item[key];\n                    }\n\n                    if (typeof value === 'string' || typeof value === 'number') {\n                        if (that.options.strictSearch) {\n                            if ((value + '').toLowerCase() === s) {\n                                return true;\n                            }\n                        } else {\n                            if ((value + '').toLowerCase().indexOf(s) !== -1) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }) : this.data;\n        }\n    };\n\n    BootstrapTable.prototype.initPagination = function () {\n        if (!this.options.pagination) {\n            this.$pagination.hide();\n            return;\n        } else {\n            this.$pagination.show();\n        }\n\n        var that = this,\n            html = [],\n            $allSelected = false,\n            i, from, to,\n            $pageList,\n            $first, $pre,\n            $next, $last,\n            $number,\n            data = this.getData(),\n            pageList = this.options.pageList;\n\n        if (this.options.sidePagination !== 'server') {\n            this.options.totalRows = data.length;\n        }\n\n        this.totalPages = 0;\n        if (this.options.totalRows) {\n            if (this.options.pageSize === this.options.formatAllRows()) {\n                this.options.pageSize = this.options.totalRows;\n                $allSelected = true;\n            } else if (this.options.pageSize === this.options.totalRows) {\n                // Fix #667 Table with pagination,\n                // multiple pages and a search that matches to one page throws exception\n                var pageLst = typeof this.options.pageList === 'string' ?\n                    this.options.pageList.replace('[', '').replace(']', '')\n                        .replace(/ /g, '').toLowerCase().split(',') : this.options.pageList;\n                if ($.inArray(this.options.formatAllRows().toLowerCase(), pageLst)  > -1) {\n                    $allSelected = true;\n                }\n            }\n\n            this.totalPages = ~~((this.options.totalRows - 1) / this.options.pageSize) + 1;\n\n            this.options.totalPages = this.totalPages;\n        }\n        if (this.totalPages > 0 && this.options.pageNumber > this.totalPages) {\n            this.options.pageNumber = this.totalPages;\n        }\n\n        this.pageFrom = (this.options.pageNumber - 1) * this.options.pageSize + 1;\n        this.pageTo = this.options.pageNumber * this.options.pageSize;\n        if (this.pageTo > this.options.totalRows) {\n            this.pageTo = this.options.totalRows;\n        }\n\n        html.push(\n            '<div class=\"pull-' + this.options.paginationDetailHAlign + ' pagination-detail\">',\n            '<span class=\"pagination-info\">',\n            this.options.onlyInfoPagination ? this.options.formatDetailPagination(this.options.totalRows) :\n            this.options.formatShowingRows(this.pageFrom, this.pageTo, this.options.totalRows),\n            '</span>');\n\n        if (!this.options.onlyInfoPagination) {\n            html.push('<span class=\"page-list\">');\n\n            var pageNumber = [\n                    sprintf('<span class=\"btn-group %s\">',\n                        this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                            'dropdown' : 'dropup'),\n                    '<button type=\"button\" class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                    '<span class=\"page-size\">',\n                    $allSelected ? this.options.formatAllRows() : this.options.pageSize,\n                    '</span>',\n                    ' <span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu\" role=\"menu\">'\n                ];\n\n            if (typeof this.options.pageList === 'string') {\n                var list = this.options.pageList.replace('[', '').replace(']', '')\n                    .replace(/ /g, '').split(',');\n\n                pageList = [];\n                $.each(list, function (i, value) {\n                    pageList.push(value.toUpperCase() === that.options.formatAllRows().toUpperCase() ?\n                        that.options.formatAllRows() : +value);\n                });\n            }\n\n            $.each(pageList, function (i, page) {\n                if (!that.options.smartDisplay || i === 0 || pageList[i - 1] < that.options.totalRows) {\n                    var active;\n                    if ($allSelected) {\n                        active = page === that.options.formatAllRows() ? ' class=\"active\"' : '';\n                    } else {\n                        active = page === that.options.pageSize ? ' class=\"active\"' : '';\n                    }\n                    pageNumber.push(sprintf('<li role=\"menuitem\"%s><a href=\"#\">%s</a></li>', active, page));\n                }\n            });\n            pageNumber.push('</ul></span>');\n\n            html.push(this.options.formatRecordsPerPage(pageNumber.join('')));\n            html.push('</span>');\n\n            html.push('</div>',\n                '<div class=\"pull-' + this.options.paginationHAlign + ' pagination\">',\n                '<ul class=\"pagination' + sprintf(' pagination-%s', this.options.iconSize) + '\">',\n                '<li class=\"page-pre\"><a href=\"#\">' + this.options.paginationPreText + '</a></li>');\n\n            if (this.totalPages < 5) {\n                from = 1;\n                to = this.totalPages;\n            } else {\n                from = this.options.pageNumber - 2;\n                to = from + 4;\n                if (from < 1) {\n                    from = 1;\n                    to = 5;\n                }\n                if (to > this.totalPages) {\n                    to = this.totalPages;\n                    from = to - 4;\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber >= 3) {\n                    html.push('<li class=\"page-first' + (1 === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', 1, '</a>',\n                        '</li>');\n\n                    from++;\n                }\n\n                if (this.options.pageNumber >= 4) {\n                    if (this.options.pageNumber == 4 || this.totalPages == 6 || this.totalPages == 7) {\n                        from--;\n                    } else {\n                        html.push('<li class=\"page-first-separator disabled\">',\n                            '<a href=\"#\">...</a>',\n                            '</li>');\n                    }\n\n                    to--;\n                }\n            }\n\n            if (this.totalPages >= 7) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    from--;\n                }\n            }\n\n            if (this.totalPages == 6) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    to++;\n                }\n            } else if (this.totalPages >= 7) {\n                if (this.totalPages == 7 || this.options.pageNumber >= (this.totalPages - 3)) {\n                    to++;\n                }\n            }\n\n            for (i = from; i <= to; i++) {\n                html.push('<li class=\"page-number' + (i === this.options.pageNumber ? ' active' : '') + '\">',\n                    '<a href=\"#\">', i, '</a>',\n                    '</li>');\n            }\n\n            if (this.totalPages >= 8) {\n                if (this.options.pageNumber <= (this.totalPages - 4)) {\n                    html.push('<li class=\"page-last-separator disabled\">',\n                        '<a href=\"#\">...</a>',\n                        '</li>');\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber <= (this.totalPages - 3)) {\n                    html.push('<li class=\"page-last' + (this.totalPages === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', this.totalPages, '</a>',\n                        '</li>');\n                }\n            }\n\n            html.push(\n                '<li class=\"page-next\"><a href=\"#\">' + this.options.paginationNextText + '</a></li>',\n                '</ul>',\n                '</div>');\n        }\n        this.$pagination.html(html.join(''));\n\n        if (!this.options.onlyInfoPagination) {\n            $pageList = this.$pagination.find('.page-list a');\n            $first = this.$pagination.find('.page-first');\n            $pre = this.$pagination.find('.page-pre');\n            $next = this.$pagination.find('.page-next');\n            $last = this.$pagination.find('.page-last');\n            $number = this.$pagination.find('.page-number');\n\n            if (this.options.smartDisplay) {\n                if (this.totalPages <= 1) {\n                    this.$pagination.find('div.pagination').hide();\n                }\n                if (pageList.length < 2 || this.options.totalRows <= pageList[0]) {\n                    this.$pagination.find('span.page-list').hide();\n                }\n\n                // when data is empty, hide the pagination\n                this.$pagination[this.getData().length ? 'show' : 'hide']();\n            }\n\n            if (!this.options.paginationLoop) {\n                if (this.options.pageNumber === 1) {\n                    $pre.addClass('disabled');\n                }\n                if (this.options.pageNumber === this.totalPages) {\n                    $next.addClass('disabled');\n                }\n            }\n\n            if ($allSelected) {\n                this.options.pageSize = this.options.formatAllRows();\n            }\n            $pageList.off('click').on('click', $.proxy(this.onPageListChange, this));\n            $first.off('click').on('click', $.proxy(this.onPageFirst, this));\n            $pre.off('click').on('click', $.proxy(this.onPagePre, this));\n            $next.off('click').on('click', $.proxy(this.onPageNext, this));\n            $last.off('click').on('click', $.proxy(this.onPageLast, this));\n            $number.off('click').on('click', $.proxy(this.onPageNumber, this));\n        }\n    };\n\n    BootstrapTable.prototype.updatePagination = function (event) {\n        // Fix #171: IE disabled button can be clicked bug.\n        if (event && $(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        if (!this.options.maintainSelected) {\n            this.resetRows();\n        }\n\n        this.initPagination();\n        if (this.options.sidePagination === 'server') {\n            this.initServer();\n        } else {\n            this.initBody();\n        }\n\n        this.trigger('page-change', this.options.pageNumber, this.options.pageSize);\n    };\n\n    BootstrapTable.prototype.onPageListChange = function (event) {\n        var $this = $(event.currentTarget);\n\n        $this.parent().addClass('active').siblings().removeClass('active');\n        this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n            this.options.formatAllRows() : +$this.text();\n        this.$toolbar.find('.page-size').text(this.options.pageSize);\n\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageFirst = function (event) {\n        this.options.pageNumber = 1;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPagePre = function (event) {\n        if ((this.options.pageNumber - 1) === 0) {\n            this.options.pageNumber = this.options.totalPages;\n        } else {\n            this.options.pageNumber--;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNext = function (event) {\n        if ((this.options.pageNumber + 1) > this.options.totalPages) {\n            this.options.pageNumber = 1;\n        } else {\n            this.options.pageNumber++;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageLast = function (event) {\n        this.options.pageNumber = this.totalPages;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNumber = function (event) {\n        if (this.options.pageNumber === +$(event.currentTarget).text()) {\n            return;\n        }\n        this.options.pageNumber = +$(event.currentTarget).text();\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.initRow = function(item, i, data, parentDom) {\n        var that=this,\n            key,\n            html = [],\n            style = {},\n            csses = [],\n            data_ = '',\n            attributes = {},\n            htmlAttributes = [];\n\n        if ($.inArray(item, this.hiddenRows) > -1) {\n            return;\n        }\n\n        style = calculateObjectValue(this.options, this.options.rowStyle, [item, i], style);\n\n        if (style && style.css) {\n            for (key in style.css) {\n                csses.push(key + ': ' + style.css[key]);\n            }\n        }\n\n        attributes = calculateObjectValue(this.options,\n            this.options.rowAttributes, [item, i], attributes);\n\n        if (attributes) {\n            for (key in attributes) {\n                htmlAttributes.push(sprintf('%s=\"%s\"', key, escapeHTML(attributes[key])));\n            }\n        }\n\n        if (item._data && !$.isEmptyObject(item._data)) {\n            $.each(item._data, function(k, v) {\n                // ignore data-index\n                if (k === 'index') {\n                    return;\n                }\n                data_ += sprintf(' data-%s=\"%s\"', k, v);\n            });\n        }\n\n        html.push('<tr',\n            sprintf(' %s', htmlAttributes.join(' ')),\n            sprintf(' id=\"%s\"', $.isArray(item) ? undefined : item._id),\n            sprintf(' class=\"%s\"', style.classes || ($.isArray(item) ? undefined : item._class)),\n            sprintf(' data-index=\"%s\"', i),\n            sprintf(' data-uniqueid=\"%s\"', item[this.options.uniqueId]),\n            sprintf('%s', data_),\n            '>'\n        );\n\n        if (this.options.cardView) {\n            html.push(sprintf('<td colspan=\"%s\"><div class=\"card-views\">', this.header.fields.length));\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td>',\n                '<a class=\"detail-icon\" href=\"#\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.detailOpen),\n                '</a>',\n                '</td>');\n        }\n\n        $.each(this.header.fields, function(j, field) {\n            var text = '',\n                value_ = getItemField(item, field, that.options.escape),\n                value = '',\n                type = '',\n                cellStyle = {},\n                id_ = '',\n                class_ = that.header.classes[j],\n                data_ = '',\n                rowspan_ = '',\n                colspan_ = '',\n                title_ = '',\n                column = that.columns[j];\n\n            if (that.fromHtml && typeof value_ === 'undefined') {\n                return;\n            }\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            if (column.escape) {\n                value_ = escapeHTML(value_);\n            }\n\n            style = sprintf('style=\"%s\"', csses.concat(that.header.styles[j]).join('; '));\n\n            // handle td's id and class\n            if (item['_' + field + '_id']) {\n                id_ = sprintf(' id=\"%s\"', item['_' + field + '_id']);\n            }\n            if (item['_' + field + '_class']) {\n                class_ = sprintf(' class=\"%s\"', item['_' + field + '_class']);\n            }\n            if (item['_' + field + '_rowspan']) {\n                rowspan_ = sprintf(' rowspan=\"%s\"', item['_' + field + '_rowspan']);\n            }\n            if (item['_' + field + '_colspan']) {\n                colspan_ = sprintf(' colspan=\"%s\"', item['_' + field + '_colspan']);\n            }\n            if (item['_' + field + '_title']) {\n                title_ = sprintf(' title=\"%s\"', item['_' + field + '_title']);\n            }\n            cellStyle = calculateObjectValue(that.header,\n                that.header.cellStyles[j], [value_, item, i, field], cellStyle);\n            if (cellStyle.classes) {\n                class_ = sprintf(' class=\"%s\"', cellStyle.classes);\n            }\n            if (cellStyle.css) {\n                var csses_ = [];\n                for (var key in cellStyle.css) {\n                    csses_.push(key + ': ' + cellStyle.css[key]);\n                }\n                style = sprintf('style=\"%s\"', csses_.concat(that.header.styles[j]).join('; '));\n            }\n\n            value = calculateObjectValue(column,\n                that.header.formatters[j], [value_, item, i], value_);\n\n            if (item['_' + field + '_data'] && !$.isEmptyObject(item['_' + field + '_data'])) {\n                $.each(item['_' + field + '_data'], function(k, v) {\n                    // ignore data-index\n                    if (k === 'index') {\n                        return;\n                    }\n                    data_ += sprintf(' data-%s=\"%s\"', k, v);\n                });\n            }\n\n            if (column.checkbox || column.radio) {\n                type = column.checkbox ? 'checkbox' : type;\n                type = column.radio ? 'radio' : type;\n\n                text = [sprintf(that.options.cardView ?\n                        '<div class=\"card-view %s\">' : '<td class=\"bs-checkbox %s\">', column['class'] || ''),\n                    '<input' +\n                    sprintf(' data-index=\"%s\"', i) +\n                    sprintf(' name=\"%s\"', that.options.selectItemName) +\n                    sprintf(' type=\"%s\"', type) +\n                    sprintf(' value=\"%s\"', item[that.options.idField]) +\n                    sprintf(' checked=\"%s\"', value === true ||\n                        (value_ || value && value.checked) ? 'checked' : undefined) +\n                    sprintf(' disabled=\"%s\"', !column.checkboxEnabled ||\n                        (value && value.disabled) ? 'disabled' : undefined) +\n                    ' />',\n                    that.header.formatters[j] && typeof value === 'string' ? value : '',\n                    that.options.cardView ? '</div>' : '</td>'\n                ].join('');\n\n                item[that.header.stateField] = value === true || (value && value.checked);\n            } else {\n                value = typeof value === 'undefined' || value === null ?\n                    that.options.undefinedText : value;\n\n                text = that.options.cardView ? ['<div class=\"card-view\">',\n                    that.options.showHeader ? sprintf('<span class=\"title\" %s>%s</span>', style,\n                        getPropertyFromOther(that.columns, 'field', 'title', field)) : '',\n                    sprintf('<span class=\"value\">%s</span>', value),\n                    '</div>'\n                ].join('') : [sprintf('<td%s %s %s %s %s %s %s>',\n                        id_, class_, style, data_, rowspan_, colspan_, title_),\n                    value,\n                    '</td>'\n                ].join('');\n\n                // Hide empty data on Card view when smartDisplay is set to true.\n                if (that.options.cardView && that.options.smartDisplay && value === '') {\n                    // Should set a placeholder for event binding correct fieldIndex\n                    text = '<div class=\"card-view\"></div>';\n                }\n            }\n\n            html.push(text);\n        });\n\n        if (this.options.cardView) {\n            html.push('</div></td>');\n        }\n        html.push('</tr>');\n\n        return html.join(' ');\n    };\n\n    BootstrapTable.prototype.initBody = function (fixedScroll) {\n        var that = this,\n            html = [],\n            data = this.getData();\n\n        this.trigger('pre-body', data);\n\n        this.$body = this.$el.find('>tbody');\n        if (!this.$body.length) {\n            this.$body = $('<tbody></tbody>').appendTo(this.$el);\n        }\n\n        //Fix #389 Bootstrap-table-flatJSON is not working\n\n        if (!this.options.pagination || this.options.sidePagination === 'server') {\n            this.pageFrom = 1;\n            this.pageTo = data.length;\n        }\n\n        var trFragments = $(document.createDocumentFragment());\n        var hasTr;\n\n        for (var i = this.pageFrom - 1; i < this.pageTo; i++) {\n            var item = data[i];\n            var tr = this.initRow(item, i, data, trFragments);\n            hasTr = hasTr || !!tr;\n            if (tr&&tr!==true) {\n                trFragments.append(tr);\n            }\n        }\n\n        // show no records\n        if (!hasTr) {\n            trFragments.append('<tr class=\"no-records-found\">' +\n                sprintf('<td colspan=\"%s\">%s</td>',\n                this.$header.find('th').length,\n                this.options.formatNoMatches()) +\n                '</tr>');\n        }\n\n        this.$body.html(trFragments);\n\n        if (!fixedScroll) {\n            this.scrollTo(0);\n        }\n\n        // click to select by column\n        this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', function (e) {\n            var $td = $(this),\n                $tr = $td.parent(),\n                item = that.data[$tr.data('index')],\n                index = $td[0].cellIndex,\n                fields = that.getVisibleFields(),\n                field = fields[that.options.detailView && !that.options.cardView ? index - 1 : index],\n                column = that.columns[getFieldIndex(that.columns, field)],\n                value = getItemField(item, field, that.options.escape);\n\n            if ($td.find('.detail-icon').length) {\n                return;\n            }\n\n            that.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td);\n            that.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field);\n\n            // if click to select - then trigger the checkbox/radio click\n            if (e.type === 'click' && that.options.clickToSelect && column.clickToSelect) {\n                var $selectItem = $tr.find(sprintf('[name=\"%s\"]', that.options.selectItemName));\n                if ($selectItem.length) {\n                    $selectItem[0].click(); // #144: .trigger('click') bug\n                }\n            }\n        });\n\n        this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', function () {\n            var $this = $(this),\n                $tr = $this.parent().parent(),\n                index = $tr.data('index'),\n                row = data[index]; // Fix #980 Detail view, when searching, returns wrong row\n\n            // remove and update\n            if ($tr.next().is('tr.detail-view')) {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailOpen));\n                that.trigger('collapse-row', index, row);\n                $tr.next().remove();\n            } else {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailClose));\n                $tr.after(sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.find('td').length));\n                var $element = $tr.next().find('td');\n                var content = calculateObjectValue(that.options, that.options.detailFormatter, [index, row, $element], '');\n                if($element.length === 1) {\n                    $element.append(content);\n                }\n                that.trigger('expand-row', index, row, $element);\n            }\n            that.resetView();\n            return false;\n        });\n\n        this.$selectItem = this.$body.find(sprintf('[name=\"%s\"]', this.options.selectItemName));\n        this.$selectItem.off('click').on('click', function (event) {\n            event.stopImmediatePropagation();\n\n            var $this = $(this),\n                checked = $this.prop('checked'),\n                row = that.data[$this.data('index')];\n\n            if (that.options.maintainSelected && $(this).is(':radio')) {\n                $.each(that.options.data, function (i, row) {\n                    row[that.header.stateField] = false;\n                });\n            }\n\n            row[that.header.stateField] = checked;\n\n            if (that.options.singleSelect) {\n                that.$selectItem.not(this).each(function () {\n                    that.data[$(this).data('index')][that.header.stateField] = false;\n                });\n                that.$selectItem.filter(':checked').not(this).prop('checked', false);\n            }\n\n            that.updateSelected();\n            that.trigger(checked ? 'check' : 'uncheck', row, $this);\n        });\n\n        $.each(this.header.events, function (i, events) {\n            if (!events) {\n                return;\n            }\n            // fix bug, if events is defined with namespace\n            if (typeof events === 'string') {\n                events = calculateObjectValue(null, events);\n            }\n\n            var field = that.header.fields[i],\n                fieldIndex = $.inArray(field, that.getVisibleFields());\n\n            if (that.options.detailView && !that.options.cardView) {\n                fieldIndex += 1;\n            }\n\n            for (var key in events) {\n                that.$body.find('>tr:not(.no-records-found)').each(function () {\n                    var $tr = $(this),\n                        $td = $tr.find(that.options.cardView ? '.card-view' : 'td').eq(fieldIndex),\n                        index = key.indexOf(' '),\n                        name = key.substring(0, index),\n                        el = key.substring(index + 1),\n                        func = events[key];\n\n                    $td.find(el).off(name).on(name, function (e) {\n                        var index = $tr.data('index'),\n                            row = that.data[index],\n                            value = row[field];\n\n                        func.apply(this, [e, value, row, index]);\n                    });\n                });\n            }\n        });\n\n        this.updateSelected();\n        this.resetView();\n\n        this.trigger('post-body', data);\n    };\n\n    BootstrapTable.prototype.initServer = function (silent, query, url) {\n        var that = this,\n            data = {},\n            params = {\n                searchText: this.searchText,\n                sortName: this.options.sortName,\n                sortOrder: this.options.sortOrder\n            },\n            request;\n\n        if (this.options.pagination) {\n            params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n                this.options.totalRows : this.options.pageSize;\n            params.pageNumber = this.options.pageNumber;\n        }\n\n        if (!(url || this.options.url) && !this.options.ajax) {\n            return;\n        }\n\n        if (this.options.queryParamsType === 'limit') {\n            params = {\n                search: params.searchText,\n                sort: params.sortName,\n                order: params.sortOrder\n            };\n\n            if (this.options.pagination) {\n                params.offset = this.options.pageSize === this.options.formatAllRows() ?\n                    0 : this.options.pageSize * (this.options.pageNumber - 1);\n                params.limit = this.options.pageSize === this.options.formatAllRows() ?\n                    this.options.totalRows : this.options.pageSize;\n            }\n        }\n\n        if (!($.isEmptyObject(this.filterColumnsPartial))) {\n            params.filter = JSON.stringify(this.filterColumnsPartial, null);\n        }\n\n        data = calculateObjectValue(this.options, this.options.queryParams, [params], data);\n\n        $.extend(data, query || {});\n\n        // false to stop request\n        if (data === false) {\n            return;\n        }\n\n        if (!silent) {\n            this.$tableLoading.show();\n        }\n        request = $.extend({}, calculateObjectValue(null, this.options.ajaxOptions), {\n            type: this.options.method,\n            url:  url || this.options.url,\n            data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n                JSON.stringify(data) : data,\n            cache: this.options.cache,\n            contentType: this.options.contentType,\n            dataType: this.options.dataType,\n            success: function (res) {\n                res = calculateObjectValue(that.options, that.options.responseHandler, [res], res);\n\n                that.load(res);\n                that.trigger('load-success', res);\n                if (!silent) that.$tableLoading.hide();\n            },\n            error: function (res) {\n                that.trigger('load-error', res.status, res);\n                if (!silent) that.$tableLoading.hide();\n            }\n        });\n\n        if (this.options.ajax) {\n            calculateObjectValue(this, this.options.ajax, [request], null);\n        } else {\n            if (this._xhr && this._xhr.readyState !== 4) {\n                this._xhr.abort();\n            }\n            this._xhr = $.ajax(request);\n        }\n    };\n\n    BootstrapTable.prototype.initSearchText = function () {\n        if (this.options.search) {\n            if (this.options.searchText !== '') {\n                var $search = this.$toolbar.find('.search input');\n                $search.val(this.options.searchText);\n                this.onSearch({currentTarget: $search});\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getCaret = function () {\n        var that = this;\n\n        $.each(this.$header.find('th'), function (i, th) {\n            $(th).find('.sortable').removeClass('desc asc').addClass($(th).data('field') === that.options.sortName ? that.options.sortOrder : 'both');\n        });\n    };\n\n    BootstrapTable.prototype.updateSelected = function () {\n        var checkAll = this.$selectItem.filter(':enabled').length &&\n            this.$selectItem.filter(':enabled').length ===\n            this.$selectItem.filter(':enabled').filter(':checked').length;\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checkAll);\n\n        this.$selectItem.each(function () {\n            $(this).closest('tr')[$(this).prop('checked') ? 'addClass' : 'removeClass']('selected');\n        });\n    };\n\n    BootstrapTable.prototype.updateRows = function () {\n        var that = this;\n\n        this.$selectItem.each(function () {\n            that.data[$(this).data('index')][that.header.stateField] = $(this).prop('checked');\n        });\n    };\n\n    BootstrapTable.prototype.resetRows = function () {\n        var that = this;\n\n        $.each(this.data, function (i, row) {\n            that.$selectAll.prop('checked', false);\n            that.$selectItem.prop('checked', false);\n            if (that.header.stateField) {\n                row[that.header.stateField] = false;\n            }\n        });\n        this.initHiddenRows();\n    };\n\n    BootstrapTable.prototype.trigger = function (name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        name += '.bs.table';\n        this.options[BootstrapTable.EVENTS[name]].apply(this.options, args);\n        this.$el.trigger($.Event(name), args);\n\n        this.options.onAll(name, args);\n        this.$el.trigger($.Event('all.bs.table'), [name, args]);\n    };\n\n    BootstrapTable.prototype.resetHeader = function () {\n        // fix #61: the hidden table reset header bug.\n        // fix bug: get $el.css('width') error sometime (height = 500)\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout($.proxy(this.fitHeader, this), this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitHeader = function () {\n        var that = this,\n            fixedBody,\n            scrollWidth,\n            focused,\n            focusedTemp;\n\n        if (that.$el.is(':hidden')) {\n            that.timeoutId_ = setTimeout($.proxy(that.fitHeader, that), 100);\n            return;\n        }\n        fixedBody = this.$tableBody.get(0);\n\n        scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n        fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            getScrollBarWidth() : 0;\n\n        this.$el.css('margin-top', -this.$header.outerHeight());\n\n        focused = $(':focus');\n        if (focused.length > 0) {\n            var $th = focused.parents('th');\n            if ($th.length > 0) {\n                var dataField = $th.attr('data-field');\n                if (dataField !== undefined) {\n                    var $headerTh = this.$header.find(\"[data-field='\" + dataField + \"']\");\n                    if ($headerTh.length > 0) {\n                        $headerTh.find(\":input\").addClass(\"focus-temp\");\n                    }\n                }\n            }\n        }\n\n        this.$header_ = this.$header.clone(true, true);\n        this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]');\n        this.$tableHeader.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', this.$el.outerWidth())\n            .html('').attr('class', this.$el.attr('class'))\n            .append(this.$header_);\n\n\n        focusedTemp = $('.focus-temp:visible:eq(0)');\n        if (focusedTemp.length > 0) {\n            focusedTemp.focus();\n            this.$header.find('.focus-temp').removeClass('focus-temp');\n        }\n\n        // fix bug: $.data() is not working as expected after $.append()\n        this.$header.find('th[data-field]').each(function (i) {\n            that.$header_.find(sprintf('th[data-field=\"%s\"]', $(this).data('field'))).data($(this).data());\n        });\n\n        var visibleFields = this.getVisibleFields(),\n            $ths = this.$header_.find('th');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this),\n                index = i;\n\n            if (that.options.detailView && !that.options.cardView) {\n                if (i === 0) {\n                    that.$header_.find('th.detail').find('.fht-cell').width($this.innerWidth());\n                }\n                index = i - 1;\n            }\n\n            var $th = that.$header_.find(sprintf('th[data-field=\"%s\"]', visibleFields[index]));\n            if ($th.length > 1) {\n                $th = $($ths[$this[0].cellIndex]);\n            }\n\n            $th.find('.fht-cell').width($this.innerWidth());\n        });\n        // horizontal scroll event\n        // TODO: it's probably better improving the layout than binding to scroll event\n        this.$tableBody.off('scroll').on('scroll', function () {\n            that.$tableHeader.scrollLeft($(this).scrollLeft());\n\n            if (that.options.showFooter && !that.options.cardView) {\n                that.$tableFooter.scrollLeft($(this).scrollLeft());\n            }\n        });\n        that.trigger('post-header');\n    };\n\n    BootstrapTable.prototype.resetFooter = function () {\n        var that = this,\n            data = that.getData(),\n            html = [];\n\n        if (!this.options.showFooter || this.options.cardView) { //do nothing\n            return;\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td><div class=\"th-inner\">&nbsp;</div><div class=\"fht-cell\"></div></td>');\n        }\n\n        $.each(this.columns, function (i, column) {\n            var key,\n                falign = '', // footer align style\n                valign = '',\n                csses = [],\n                style = {},\n                class_ = sprintf(' class=\"%s\"', column['class']);\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            falign = sprintf('text-align: %s; ', column.falign ? column.falign : column.align);\n            valign = sprintf('vertical-align: %s; ', column.valign);\n\n            style = calculateObjectValue(null, that.options.footerStyle);\n\n            if (style && style.css) {\n                for (key in style.css) {\n                    csses.push(key + ': ' + style.css[key]);\n                }\n            }\n\n            html.push('<td', class_, sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')), '>');\n            html.push('<div class=\"th-inner\">');\n\n            html.push(calculateObjectValue(column, column.footerFormatter, [data], '&nbsp;') || '&nbsp;');\n\n            html.push('</div>');\n            html.push('<div class=\"fht-cell\"></div>');\n            html.push('</div>');\n            html.push('</td>');\n        });\n\n        this.$tableFooter.find('tr').html(html.join(''));\n        this.$tableFooter.show();\n        clearTimeout(this.timeoutFooter_);\n        this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this),\n            this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitFooter = function () {\n        var that = this,\n            $footerTd,\n            elWidth,\n            scrollWidth;\n\n        clearTimeout(this.timeoutFooter_);\n        if (this.$el.is(':hidden')) {\n            this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this), 100);\n            return;\n        }\n\n        elWidth = this.$el.css('width');\n        scrollWidth = elWidth > this.$tableBody.width() ? getScrollBarWidth() : 0;\n\n        this.$tableFooter.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', elWidth)\n            .attr('class', this.$el.attr('class'));\n\n        $footerTd = this.$tableFooter.find('td');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this);\n\n            $footerTd.eq(i).find('.fht-cell').width($this.innerWidth());\n        });\n    };\n\n    BootstrapTable.prototype.toggleColumn = function (index, checked, needUpdate) {\n        if (index === -1) {\n            return;\n        }\n        this.columns[index].visible = checked;\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if (needUpdate) {\n                $items.filter(sprintf('[value=\"%s\"]', index)).prop('checked', checked);\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getVisibleFields = function () {\n        var that = this,\n            visibleFields = [];\n\n        $.each(this.header.fields, function (j, field) {\n            var column = that.columns[getFieldIndex(that.columns, field)];\n\n            if (!column.visible) {\n                return;\n            }\n            visibleFields.push(field);\n        });\n        return visibleFields;\n    };\n\n    // PUBLIC FUNCTION DEFINITION\n    // =======================\n\n    BootstrapTable.prototype.resetView = function (params) {\n        var padding = 0;\n\n        if (params && params.height) {\n            this.options.height = params.height;\n        }\n\n        this.$selectAll.prop('checked', this.$selectItem.length > 0 &&\n            this.$selectItem.length === this.$selectItem.filter(':checked').length);\n\n        if (this.options.height) {\n            var toolbarHeight = this.$toolbar.outerHeight(true),\n                paginationHeight = this.$pagination.outerHeight(true),\n                height = this.options.height - toolbarHeight - paginationHeight;\n\n            this.$tableContainer.css('height', height + 'px');\n        }\n\n        if (this.options.cardView) {\n            // remove the element css\n            this.$el.css('margin-top', '0');\n            this.$tableContainer.css('padding-bottom', '0');\n            this.$tableFooter.hide();\n            return;\n        }\n\n        if (this.options.showHeader && this.options.height) {\n            this.$tableHeader.show();\n            this.resetHeader();\n            padding += this.$header.outerHeight();\n        } else {\n            this.$tableHeader.hide();\n            this.trigger('post-header');\n        }\n\n        if (this.options.showFooter) {\n            this.resetFooter();\n            if (this.options.height) {\n                padding += this.$tableFooter.outerHeight() + 1;\n            }\n        }\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n        this.$tableContainer.css('padding-bottom', padding + 'px');\n        this.trigger('reset-view');\n    };\n\n    BootstrapTable.prototype.getData = function (useCurrentPage) {\n        return (this.searchText || !$.isEmptyObject(this.filterColumns) || !$.isEmptyObject(this.filterColumnsPartial)) ?\n            (useCurrentPage ? this.data.slice(this.pageFrom - 1, this.pageTo) : this.data) :\n            (useCurrentPage ? this.options.data.slice(this.pageFrom - 1, this.pageTo) : this.options.data);\n    };\n\n    BootstrapTable.prototype.load = function (data) {\n        var fixedScroll = false;\n\n        // #431: support pagination\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows = data[this.options.totalField];\n            fixedScroll = data.fixedScroll;\n            data = data[this.options.dataField];\n        } else if (!$.isArray(data)) { // support fixedScroll\n            fixedScroll = data.fixedScroll;\n            data = data.data;\n        }\n\n        this.initData(data);\n        this.initSearch();\n        this.initPagination();\n        this.initBody(fixedScroll);\n    };\n\n    BootstrapTable.prototype.append = function (data) {\n        this.initData(data, 'append');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.prepend = function (data) {\n        this.initData(data, 'prepend');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.remove = function (params) {\n        var len = this.options.data.length,\n            i, row;\n\n        if (!params.hasOwnProperty('field') || !params.hasOwnProperty('values')) {\n            return;\n        }\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (!row.hasOwnProperty(params.field)) {\n                continue;\n            }\n            if ($.inArray(row[params.field], params.values) !== -1) {\n                this.options.data.splice(i, 1);\n                if (this.options.sidePagination === 'server') {\n                    this.options.totalRows -= 1;\n                }\n            }\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.removeAll = function () {\n        if (this.options.data.length > 0) {\n            this.options.data.splice(0, this.options.data.length);\n            this.initSearch();\n            this.initPagination();\n            this.initBody(true);\n        }\n    };\n\n    BootstrapTable.prototype.getRowByUniqueId = function (id) {\n        var uniqueId = this.options.uniqueId,\n            len = this.options.data.length,\n            dataRow = null,\n            i, row, rowUniqueId;\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (row.hasOwnProperty(uniqueId)) { // uniqueId is a column\n                rowUniqueId = row[uniqueId];\n            } else if(row._data.hasOwnProperty(uniqueId)) { // uniqueId is a row data property\n                rowUniqueId = row._data[uniqueId];\n            } else {\n                continue;\n            }\n\n            if (typeof rowUniqueId === 'string') {\n                id = id.toString();\n            } else if (typeof rowUniqueId === 'number') {\n                if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n                    id = parseInt(id);\n                } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n                    id = parseFloat(id);\n                }\n            }\n\n            if (rowUniqueId === id) {\n                dataRow = row;\n                break;\n            }\n        }\n\n        return dataRow;\n    };\n\n    BootstrapTable.prototype.removeByUniqueId = function (id) {\n        var len = this.options.data.length,\n            row = this.getRowByUniqueId(id);\n\n        if (row) {\n            this.options.data.splice(this.options.data.indexOf(row), 1);\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateByUniqueId = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            var rowId;\n\n            if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n                return;\n            }\n\n            rowId = $.inArray(that.getRowByUniqueId(params.id), that.options.data);\n\n            if (rowId === -1) {\n                return;\n            }\n            $.extend(that.options.data[rowId], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.insertRow = function (params) {\n        if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n            return;\n        }\n        this.data.splice(params.index, 0, params.row);\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateRow = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n                return;\n            }\n            $.extend(that.options.data[params.index], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.initHiddenRows = function () {\n        this.hiddenRows = [];\n    };\n\n    BootstrapTable.prototype.showRow = function (params) {\n        this.toggleRow(params, true);\n    };\n\n    BootstrapTable.prototype.hideRow = function (params) {\n        this.toggleRow(params, false);\n    };\n\n    BootstrapTable.prototype.toggleRow = function (params, visible) {\n        var row, index;\n\n        if (params.hasOwnProperty('index')) {\n            row = this.getData()[params.index];\n        } else if (params.hasOwnProperty('uniqueId')) {\n            row = this.getRowByUniqueId(params.uniqueId);\n        }\n\n        if (!row) {\n            return;\n        }\n\n        index = $.inArray(row, this.hiddenRows);\n\n        if (!visible && index === -1) {\n            this.hiddenRows.push(row);\n        } else if (visible && index > -1) {\n            this.hiddenRows.splice(index, 1);\n        }\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getHiddenRows = function (show) {\n        var that = this,\n            data = this.getData(),\n            rows = [];\n\n        $.each(data, function (i, row) {\n            if ($.inArray(row, that.hiddenRows) > -1) {\n                rows.push(row);\n            }\n        });\n        this.hiddenRows = rows;\n        return rows;\n    };\n\n    BootstrapTable.prototype.mergeCells = function (options) {\n        var row = options.index,\n            col = $.inArray(options.field, this.getVisibleFields()),\n            rowspan = options.rowspan || 1,\n            colspan = options.colspan || 1,\n            i, j,\n            $tr = this.$body.find('>tr'),\n            $td;\n\n        if (this.options.detailView && !this.options.cardView) {\n            col += 1;\n        }\n\n        $td = $tr.eq(row).find('>td').eq(col);\n\n        if (row < 0 || col < 0 || row >= this.data.length) {\n            return;\n        }\n\n        for (i = row; i < row + rowspan; i++) {\n            for (j = col; j < col + colspan; j++) {\n                $tr.eq(i).find('>td').eq(j).hide();\n            }\n        }\n\n        $td.attr('rowspan', rowspan).attr('colspan', colspan).show();\n    };\n\n    BootstrapTable.prototype.updateCell = function (params) {\n        if (!params.hasOwnProperty('index') ||\n            !params.hasOwnProperty('field') ||\n            !params.hasOwnProperty('value')) {\n            return;\n        }\n        this.data[params.index][params.field] = params.value;\n\n        if (params.reinit === false) {\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getOptions = function () {\n        return this.options;\n    };\n\n    BootstrapTable.prototype.getSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            // fix #2424: from html with checkbox\n            return row[that.header.stateField] === true;\n        });\n    };\n\n    BootstrapTable.prototype.getAllSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            return row[that.header.stateField];\n        });\n    };\n\n    BootstrapTable.prototype.checkAll = function () {\n        this.checkAll_(true);\n    };\n\n    BootstrapTable.prototype.uncheckAll = function () {\n        this.checkAll_(false);\n    };\n\n    BootstrapTable.prototype.checkInvert = function () {\n        var that = this;\n        var rows = that.$selectItem.filter(':enabled');\n        var checked = rows.filter(':checked');\n        rows.each(function() {\n            $(this).prop('checked', !$(this).prop('checked'));\n        });\n        that.updateRows();\n        that.updateSelected();\n        that.trigger('uncheck-some', checked);\n        checked = that.getSelections();\n        that.trigger('check-some', checked);\n    };\n\n    BootstrapTable.prototype.checkAll_ = function (checked) {\n        var rows;\n        if (!checked) {\n            rows = this.getSelections();\n        }\n        this.$selectAll.add(this.$selectAll_).prop('checked', checked);\n        this.$selectItem.filter(':enabled').prop('checked', checked);\n        this.updateRows();\n        if (checked) {\n            rows = this.getSelections();\n        }\n        this.trigger(checked ? 'check-all' : 'uncheck-all', rows);\n    };\n\n    BootstrapTable.prototype.check = function (index) {\n        this.check_(true, index);\n    };\n\n    BootstrapTable.prototype.uncheck = function (index) {\n        this.check_(false, index);\n    };\n\n    BootstrapTable.prototype.check_ = function (checked, index) {\n        var $el = this.$selectItem.filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n        this.data[index][this.header.stateField] = checked;\n        this.updateSelected();\n        this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el);\n    };\n\n    BootstrapTable.prototype.checkBy = function (obj) {\n        this.checkBy_(true, obj);\n    };\n\n    BootstrapTable.prototype.uncheckBy = function (obj) {\n        this.checkBy_(false, obj);\n    };\n\n    BootstrapTable.prototype.checkBy_ = function (checked, obj) {\n        if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n            return;\n        }\n\n        var that = this,\n            rows = [];\n        $.each(this.options.data, function (index, row) {\n            if (!row.hasOwnProperty(obj.field)) {\n                return false;\n            }\n            if ($.inArray(row[obj.field], obj.values) !== -1) {\n                var $el = that.$selectItem.filter(':enabled')\n                    .filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n                row[that.header.stateField] = checked;\n                rows.push(row);\n                that.trigger(checked ? 'check' : 'uncheck', row, $el);\n            }\n        });\n        this.updateSelected();\n        this.trigger(checked ? 'check-some' : 'uncheck-some', rows);\n    };\n\n    BootstrapTable.prototype.destroy = function () {\n        this.$el.insertBefore(this.$container);\n        $(this.options.toolbar).insertBefore(this.$el);\n        this.$container.next().remove();\n        this.$container.remove();\n        this.$el.html(this.$el_.html())\n            .css('margin-top', '0')\n            .attr('class', this.$el_.attr('class') || ''); // reset the class\n    };\n\n    BootstrapTable.prototype.showLoading = function () {\n        this.$tableLoading.show();\n    };\n\n    BootstrapTable.prototype.hideLoading = function () {\n        this.$tableLoading.hide();\n    };\n\n    BootstrapTable.prototype.togglePagination = function () {\n        this.options.pagination = !this.options.pagination;\n        var button = this.$toolbar.find('button[name=\"paginationSwitch\"] i');\n        if (this.options.pagination) {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchDown);\n        } else {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchUp);\n        }\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.refresh = function (params) {\n        if (params && params.url) {\n            this.options.url = params.url;\n        }\n        if (params && params.pageNumber) {\n            this.options.pageNumber = params.pageNumber;\n        }\n        if (params && params.pageSize) {\n            this.options.pageSize = params.pageSize;\n        }\n        this.initServer(params && params.silent,\n            params && params.query, params && params.url);\n        this.trigger('refresh', params);\n    };\n\n    BootstrapTable.prototype.resetWidth = function () {\n        if (this.options.showHeader && this.options.height) {\n            this.fitHeader();\n        }\n        if (this.options.showFooter) {\n            this.fitFooter();\n        }\n    };\n\n    BootstrapTable.prototype.showColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), true, true);\n    };\n\n    BootstrapTable.prototype.hideColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), false, true);\n    };\n\n    BootstrapTable.prototype.getHiddenColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return !column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.getVisibleColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.toggleAllColumns = function (visible) {\n        $.each(this.columns, function (i, column) {\n            this.columns[i].visible = visible;\n        });\n\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.showAllColumns = function () {\n        this.toggleAllColumns(true);\n    };\n\n    BootstrapTable.prototype.hideAllColumns = function () {\n        this.toggleAllColumns(false);\n    };\n\n    BootstrapTable.prototype.filterBy = function (columns) {\n        this.filterColumns = $.isEmptyObject(columns) ? {} : columns;\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.scrollTo = function (value) {\n        if (typeof value === 'string') {\n            value = value === 'bottom' ? this.$tableBody[0].scrollHeight : 0;\n        }\n        if (typeof value === 'number') {\n            this.$tableBody.scrollTop(value);\n        }\n        if (typeof value === 'undefined') {\n            return this.$tableBody.scrollTop();\n        }\n    };\n\n    BootstrapTable.prototype.getScrollPosition = function () {\n        return this.scrollTo();\n    };\n\n    BootstrapTable.prototype.selectPage = function (page) {\n        if (page > 0 && page <= this.options.totalPages) {\n            this.options.pageNumber = page;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.prevPage = function () {\n        if (this.options.pageNumber > 1) {\n            this.options.pageNumber--;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.nextPage = function () {\n        if (this.options.pageNumber < this.options.totalPages) {\n            this.options.pageNumber++;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.toggleView = function () {\n        this.options.cardView = !this.options.cardView;\n        this.initHeader();\n        // Fixed remove toolbar when click cardView button.\n        //that.initToolbar();\n        this.initBody();\n        this.trigger('toggle', this.options.cardView);\n    };\n\n    BootstrapTable.prototype.refreshOptions = function (options) {\n        //If the objects are equivalent then avoid the call of destroy / init methods\n        if (compareObjects(this.options, options, true)) {\n            return;\n        }\n        this.options = $.extend(this.options, options);\n        this.trigger('refresh-options', this.options);\n        this.destroy();\n        this.init();\n    };\n\n    BootstrapTable.prototype.resetSearch = function (text) {\n        var $search = this.$toolbar.find('.search input');\n        $search.val(text || '');\n        this.onSearch({currentTarget: $search});\n    };\n\n    BootstrapTable.prototype.expandRow_ = function (expand, index) {\n        var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', index));\n        if ($tr.next().is('tr.detail-view') === (expand ? false : true)) {\n            $tr.find('> td > .detail-icon').click();\n        }\n    };\n\n    BootstrapTable.prototype.expandRow = function (index) {\n        this.expandRow_(true, index);\n    };\n\n    BootstrapTable.prototype.collapseRow = function (index) {\n        this.expandRow_(false, index);\n    };\n\n    BootstrapTable.prototype.expandAllRows = function (isSubTable) {\n        if (isSubTable) {\n            var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', 0)),\n                that = this,\n                detailIcon = null,\n                executeInterval = false,\n                idInterval = -1;\n\n            if (!$tr.next().is('tr.detail-view')) {\n                $tr.find('> td > .detail-icon').click();\n                executeInterval = true;\n            } else if (!$tr.next().next().is('tr.detail-view')) {\n                $tr.next().find(\".detail-icon\").click();\n                executeInterval = true;\n            }\n\n            if (executeInterval) {\n                try {\n                    idInterval = setInterval(function () {\n                        detailIcon = that.$body.find(\"tr.detail-view\").last().find(\".detail-icon\");\n                        if (detailIcon.length > 0) {\n                            detailIcon.click();\n                        } else {\n                            clearInterval(idInterval);\n                        }\n                    }, 1);\n                } catch (ex) {\n                    clearInterval(idInterval);\n                }\n            }\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(true, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.collapseAllRows = function (isSubTable) {\n        if (isSubTable) {\n            this.expandRow_(false, 0);\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(false, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.updateFormatText = function (name, text) {\n        if (this.options[sprintf('format%s', name)]) {\n            if (typeof text === 'string') {\n                this.options[sprintf('format%s', name)] = function () {\n                    return text;\n                };\n            } else if (typeof text === 'function') {\n                this.options[sprintf('format%s', name)] = text;\n            }\n        }\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n    };\n\n    // BOOTSTRAP TABLE PLUGIN DEFINITION\n    // =======================\n\n    var allowedMethods = [\n        'getOptions',\n        'getSelections', 'getAllSelections', 'getData',\n        'load', 'append', 'prepend', 'remove', 'removeAll',\n        'insertRow', 'updateRow', 'updateCell', 'updateByUniqueId', 'removeByUniqueId',\n        'getRowByUniqueId', 'showRow', 'hideRow', 'getHiddenRows',\n        'mergeCells',\n        'checkAll', 'uncheckAll', 'checkInvert',\n        'check', 'uncheck',\n        'checkBy', 'uncheckBy',\n        'refresh',\n        'resetView',\n        'resetWidth',\n        'destroy',\n        'showLoading', 'hideLoading',\n        'showColumn', 'hideColumn', 'getHiddenColumns', 'getVisibleColumns',\n        'showAllColumns', 'hideAllColumns',\n        'filterBy',\n        'scrollTo',\n        'getScrollPosition',\n        'selectPage', 'prevPage', 'nextPage',\n        'togglePagination',\n        'toggleView',\n        'refreshOptions',\n        'resetSearch',\n        'expandRow', 'collapseRow', 'expandAllRows', 'collapseAllRows',\n        'updateFormatText'\n    ];\n\n    $.fn.bootstrapTable = function (option) {\n        var value,\n            args = Array.prototype.slice.call(arguments, 1);\n\n        this.each(function () {\n            var $this = $(this),\n                data = $this.data('bootstrap.table'),\n                options = $.extend({}, BootstrapTable.DEFAULTS, $this.data(),\n                    typeof option === 'object' && option);\n\n            if (typeof option === 'string') {\n                if ($.inArray(option, allowedMethods) < 0) {\n                    throw new Error(\"Unknown method: \" + option);\n                }\n\n                if (!data) {\n                    return;\n                }\n\n                value = data[option].apply(data, args);\n\n                if (option === 'destroy') {\n                    $this.removeData('bootstrap.table');\n                }\n            }\n\n            if (!data) {\n                $this.data('bootstrap.table', (data = new BootstrapTable(this, options)));\n            }\n        });\n\n        return typeof value === 'undefined' ? this : value;\n    };\n\n    $.fn.bootstrapTable.Constructor = BootstrapTable;\n    $.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS;\n    $.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS;\n    $.fn.bootstrapTable.locales = BootstrapTable.LOCALES;\n    $.fn.bootstrapTable.methods = allowedMethods;\n    $.fn.bootstrapTable.utils = {\n        sprintf: sprintf,\n        getFieldIndex: getFieldIndex,\n        compareObjects: compareObjects,\n        calculateObjectValue: calculateObjectValue,\n        getItemField: getItemField,\n        objectKeys: objectKeys,\n        isIEBrowser: isIEBrowser\n    };\n\n    // BOOTSTRAP TABLE INIT\n    // =======================\n\n    $(function () {\n        $('[data-toggle=\"table\"]').bootstrapTable();\n    });\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bootstrap-table/dist/bootstrap-table.js\n// module id = 260\n// module chunks = 0 1 2 4 6 7 8 9 12","/**\n * @author: Dennis Hernández\n * @webSite: http://djhvscf.github.io/Blog\n * @version: v1.1.0\n */\n\n!function ($) {\n\n    'use strict';\n\n    var showHideColumns = function (that, checked) {\n        if (that.options.columnsHidden.length > 0 ) {\n            $.each(that.columns, function (i, column) {\n                if (that.options.columnsHidden.indexOf(column.field) !== -1) {\n                    if (column.visible !== checked) {\n                        that.toggleColumn($.fn.bootstrapTable.utils.getFieldIndex(that.columns, column.field), checked, true);\n                    }\n                }\n            });\n        }\n    };\n\n    var resetView = function (that) {\n        if (that.options.height || that.options.showFooter) {\n            setTimeout(function(){\n                that.resetView.call(that);\n            }, 1);\n        }\n    };\n\n    var changeView = function (that, width, height) {\n        if (that.options.minHeight) {\n            if ((width <= that.options.minWidth) && (height <= that.options.minHeight)) {\n                conditionCardView(that);\n            } else if ((width > that.options.minWidth) && (height > that.options.minHeight)) {\n                conditionFullView(that);\n            }\n        } else {\n            if (width <= that.options.minWidth) {\n                conditionCardView(that);\n            } else if (width > that.options.minWidth) {\n                conditionFullView(that);\n            }\n        }\n\n        resetView(that);\n    };\n\n    var conditionCardView = function (that) {\n        changeTableView(that, false);\n        showHideColumns(that, false);\n    };\n\n    var conditionFullView = function (that) {\n        changeTableView(that, true);\n        showHideColumns(that, true);\n    };\n\n    var changeTableView = function (that, cardViewState) {\n        that.options.cardView = cardViewState;\n        that.toggleView();\n    };\n\n    var debounce = function(func,wait) {\n        var timeout;\n        return function() {\n            var context = this,\n                args = arguments;\n            var later = function() {\n                timeout = null;\n                func.apply(context,args);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, {\n        mobileResponsive: false,\n        minWidth: 562,\n        minHeight: undefined,\n        heightThreshold: 100, // just slightly larger than mobile chrome's auto-hiding toolbar\n        checkOnInit: true,\n        columnsHidden: []\n    });\n\n    var BootstrapTable = $.fn.bootstrapTable.Constructor,\n        _init = BootstrapTable.prototype.init;\n\n    BootstrapTable.prototype.init = function () {\n        _init.apply(this, Array.prototype.slice.apply(arguments));\n\n        if (!this.options.mobileResponsive) {\n            return;\n        }\n\n        if (!this.options.minWidth) {\n            return;\n        }\n\n        if (this.options.minWidth < 100 && this.options.resizable) {\n            console.log(\"The minWidth when the resizable extension is active should be greater or equal than 100\");\n            this.options.minWidth = 100;\n        }\n\n        var that = this,\n            old = {\n                width: $(window).width(),\n                height: $(window).height()\n            };\n\n        $(window).on('resize orientationchange',debounce(function (evt) {\n            // reset view if height has only changed by at least the threshold.\n            var height = $(this).height(),\n                width = $(this).width();\n\n            if (Math.abs(old.height - height) > that.options.heightThreshold || old.width != width) {\n                changeView(that, width, height);\n                old = {\n                    width: width,\n                    height: height\n                };\n            }\n        },200));\n\n        if (this.options.checkOnInit) {\n            var height = $(window).height(),\n                width = $(window).width();\n            changeView(this, width, height);\n            old = {\n                width: width,\n                height: height\n            };\n        }\n    };\n}(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bootstrap-table/dist/extensions/mobile/bootstrap-table-mobile.js\n// module id = 261\n// module chunks = 0 1 2 4 6 7 8 9 12","/**\n * Bootstrap Table Spanish (España) translation\n * Author: Antonio Pérez <anpegar@gmail.com>\n */\n (function ($) {\n    'use strict';\n    \n    $.fn.bootstrapTable.locales['es-SP'] = {\n        formatLoadingMessage: function () {\n            return 'Cargando, por favor espera...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return pageNumber + ' registros por p&#225;gina.';\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return pageFrom + ' - ' + pageTo + ' de ' + totalRows + ' registros.';\n        },\n        formatSearch: function () {\n            return 'Buscar';\n        },\n        formatNoMatches: function () {\n            return 'No se han encontrado registros.';\n        },\n        formatRefresh: function () {\n            return 'Actualizar';\n        },\n        formatToggle: function () {\n            return 'Alternar';\n        },\n        formatColumns: function () {\n            return 'Columnas';\n        },\n        formatAllRows: function () {\n            return 'Todo';\n        }\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales['es-SP']);\n\n})(jQuery);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP.js\n// module id = 262\n// module chunks = 0 1 2 4 6 7 8 9 12","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DataTable.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d9ec8fe2\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DataTable.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/src/modules/sharedComponents/DataTable.vue\n// module id = 263\n// module chunks = 1 2 4 6 8 9 12","<template lang=\"pug\">\n\n  table(:id=\"ids\", class=\"display\", cellspacing=\"0\", width=\"100%\")\n    thead\n    tbody\n</template>\n\n<script>\n  import 'bootstrap-table';\n  import '@/../../node_modules/bootstrap-table/dist/extensions/mobile/bootstrap-table-mobile';\n  import '@/../../node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP';\n\n  export default {\n    props: {\n      cols: {\n        type: Array\n      },\n      data: {\n        type: String\n      },\n      options: {\n        type: Object\n      },\n      ids: {\n        type: String\n      },\n      endpoint: {\n        type: String\n      },\n      parentId: {\n        type: String\n      },\n      toolbar: {\n        type: String\n      }\n    },\n    mounted() {\n      this.init();\n      this.refresh(this.data);\n    },\n    watch: {\n      data() {\n        this.refresh(this.data);\n        this.intialized = false;\n      }\n    },\n\n    methods: {\n\n      init() {\n        this.table = $(`#${this.ids}`);\n        this.$filter = $(`${this.parentId} .filter`);\n        this.activate();\n        this.listen();\n      },\n\n      activate(page) {\n        const self = this;\n        let search = true;\n        if (typeof self.options.search !== 'undefined') {\n          search = false;\n        }\n        this.table.bootstrapTable({\n          columns: self.cols,\n          sortOrder: 'asc',\n          search,\n          toolbar: self.toolbar,\n          showRefresh: false,\n          showColumns: false,\n          showExport: false,\n          minimumCountColumns: 2,\n          showPaginationSwitch: false,\n          pagination: true,\n          idField: 'id',\n          pageSize: self.options.pageSize || 50,\n          pageList: self.options.pageList || [10, 20, 50, 100, 2000],\n          showFooter: false,\n          clickToSelect: true,\n          singleSelect: true,\n          striped: false,\n          fixed: true,\n          footer: false,\n          mobileResponsive: true,\n          checkOnInit: true\n        });\n        this.table.find('tbody').css({ display: 'table-row-group' });\n        this.table.addClass('innertable');\n        this.$filter.change();\n        if (!this.intialized) {\n          this.initialized = true;\n          this.customSearch();\n          this.listen();\n        }\n        if (page) {\n          this.table.bootstrapTable('selectPage', page);\n        }\n      },\n\n      getSelectedRow(emit = true) {\n        const row = this.table.bootstrapTable('getSelections')[0];\n        if (emit) {\n          this.$emit('selected-row', row);\n        }\n        return row;\n      },\n\n      getId(emit = true) {\n        const self = this;\n        const id = $.map(this.table.bootstrapTable('getSelections'), row => row[self.idField]);\n        if (emit) {\n          this.$emit('id', id);\n        }\n        return id;\n      },\n\n      refresh(content) {\n        const options = this.table.bootstrapTable('getOptions');\n        this.table.bootstrapTable('destroy');\n        this.table.find('tbody').html(content);\n        this.activate(options.pageNumber);\n      },\n\n      listen() {\n        const self = this;\n        this.table.on('all.bs.table', (e, name, args) => {\n          if (name === 'check.bs.table' || name === 'uncheck.bs.table') {\n            const row = this.getSelectedRow();\n            self.$emit('check-uncheck', name, row, args);\n          } else if (name === 'click-cell.bs.table' && args[0] === 'estado') {\n            self.$emit('cell-clicked', name, args);\n          }\n        });\n\n        $(window).resize(() => {\n          self.table.bootstrapTable('resetView');\n        });\n      },\n\n      customSearch() {\n        $(`${this.parentId} .pull-right.search`).addClass('hide');\n        const $inputSearch = $(`${this.parentId} .search input`);\n\n        const self = this;\n        // eslint-disable-next-line\n        $inputSearch.on('click', function () {\n          const $this = $(this).parent();\n          $this.addClass('focus');\n        });\n        // eslint-disable-next-line\n        $inputSearch.on('blur', function () {\n          const $this = $(this).parent();\n          $this.removeClass('focus');\n        });\n        // eslint-disable-next-line\n        this.$filter.on('change', function () {\n          let filterWord = $(this).val();\n          if (filterWord === 'todo') {\n            filterWord = self.options.states;\n          }\n          self.applyFilter(filterWord);\n        });\n      },\n\n      applyFilter(filter) {\n        const self = this;\n        this.table.bootstrapTable('filterBy', {\n          [self.options.stateField]: filter\n        });\n        self.$emit('filter.bs');\n      }\n    }\n  };\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// resources/src/modules/sharedComponents/DataTable.vue","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/defineProperty.js\n// module id = 267\n// module chunks = 1 2 4 6 8 9 12","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"display\",attrs:{\"id\":_vm.ids,\"cellspacing\":\"0\",\"width\":\"100%\"}},[_c('thead'),_c('tbody')])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-d9ec8fe2\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/src/modules/sharedComponents/DataTable.vue\n// module id = 268\n// module chunks = 1 2 4 6 8 9 12","<template lang=\"pug\">\n  .wrapper\n    .left-navigation.col-md-2\n      .aside-nav-container\n        .left-navigation__header\n          h3.left-navigation__header-text {{ title }}\n        ul.aside-nav\n          li.aside-buttons\n            a(href=\"\" id=\"make-payment\",data-toggle=\"modal\", data-target=\"#router-modal\")\n              i.material-icons add\n              | Agregar Seccion\n\n    .main-content.col-md-10\n      #extra-table-container\n        .searcher-container.main-toolbar#extra-toolbar\n          .input-group.search\n            .input-group-addon: i.material-icons search\n            input.form-control.searcher(type=\"text\" placeholder=\"Buscar\",v-model=\"search.text\")\n          .pull-right\n            a.btn.icon.print-table(target=\"_blank\", :href=\"reportUrl\"): i.material-icons print\n          .pull-right\n            select#select-sector.btn.btn-primary(v-model=\"selectedId\", @change=\"getIps\")\n              option(:value=\"section.id\", v-for=\"section of sections\") {{ section.text }}\n          .pull-right\n            select#client-filter.form-group.filter.btn.btn-primary\n              option(:value=\"option.key\", v-for=\"option of options\") {{ option.text }}\n        DataTable(ids=\"extra-table\", :parentId=\"parentId\", :data=\"content\", :cols=\"cols\", :toolbar=\"toolbar\", :options=\"tableOptions\", @cell-clicked=\"stateChanges\")\n        RouterModal(:sector=\"sector\", :modal-mode=\"modalMode\", @save=\"save\")\n</template>\n\n<script>\n  import RouterModal from './components/RouterModal.vue';\n  import DataTable from './../sharedComponents/DataTable.vue';\n  import utils from './../sharedComponents/utils';\n  import Progress from './../sharedComponents/Progress';\n\n  const heavyLoad = new Progress('heavy');\n\n  export default {\n    components: {\n      DataTable,\n      RouterModal\n    },\n    mounted() {\n      this.getSectionList();\n      utils.spyLeftNavigation();\n    },\n    data() {\n      return {\n        title: 'Secciones',\n        parentId: '#extra-table-container',\n        toolbar: '#extra-toolbar',\n        content: '',\n        selectedId: '',\n        modalMode: 'add',\n        options: [\n          { key: 'todo', text: 'Todos' },\n          { key: 'ocupado', text: 'Ocupadas' },\n          { key: 'disponible', text: 'Disponibles' },\n          { key: 'sectorial', text: 'Sectoriales' }\n        ],\n        sections: [],\n        sector: {\n          nombre: '',\n          codigo_area: ''\n        },\n        tableOptions: {\n          pageSize: 200,\n          pageList: [50, 100, 200, 500, 1000],\n          states: ['ocupado', 'disponible', 'sectorial'],\n          stateField: 'estado'\n        },\n        search: {\n          text: '',\n          state: 'activo'\n        },\n        totales: {\n          pagado: 0,\n          pendiente: 0,\n          total_vendido: 0\n        },\n        tableId: '#extra-table-full'\n      };\n    },\n    methods: {\n      save() {\n        const empty = utils.isEmpty(this.sector);\n        if (!empty) {\n          heavyLoad.play();\n          this.$http.post(`section/${this.modalMode}`, this.getDataForm(this.sector))\n            .then((res) => {\n              this.showMessage(res.data.message);\n              if (res.data.message.type === 'success') {\n                this.sectorEmpty();\n                $('#router-modal').modal('hide');\n              }\n              heavyLoad.stop();\n              this.getIps();\n              window.appBus.$emit('transaction');\n              if (this.modalMode === 'edit') {\n                $('#router-modal').modal('hide');\n              }\n            })\n            .catch((err) => {\n              heavyLoad.stop();\n              this.$toasted.error(err);\n            });\n        } else {\n          this.$toasted.error('Revise y LLene todos los campos por favor');\n        }\n      },\n\n      getIps() {\n        if (this.selectedId) {\n          this.$http.post('section/get_ips', this.getDataForm({ id_section: this.selectedId }))\n            .then((res) => {\n              this.content = res.data.ips;\n            })\n            .catch((err) => {\n              this.$toasted.error(err);\n            });\n        }\n      },\n\n      updateIpState(IP) {\n        const form = `data=${JSON.stringify(IP)}&extra_info=${JSON.stringify({\n          module: 'ip'\n        })}`;\n        this.send('axiosupdate', form)\n          .then((res) => {\n            displayMessage(res.data.mensaje);\n          });\n      },\n\n      sectorEmpty() {\n        this.sectorEmpty = {\n          nombre: '',\n          codigo_area: ''\n        };\n      },\n\n      getSectionList() {\n        heavyLoad.play();\n        this.$http.get('section/get_sections/list')\n          .then((res) => {\n            this.sections = res.data.sections;\n            this.selectedId = this.sections[0].id;\n            this.getIps();\n            heavyLoad.stop();\n          });\n      },\n\n      updateState(code, state) {\n        this.$http.post('section/update_ip', this.getDataForm({ code, state }))\n          .then((res) => {\n            this.getIps();\n            this.showMessage(res.data.message);\n          })\n          .catch((err) => {\n            this.$toasted.error(err);\n          });\n      },\n\n      stateChanges(name, args) {\n        const self = this;\n        const { options } = this;\n        const theOptions = options.map(option => ((option.key !== 'todo') ? `<option value='${option.key}'> ${option.key}</value>` : ''));\n        const selectState = `<select>${theOptions.join('')}</select>`;\n        const select = $(selectState);\n        const $this = args[3];\n        const row = args[2];\n        let state = args[1];\n\n        $this.html(select);\n        select.focus();\n        select.val(state);\n        select.on('change blur', () => {\n          state = select.val();\n          $this.html(state);\n          $this.removeClass('text-danger text-success text-primary');\n          self.updateState(row.codigo, state);\n        });\n        select.on('click', (event) => {\n          event.stopImmediatePropagation();\n        });\n      }\n    },\n    computed: {\n      reportUrl() {\n        return `${baseURL}process/getreport/secciones/${this.selectedId}`;\n      },\n      cols() {\n        return [\n          {\n            field: 'num',\n            title: 'No.',\n            valign: 'middle',\n            align: 'center',\n            sortable: 'true'\n          },\n          {\n            checkbox: true,\n            field: 'checkbox',\n            title: '',\n            valign: 'middle',\n            align: 'center',\n            class: 'hide'\n          },\n          {\n            field: 'sector',\n            title: 'Sector',\n            valign: 'middle',\n            align: 'center',\n          },\n          {\n            field: 'codigo',\n            title: 'Codigo',\n            valign: 'middle',\n            align: 'center',\n            class: 'hide'\n          },\n          {\n            field: 'ip',\n            title: 'Direccion IP',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'estado',\n            title: 'Estado',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'acciones',\n            title: 'Acciones',\n            valign: 'middle',\n            align: 'center'\n          },\n        ];\n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// resources/src/modules/secciones/RouterSection.vue","var normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./RouterModal.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-23e52ed5\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./RouterModal.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./resources/src/modules/secciones/components/RouterModal.vue\n// module id = 509\n// module chunks = 9","<template lang=\"pug\">\n  .modal.fade#router-modal(tabindex=\"-1\", role=\"dialog\")\n    .modal-dialog(role=\"document\")\n      .modal-content\n        .modal-header\n          button(type=\"button\", class=\"close\", data-dismiss=\"modal\", aria-label=\"Close\"): span(aria-hidden=\"true\") &times;\n          h4.modal-title {{ modalTitle }}\n        .modal-body\n          form\n            .row\n              .col-md-12\n                .form-group\n                  label(for=\"#sector-name\") Nombre Sector\n                  input.form-control#secto-name(type=\"text\", v-model=\"sector.nombre\", placeholder=\"nombre sector\")\n                .form-group\n                  label(for=\"#sector-code\") Codigo\n                  input.form-control#sector-code(type=\"number\", v-model=\"sector.codigo_area\", placeholder=\"41\")\n              .col-md-12\n        .modal-footer\n          button(type=\"button\", class=\"btn\", data-dismiss=\"modal\") Cancelar\n          button(type=\"button\", class=\"btn save\", id=\"btn-sector__save\", @click=\"save\") Guardar\n</template>\n\n<script>\n  export default {\n    props: {\n      sector: {\n        type: Object\n      },\n      modalMode: {\n        type: String\n      }\n    },\n\n    mounted() {\n      $('#router-modal').on('hide.bs.modal', () => {\n        this.$emit('dimiss');\n      });\n    },\n\n    methods: {\n      save() {\n        this.$emit('save');\n      }\n    },\n\n    computed: {\n      modalTitle() {\n        let title;\n\n        switch (this.modalMode) {\n          case 'add':\n            title = 'Nuevo Sector';\n            break;\n          case 'edit':\n            title = 'Editar Sector';\n            break;\n          default:\n          // nothing\n            break;\n        }\n        return title;\n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// resources/src/modules/secciones/components/RouterModal.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade\",attrs:{\"id\":\"router-modal\",\"tabindex\":\"-1\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_vm._m(0,false,false),_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.modalTitle))])]),_c('div',{staticClass:\"modal-body\"},[_c('form',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"#sector-name\"}},[_vm._v(\"Nombre Sector\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sector.nombre),expression:\"sector.nombre\"}],staticClass:\"form-control\",attrs:{\"id\":\"secto-name\",\"type\":\"text\",\"placeholder\":\"nombre sector\"},domProps:{\"value\":(_vm.sector.nombre)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sector, \"nombre\", $event.target.value)}}})]),_c('div',{staticClass:\"form-group\"},[_c('label',{attrs:{\"for\":\"#sector-code\"}},[_vm._v(\"Codigo\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sector.codigo_area),expression:\"sector.codigo_area\"}],staticClass:\"form-control\",attrs:{\"id\":\"sector-code\",\"type\":\"number\",\"placeholder\":\"41\"},domProps:{\"value\":(_vm.sector.codigo_area)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.sector, \"codigo_area\", $event.target.value)}}})])]),_c('div',{staticClass:\"col-md-12\"})])])]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"Cancelar\")]),_c('button',{staticClass:\"btn save\",attrs:{\"type\":\"button\",\"id\":\"btn-sector__save\"},on:{\"click\":_vm.save}},[_vm._v(\"Guardar\")])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-23e52ed5\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/src/modules/secciones/components/RouterModal.vue\n// module id = 511\n// module chunks = 9","export default class Progress {\n  constructor(type, text = 'Cargando ...') {\n    this.type = type;\n    this.content = `\n    <div class=\"heavy-loader active\">\n      <div class=\"circle-load\"></div>\n      <div class=\"message\"> ${text}</div>\n    </div>`;\n    this.$heavy = null;\n    this.$body = $('body');\n    this.$line = $('.loader');\n  }\n\n  play() {\n    this.stop();\n    if (this.type === 'heavy') {\n      $('body').append(this.content);\n      this.$heavy = $('.heavy-loader');\n      $('body').css({ overflow: 'hidden' });\n    } else {\n      $('.loader').css({\n        display: 'block'\n      });\n    }\n  }\n\n  stop() {\n    if (this.type === 'heavy' && this.$heavy) {\n      this.$heavy.remove();\n      $('body').css({ overflow: 'auto' });\n    } else {\n      $('.loader').css({ display: 'none' });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./resources/src/modules/sharedComponents/Progress.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"left-navigation col-md-2\"},[_c('div',{staticClass:\"aside-nav-container\"},[_c('div',{staticClass:\"left-navigation__header\"},[_c('h3',{staticClass:\"left-navigation__header-text\"},[_vm._v(_vm._s(_vm.title))])]),_vm._m(0,false,false)])]),_c('div',{staticClass:\"main-content col-md-10\"},[_c('div',{attrs:{\"id\":\"extra-table-container\"}},[_c('div',{staticClass:\"searcher-container main-toolbar\",attrs:{\"id\":\"extra-toolbar\"}},[_c('div',{staticClass:\"input-group search\"},[_vm._m(1,false,false),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search.text),expression:\"search.text\"}],staticClass:\"form-control searcher\",attrs:{\"type\":\"text\",\"placeholder\":\"Buscar\"},domProps:{\"value\":(_vm.search.text)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.search, \"text\", $event.target.value)}}})]),_c('div',{staticClass:\"pull-right\"},[_c('a',{staticClass:\"btn icon print-table\",attrs:{\"target\":\"_blank\",\"href\":_vm.reportUrl}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"print\")])])]),_c('div',{staticClass:\"pull-right\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedId),expression:\"selectedId\"}],staticClass:\"btn btn-primary\",attrs:{\"id\":\"select-sector\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.selectedId=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.getIps]}},_vm._l((_vm.sections),function(section){return _c('option',{domProps:{\"value\":section.id}},[_vm._v(_vm._s(section.text))])}))]),_c('div',{staticClass:\"pull-right\"},[_c('select',{staticClass:\"form-group filter btn btn-primary\",attrs:{\"id\":\"client-filter\"}},_vm._l((_vm.options),function(option){return _c('option',{domProps:{\"value\":option.key}},[_vm._v(_vm._s(option.text))])}))])]),_c('DataTable',{attrs:{\"ids\":\"extra-table\",\"parentId\":_vm.parentId,\"data\":_vm.content,\"cols\":_vm.cols,\"toolbar\":_vm.toolbar,\"options\":_vm.tableOptions},on:{\"cell-clicked\":_vm.stateChanges}}),_c('RouterModal',{attrs:{\"sector\":_vm.sector,\"modal-mode\":_vm.modalMode},on:{\"save\":_vm.save}})],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:\"aside-nav\"},[_c('li',{staticClass:\"aside-buttons\"},[_c('a',{attrs:{\"href\":\"\",\"id\":\"make-payment\",\"data-toggle\":\"modal\",\"data-target\":\"#router-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"add\")]),_vm._v(\"Agregar Seccion\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-addon\"},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"search\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1988f582\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./resources/src/modules/secciones/RouterSection.vue\n// module id = 513\n// module chunks = 9"],"sourceRoot":""}