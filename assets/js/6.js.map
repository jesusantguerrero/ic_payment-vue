{"version":3,"sources":["webpack:///assets/js/6.js","webpack:///src/modules/extras/ExtraSection.vue","webpack:///./src/modules/extras/ExtraSection.vue?4bc9","webpack:///./src/modules/extras/ExtraSection.vue","webpack:///./src/modules/sharedComponents/DataTable.vue","webpack:///src/modules/sharedComponents/DataTable.vue","webpack:///./node_modules/bootstrap-table/dist/bootstrap-table.js","webpack:///./node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP.js","webpack:///./src/modules/sharedComponents/DataTable.vue?0c45"],"names":["webpackJsonp","151","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__sharedComponents_DataTable_vue__","__WEBPACK_IMPORTED_MODULE_1__sharedComponents_utils__","__WEBPACK_IMPORTED_MODULE_1__sharedComponents_utils___default","n","components","DataTable","mounted","this","getExtras","a","spyLeftNavigation","data","title","parentId","toolbar","content","options","key","text","tableOptions","pageSize","pageList","states","stateField","search","state","totales","pagado","pendiente","total_vendido","tableId","methods","_this","$http","post","getDataForm","then","res","computed","cols","field","valign","align","class","checkbox","152","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","attrs","href","id","on","click","$event","preventDefault","sendTo","_m","directives","name","rawName","value","expression","type","placeholder","domProps","keypress","_k","keyCode","stopPropagation","input","target","composing","$set","_l","option","ids","_f","staticRenderFns","esExports","81","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ExtraSection_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6a4db7fb_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_ExtraSection_vue__","normalizeComponent","Component","84","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_357e043f_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__","85","_defineProperty","obj","enumerable","configurable","writable","__WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__","props","Array","String","endpoint","init","refresh","watch","intialized","table","$","$filter","activate","listen","page","self","bootstrapTable","columns","sortOrder","showRefresh","showColumns","showExport","minimumCountColumns","showPaginationSwitch","pagination","idField","showFooter","clickToSelect","singleSelect","striped","fixed","footer","find","css","display","addClass","change","initialized","customSearch","getSelectedRow","emit","arguments","length","undefined","row","$emit","getId","map","html","pageNumber","e","args","window","resize","$inputSearch","parent","removeClass","filterWord","val","applyFilter","filter","86","cachedWidth","sprintf","str","flag","i","replace","arg","getPropertyFromOther","list","from","to","result","each","item","getFieldIndex","index","column","setFieldIndex","j","k","totalCol","colspan","r","rowspan","inArray","fieldIndex","getScrollBarWidth","w1","w2","inner","outer","append","offsetWidth","clientWidth","remove","calculateObjectValue","defaultValue","func","names","split","f","apply","concat","compareObjects","objectA","objectB","compareLength","objectAProperties","getOwnPropertyNames","objectBProperties","propName","escapeHTML","getRealDataAttr","dataAttr","attr","auxAttr","join","toLowerCase","getItemField","escape","hasOwnProperty","p","isIEBrowser","navigator","userAgent","indexOf","match","objectKeys","keys","prototype","hasDontEnumBug","toString","propertyIsEnumerable","dontEnums","dontEnumsLength","TypeError","prop","call","push","BootstrapTable","el","$el","$el_","clone","timeoutId_","timeoutFooter_","DEFAULTS","classes","sortClass","locale","height","undefinedText","sortName","sortStable","totalField","dataField","method","url","ajax","cache","contentType","dataType","ajaxOptions","queryParams","params","queryParamsType","responseHandler","onlyInfoPagination","paginationLoop","sidePagination","totalRows","paginationHAlign","paginationVAlign","paginationDetailHAlign","paginationPreText","paginationNextText","searchOnEnterKey","strictSearch","searchAlign","selectItemName","showHeader","showToggle","buttonsAlign","smartDisplay","uniqueId","cardView","detailView","detailFormatter","trimOnSearch","toolbarAlign","checkboxHeader","sortable","silentSort","maintainSelected","searchTimeOut","searchText","iconSize","buttonsClass","iconsPrefix","icons","paginationSwitchDown","paginationSwitchUp","toggle","detailOpen","detailClose","noop","customSort","rowStyle","rowAttributes","footerStyle","onAll","onClickCell","$element","onDblClickCell","onClickRow","onDblClickRow","onSort","order","onCheck","onUncheck","onCheckAll","rows","onUncheckAll","onCheckSome","onUncheckSome","onLoadSuccess","onLoadError","status","onColumnSwitch","checked","onPageChange","number","size","onSearch","onToggle","onPreBody","onPostBody","onPostHeader","onExpandRow","$detail","onCollapseRow","onRefreshOptions","onRefresh","onResetView","LOCALES","en","formatLoadingMessage","formatRecordsPerPage","formatShowingRows","pageFrom","pageTo","formatDetailPagination","formatSearch","formatNoMatches","formatPaginationSwitch","formatRefresh","formatToggle","formatColumns","formatAllRows","extend","COLUMN_DEFAULTS","radio","checkboxEnabled","titleTooltip","halign","falign","width","visible","switchable","formatter","footerFormatter","events","sorter","cellStyle","searchable","searchFormatter","cardVisible","EVENTS","all.bs.table","click-cell.bs.table","dbl-click-cell.bs.table","click-row.bs.table","dbl-click-row.bs.table","sort.bs.table","check.bs.table","uncheck.bs.table","check-all.bs.table","uncheck-all.bs.table","check-some.bs.table","uncheck-some.bs.table","load-success.bs.table","load-error.bs.table","column-switch.bs.table","page-change.bs.table","search.bs.table","toggle.bs.table","pre-body.bs.table","post-body.bs.table","post-header.bs.table","expand-row.bs.table","collapse-row.bs.table","refresh-options.bs.table","reset-view.bs.table","refresh.bs.table","initLocale","initContainer","initTable","initHeader","initData","initHiddenRows","initFooter","initToolbar","initPagination","initBody","initSearchText","initServer","parts","toUpperCase","fn","locales","$container","insertAfter","$tableContainer","$tableHeader","$tableBody","$tableLoading","$tableFooter","$toolbar","$pagination","after","that","$header","appendTo","isArray","m","y","_id","_class","_data","x","tx","ty","$this","cspan","rspan","fromHtml","visibleColumns","header","fields","styles","formatters","sorters","sortNames","cellStyles","searchables","style","class_","unitWidth","off","event","closest","children","which","hide","show","outerHeight","getCaret","proxy","resetWidth","$selectAll","updateSelected","initSort","timeoutId","_position","sort","b","aa","bb","isNumeric","parseFloat","localeCompare","clearTimeout","setTimeout","currentTarget","$this_","eq","add","$header_","trigger","$keepOpen","$search","switchableCount","showToolbar","togglePagination","toggleView","stopImmediatePropagation","toggleColumn","trim","initSearch","updatePagination","s","isEmptyObject","filterColumns","grep","parseInt","prop_index","$pageList","$first","$pre","$next","$last","$number","$allSelected","getData","totalPages","pageLst","active","onPageListChange","onPageFirst","onPagePre","onPageNext","onPageLast","onPageNumber","hasClass","resetRows","siblings","initRow","parentDom","csses","data_","attributes","htmlAttributes","hiddenRows","v","value_","id_","rowspan_","colspan_","title_","csses_","disabled","fixedScroll","$body","hasTr","trFragments","document","createDocumentFragment","tr","scrollTo","$td","$tr","cellIndex","getVisibleFields","$selectItem","next","is","resetView","not","substring","silent","query","request","offset","limit","filterColumnsPartial","JSON","stringify","success","load","error","_xhr","readyState","abort","th","checkAll","$selectAll_","updateRows","slice","Event","resetHeader","fitHeader","fixedBody","scrollWidth","focused","focusedTemp","get","scrollHeight","clientHeight","$th","parents","$headerTh","margin-right","outerWidth","focus","visibleFields","$ths","innerWidth","scrollLeft","resetFooter","fitFooter","$footerTd","elWidth","needUpdate","$items","padding","toolbarHeight","paginationHeight","useCurrentPage","prepend","len","values","splice","removeAll","getRowByUniqueId","rowUniqueId","dataRow","Number","removeByUniqueId","updateByUniqueId","allParams","rowId","insertRow","updateRow","showRow","toggleRow","hideRow","getHiddenRows","mergeCells","col","updateCell","reinit","getOptions","getSelections","getAllSelections","checkAll_","uncheckAll","checkInvert","check","check_","uncheck","checkBy","checkBy_","uncheckBy","destroy","insertBefore","showLoading","hideLoading","button","showColumn","hideColumn","getHiddenColumns","getVisibleColumns","toggleAllColumns","showAllColumns","hideAllColumns","filterBy","scrollTop","getScrollPosition","selectPage","prevPage","nextPage","refreshOptions","resetSearch","expandRow_","expand","expandRow","collapseRow","expandAllRows","isSubTable","detailIcon","executeInterval","idInterval","setInterval","last","clearInterval","ex","trs","collapseAllRows","updateFormatText","allowedMethods","Error","removeData","Constructor","defaults","columnDefaults","utils","jQuery","87","exports","88","cellspacing"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACqB,IAAIC,GAAgED,EAAoB,IACpFE,EAAwDF,EAAoB,GAC5EG,EAAgEH,EAAoBI,EAAEF,EC2B/GH,GAAA,GDUEM,YCNFC,UAAAL,EAAA,GDSEM,QAAS,WACPC,KCRJC,YDSIN,EAA8DO,ECRlEC,qBDUEC,KAAM,WACJ,OACEC,MCRN,SDSMC,SCRN,yBDSMC,QCRN,iBDSMC,QCRN,GDSMC,UCRNC,IAAA,OAAAC,KACA,UAAAD,IAAA,UAAAC,KACA,aAAAD,IAAA,SAAAC,KAEA,YDKMC,cACEC,SCJR,IDKQC,UAAW,GAAI,IAAK,IAAK,ICJjC,KDKQC,QAAS,UCJjB,UDKQC,WCHR,UDKMC,QACEN,KCJR,GDKQO,MCHR,UDKMC,SACEC,OCJR,EDKQC,UCJR,EDKQC,cCHR,GDKMC,QCHN,sBDOEC,SACEvB,UAAW,WCLf,GAAAwB,GAAAzB,IDQMA,MAAK0B,MAAMC,KAAK,gBAAiB3B,KAAK4B,YAAY5B,KCPxDiB,SAAAY,KAAA,SAAAC,GDQQL,EAAMjB,QAAUsB,EAAI1B,KCN5BI,QDOQiB,EAAMN,QAAUW,EAAI1B,KCN5Be,YDWEY,UACEC,KAAM,WACJ,QACEC,MCLR,WDMQ5B,MCLR,GDMQ6B,OCLR,SDMQC,MCJR,WDMQF,MCJR,KDKQ5B,MCJR,MDKQ6B,OCJR,SDKQC,MCJR,SDKQC,MCHR,SDKQH,MCHR,cDIQ5B,MCHR,UDIQ6B,OCHR,SDIQC,MCHR,SDIQC,MCFR,SDIQH,MCFR,UDGQ5B,MCFR,UDGQ6B,OCFR,SDGQC,MCDR,WDGQE,UCDR,EDEQJ,MCDR,WDEQ5B,MCDR,GDEQ6B,OCDR,SDEQC,MCDR,SDEQC,MCAR,SDEQH,MCAR,QDCQ5B,MCAR,QDCQ6B,OCAR,SDCQC,MCCR,WDCQF,MCCR,WDAQ5B,MCCR,WDAQ6B,OCCR,SDAQC,MCER,WDAQF,MCER,cDDQ5B,MCER,cDDQ6B,OCER,SDDQC,MCGR,WDDQF,MCGR,eDFQ5B,MCGR,eDFQ6B,OCGR,SDFQC,MCIR,WDFQF,MCIR,QDHQ5B,MCIR,YDHQ6B,OCIR,SDHQC,MCKR,WDHQF,MCK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","file":"assets/js/6.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 151:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sharedComponents_DataTable_vue__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sharedComponents_utils__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sharedComponents_utils___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__sharedComponents_utils__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  components: {\n    DataTable: __WEBPACK_IMPORTED_MODULE_0__sharedComponents_DataTable_vue__[\"a\" /* default */]\n  },\n  mounted: function mounted() {\n    this.getExtras();\n    __WEBPACK_IMPORTED_MODULE_1__sharedComponents_utils___default.a.spyLeftNavigation();\n  },\n  data: function data() {\n    return {\n      title: 'Extras',\n      parentId: '#extra-table-container',\n      toolbar: '#extra-toolbar',\n      content: '',\n      options: [{ key: 'todo', text: 'Todos' }, { key: 'saldado', text: 'Saldados' }, { key: 'activo', text: 'Activos' }],\n      tableOptions: {\n        pageSize: 200,\n        pageList: [50, 100, 200, 500, 1000],\n        states: ['saldado', 'activo'],\n        stateField: 'estado'\n      },\n      search: {\n        text: '',\n        state: 'activo'\n      },\n      totales: {\n        pagado: 0,\n        pendiente: 0,\n        total_vendido: 0\n      },\n      tableId: '#extra-table-full'\n    };\n  },\n\n  methods: {\n    getExtras: function getExtras() {\n      var _this = this;\n\n      this.$http.post('extra/get_all', this.getDataForm(this.search)).then(function (res) {\n        _this.content = res.data.content;\n        _this.totales = res.data.totales;\n      });\n    }\n  },\n\n  computed: {\n    cols: function cols() {\n      return [{\n        field: 'controls',\n        title: '',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'id',\n        title: 'COD',\n        valign: 'middle',\n        align: 'center',\n        class: 'hide'\n      }, {\n        field: 'id_servicio',\n        title: 'COR_SER',\n        valign: 'middle',\n        align: 'center',\n        class: 'hide'\n      }, {\n        field: 'cliente',\n        title: 'Cliente',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        checkbox: true,\n        field: 'checkbox',\n        title: '',\n        valign: 'middle',\n        align: 'center',\n        class: 'hide'\n      }, {\n        field: 'fecha',\n        title: 'Fecha',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'concepto',\n        title: 'Concepto',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'ultimo_pago',\n        title: 'Ultimo Pago',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'monto_pagado',\n        title: 'Monto Pagado',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'deuda',\n        title: 'Pendiente',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'monto_total',\n        title: 'Monto Total',\n        valign: 'middle',\n        align: 'center'\n      }, {\n        field: 'estado',\n        title: 'Estado',\n        valign: 'middle',\n        align: 'center'\n      }];\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 152:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"left-navigation col-md-2\"},[_c('div',{staticClass:\"aside-nav-container\"},[_c('div',{staticClass:\"left-navigation__header\"},[_c('h3',{staticClass:\"left-navigation__header-text\"},[_vm._v(_vm._s(_vm.title))])]),_c('ul',{staticClass:\"aside-nav\"},[_c('li',{staticClass:\"aside-buttons\"},[_c('a',{attrs:{\"href\":\"\",\"id\":\"make-payment\"},on:{\"click\":function($event){$event.preventDefault();_vm.sendTo('new_contract')}}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"monetization_on\")]),_vm._v(\"Registrar Pago\")])])])])]),_c('div',{staticClass:\"main-content col-md-10\"},[_c('div',{attrs:{\"id\":\"extra-table-container\"}},[_c('div',{staticClass:\"searcher-container main-toolbar\",attrs:{\"id\":\"extra-toolbar\"}},[_c('div',{staticClass:\"input-group search\"},[_vm._m(0,false,false),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search.text),expression:\"search.text\"}],staticClass:\"form-control searcher\",attrs:{\"type\":\"text\",\"placeholder\":\"Buscar por cliente\"},domProps:{\"value\":(_vm.search.text)},on:{\"keypress\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key)){ return null; }$event.stopPropagation();_vm.getExtras($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.search, \"text\", $event.target.value)}}})]),_vm._m(1,false,false),_c('div',{staticClass:\"pull-right\"},[_c('select',{staticClass:\"form-group filter btn btn-primary\",attrs:{\"id\":\"client-filter\"}},_vm._l((_vm.options),function(option){return _c('option',{domProps:{\"value\":option.key}},[_vm._v(_vm._s(option.text))])}))])]),_c('DataTable',{attrs:{\"ids\":\"extra-table\",\"parentId\":_vm.parentId,\"data\":_vm.content,\"cols\":_vm.cols,\"toolbar\":_vm.toolbar,\"options\":_vm.tableOptions}}),_c('div',{staticClass:\"mini-card total\"},[_c('h5',[_vm._v(\"Vendido : \"+_vm._s(_vm._f(\"currencyFormat\")(_vm.totales.total_vendido)))]),_c('h5',{staticClass:\"text-success\"},[_vm._v(\"Pagado : RD$ \"+_vm._s(_vm._f(\"currencyFormat\")(_vm.totales.pagado)))]),_c('h5',[_vm._v(\"--------------------\")]),_c('h5',{staticClass:\"text-danger\"},[_vm._v(\"Pendiente : RD$ \"+_vm._s(_vm._f(\"currencyFormat\")(_vm.totales.pendiente)))])])],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-addon\"},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"search\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pull-right\"},[_c('a',{staticClass:\"btn icon print-table\",attrs:{\"target\":\"_blank\",\"href\":\"process/getreport/clientes'\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"print\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 81:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ExtraSection_vue__ = __webpack_require__(151);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6a4db7fb_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_ExtraSection_vue__ = __webpack_require__(152);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_ExtraSection_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6a4db7fb_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_ExtraSection_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 84:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_357e043f_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__ = __webpack_require__(88);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_357e043f_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bootstrap_table__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    cols: {\n      type: Array\n    },\n    data: {\n      type: String\n    },\n    options: {\n      type: Object\n    },\n    ids: {\n      type: String\n    },\n    endpoint: {\n      type: String\n    },\n    parentId: {\n      type: String\n    },\n    toolbar: {\n      type: String\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.refresh(this.data);\n  },\n\n  watch: {\n    data: function data() {\n      this.refresh(this.data);\n      this.intialized = false;\n    }\n  },\n\n  methods: {\n    init: function init() {\n      this.table = $('#' + this.ids);\n      this.$filter = $(this.parentId + ' .filter');\n      this.activate();\n      this.listen();\n    },\n    activate: function activate(page) {\n      var self = this;\n      this.table.bootstrapTable({\n        columns: self.cols,\n        sortOrder: 'asc',\n        search: 'true',\n        toolbar: self.toolbar,\n        showRefresh: false,\n        showColumns: false,\n        showExport: false,\n        minimumCountColumns: 2,\n        showPaginationSwitch: false,\n        pagination: true,\n        idField: 'id',\n        pageSize: self.options.pageSize || 50,\n        pageList: self.options.pageList || [10, 20, 50, 100, 2000],\n        showFooter: false,\n        clickToSelect: true,\n        singleSelect: true,\n        striped: false,\n        fixed: true,\n        footer: false\n      });\n      this.table.find('tbody').css({ display: 'table-row-group' });\n      this.table.addClass('innertable');\n      this.$filter.change();\n      if (!this.intialized) {\n        this.initialized = true;\n        this.customSearch();\n        this.listen();\n      }\n      if (page) {\n        this.table.bootstrapTable('selectPage', page);\n      }\n    },\n    getSelectedRow: function getSelectedRow() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var row = this.table.bootstrapTable('getSelections')[0];\n      if (emit) {\n        this.$emit('selected-row', row);\n      }\n      return row;\n    },\n    getId: function getId() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var self = this;\n      var id = $.map(this.table.bootstrapTable('getSelections'), function (row) {\n        return row[self.idField];\n      });\n      if (emit) {\n        this.$emit('id', id);\n      }\n      return id;\n    },\n    refresh: function refresh(content) {\n      var options = this.table.bootstrapTable('getOptions');\n      this.table.bootstrapTable('destroy');\n      this.table.find('tbody').html(content);\n      this.activate(options.pageNumber);\n    },\n    listen: function listen() {\n      var _this = this;\n\n      var self = this;\n      this.table.on('all.bs.table', function (e, name, args) {\n        if (name === 'check.bs.table' || name === 'uncheck.bs.table') {\n          var row = _this.getSelectedRow();\n          self.$emit('check-uncheck', name, row, args);\n        } else if (name === 'click-cell.bs.table' && args[0] === 'estado') {\n          self.$emit('cell-clicked', name, args);\n        }\n      });\n\n      $(window).resize(function () {\n        self.table.bootstrapTable('resetView');\n      });\n    },\n    customSearch: function customSearch() {\n      $(this.parentId + ' .pull-right.search').addClass('hide');\n      var $inputSearch = $(this.parentId + ' .search input');\n\n      var self = this;\n      // eslint-disable-next-line\n      $inputSearch.on('click', function () {\n        var $this = $(this).parent();\n        $this.addClass('focus');\n      });\n      // eslint-disable-next-line\n      $inputSearch.on('blur', function () {\n        var $this = $(this).parent();\n        $this.removeClass('focus');\n      });\n      // eslint-disable-next-line\n      this.$filter.on('change', function () {\n        var filterWord = $(this).val();\n        if (filterWord === 'todo') {\n          filterWord = self.options.states;\n        }\n        self.applyFilter(filterWord);\n      });\n    },\n    applyFilter: function applyFilter(filter) {\n      var self = this;\n      this.table.bootstrapTable('filterBy', _defineProperty({}, self.options.stateField, filter));\n      self.$emit('filter.bs');\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.11.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\n/* unused harmony default export */ var _unused_webpack_default_export = ((function ($) {\n    'use strict';\n\n    // TOOLS DEFINITION\n    // ======================\n\n    var cachedWidth = null;\n\n    // it only does '%s', and return '' when arguments are undefined\n    var sprintf = function (str) {\n        var args = arguments,\n            flag = true,\n            i = 1;\n\n        str = str.replace(/%s/g, function () {\n            var arg = args[i++];\n\n            if (typeof arg === 'undefined') {\n                flag = false;\n                return '';\n            }\n            return arg;\n        });\n        return flag ? str : '';\n    };\n\n    var getPropertyFromOther = function (list, from, to, value) {\n        var result = '';\n        $.each(list, function (i, item) {\n            if (item[from] === value) {\n                result = item[to];\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n\n    var getFieldIndex = function (columns, field) {\n        var index = -1;\n\n        $.each(columns, function (i, column) {\n            if (column.field === field) {\n                index = i;\n                return false;\n            }\n            return true;\n        });\n        return index;\n    };\n\n    // http://jsfiddle.net/wenyi/47nz7ez9/3/\n    var setFieldIndex = function (columns) {\n        var i, j, k,\n            totalCol = 0,\n            flag = [];\n\n        for (i = 0; i < columns[0].length; i++) {\n            totalCol += columns[0][i].colspan || 1;\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            flag[i] = [];\n            for (j = 0; j < totalCol; j++) {\n                flag[i][j] = false;\n            }\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            for (j = 0; j < columns[i].length; j++) {\n                var r = columns[i][j],\n                    rowspan = r.rowspan || 1,\n                    colspan = r.colspan || 1,\n                    index = $.inArray(false, flag[i]);\n\n                if (colspan === 1) {\n                    r.fieldIndex = index;\n                    // when field is undefined, use index instead\n                    if (typeof r.field === 'undefined') {\n                        r.field = index;\n                    }\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    flag[i + k][index] = true;\n                }\n                for (k = 0; k < colspan; k++) {\n                    flag[i][index + k] = true;\n                }\n            }\n        }\n    };\n\n    var getScrollBarWidth = function () {\n        if (cachedWidth === null) {\n            var inner = $('<p/>').addClass('fixed-table-scroll-inner'),\n                outer = $('<div/>').addClass('fixed-table-scroll-outer'),\n                w1, w2;\n\n            outer.append(inner);\n            $('body').append(outer);\n\n            w1 = inner[0].offsetWidth;\n            outer.css('overflow', 'scroll');\n            w2 = inner[0].offsetWidth;\n\n            if (w1 === w2) {\n                w2 = outer[0].clientWidth;\n            }\n\n            outer.remove();\n            cachedWidth = w1 - w2;\n        }\n        return cachedWidth;\n    };\n\n    var calculateObjectValue = function (self, name, args, defaultValue) {\n        var func = name;\n\n        if (typeof name === 'string') {\n            // support obj.func1.func2\n            var names = name.split('.');\n\n            if (names.length > 1) {\n                func = window;\n                $.each(names, function (i, f) {\n                    func = func[f];\n                });\n            } else {\n                func = window[name];\n            }\n        }\n        if (typeof func === 'object') {\n            return func;\n        }\n        if (typeof func === 'function') {\n            return func.apply(self, args || []);\n        }\n        if (!func && typeof name === 'string' && sprintf.apply(this, [name].concat(args))) {\n            return sprintf.apply(this, [name].concat(args));\n        }\n        return defaultValue;\n    };\n\n    var compareObjects = function (objectA, objectB, compareLength) {\n        // Create arrays of property names\n        var objectAProperties = Object.getOwnPropertyNames(objectA),\n            objectBProperties = Object.getOwnPropertyNames(objectB),\n            propName = '';\n\n        if (compareLength) {\n            // If number of properties is different, objects are not equivalent\n            if (objectAProperties.length !== objectBProperties.length) {\n                return false;\n            }\n        }\n\n        for (var i = 0; i < objectAProperties.length; i++) {\n            propName = objectAProperties[i];\n\n            // If the property is not in the object B properties, continue with the next property\n            if ($.inArray(propName, objectBProperties) > -1) {\n                // If values of same property are not equal, objects are not equivalent\n                if (objectA[propName] !== objectB[propName]) {\n                    return false;\n                }\n            }\n        }\n\n        // If we made it this far, objects are considered equivalent\n        return true;\n    };\n\n    var escapeHTML = function (text) {\n        if (typeof text === 'string') {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;')\n                .replace(/`/g, '&#x60;');\n        }\n        return text;\n    };\n\n    var getRealDataAttr = function (dataAttr) {\n        for (var attr in dataAttr) {\n            var auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase();\n            if (auxAttr !== attr) {\n                dataAttr[auxAttr] = dataAttr[attr];\n                delete dataAttr[attr];\n            }\n        }\n\n        return dataAttr;\n    };\n\n    var getItemField = function (item, field, escape) {\n        var value = item;\n\n        if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n            return escape ? escapeHTML(item[field]) : item[field];\n        }\n        var props = field.split('.');\n        for (var p in props) {\n            if (props.hasOwnProperty(p)) {\n                value = value && value[props[p]];\n            }\n        }\n        return escape ? escapeHTML(value) : value;\n    };\n\n    var isIEBrowser = function () {\n        return !!(navigator.userAgent.indexOf(\"MSIE \") > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./));\n    };\n\n    var objectKeys = function () {\n        // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n                    dontEnums = [\n                        'toString',\n                        'toLocaleString',\n                        'valueOf',\n                        'hasOwnProperty',\n                        'isPrototypeOf',\n                        'propertyIsEnumerable',\n                        'constructor'\n                    ],\n                    dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    var result = [], prop, i;\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n                    return result;\n                };\n            }());\n        }\n    };\n\n    // BOOTSTRAP TABLE CLASS DEFINITION\n    // ======================\n\n    var BootstrapTable = function (el, options) {\n        this.options = options;\n        this.$el = $(el);\n        this.$el_ = this.$el.clone();\n        this.timeoutId_ = 0;\n        this.timeoutFooter_ = 0;\n\n        this.init();\n    };\n\n    BootstrapTable.DEFAULTS = {\n        classes: 'table table-hover',\n        sortClass: undefined,\n        locale: undefined,\n        height: undefined,\n        undefinedText: '-',\n        sortName: undefined,\n        sortOrder: 'asc',\n        sortStable: false,\n        striped: false,\n        columns: [[]],\n        data: [],\n        totalField: 'total',\n        dataField: 'rows',\n        method: 'get',\n        url: undefined,\n        ajax: undefined,\n        cache: true,\n        contentType: 'application/json',\n        dataType: 'json',\n        ajaxOptions: {},\n        queryParams: function (params) {\n            return params;\n        },\n        queryParamsType: 'limit', // undefined\n        responseHandler: function (res) {\n            return res;\n        },\n        pagination: false,\n        onlyInfoPagination: false,\n        paginationLoop: true,\n        sidePagination: 'client', // client or server\n        totalRows: 0, // server side need to set\n        pageNumber: 1,\n        pageSize: 10,\n        pageList: [10, 25, 50, 100],\n        paginationHAlign: 'right', //right, left\n        paginationVAlign: 'bottom', //bottom, top, both\n        paginationDetailHAlign: 'left', //right, left\n        paginationPreText: '&lsaquo;',\n        paginationNextText: '&rsaquo;',\n        search: false,\n        searchOnEnterKey: false,\n        strictSearch: false,\n        searchAlign: 'right',\n        selectItemName: 'btSelectItem',\n        showHeader: true,\n        showFooter: false,\n        showColumns: false,\n        showPaginationSwitch: false,\n        showRefresh: false,\n        showToggle: false,\n        buttonsAlign: 'right',\n        smartDisplay: true,\n        escape: false,\n        minimumCountColumns: 1,\n        idField: undefined,\n        uniqueId: undefined,\n        cardView: false,\n        detailView: false,\n        detailFormatter: function (index, row) {\n            return '';\n        },\n        trimOnSearch: true,\n        clickToSelect: false,\n        singleSelect: false,\n        toolbar: undefined,\n        toolbarAlign: 'left',\n        checkboxHeader: true,\n        sortable: true,\n        silentSort: true,\n        maintainSelected: false,\n        searchTimeOut: 500,\n        searchText: '',\n        iconSize: undefined,\n        buttonsClass: 'default',\n        iconsPrefix: 'glyphicon', // glyphicon of fa (font awesome)\n        icons: {\n            paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n            paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n            refresh: 'glyphicon-refresh icon-refresh',\n            toggle: 'glyphicon-list-alt icon-list-alt',\n            columns: 'glyphicon-th icon-th',\n            detailOpen: 'glyphicon-plus icon-plus',\n            detailClose: 'glyphicon-minus icon-minus'\n        },\n\n        customSearch: $.noop,\n\n        customSort: $.noop,\n\n        rowStyle: function (row, index) {\n            return {};\n        },\n\n        rowAttributes: function (row, index) {\n            return {};\n        },\n\n        footerStyle: function (row, index) {\n            return {};\n        },\n\n        onAll: function (name, args) {\n            return false;\n        },\n        onClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onDblClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onClickRow: function (item, $element) {\n            return false;\n        },\n        onDblClickRow: function (item, $element) {\n            return false;\n        },\n        onSort: function (name, order) {\n            return false;\n        },\n        onCheck: function (row) {\n            return false;\n        },\n        onUncheck: function (row) {\n            return false;\n        },\n        onCheckAll: function (rows) {\n            return false;\n        },\n        onUncheckAll: function (rows) {\n            return false;\n        },\n        onCheckSome: function (rows) {\n            return false;\n        },\n        onUncheckSome: function (rows) {\n            return false;\n        },\n        onLoadSuccess: function (data) {\n            return false;\n        },\n        onLoadError: function (status) {\n            return false;\n        },\n        onColumnSwitch: function (field, checked) {\n            return false;\n        },\n        onPageChange: function (number, size) {\n            return false;\n        },\n        onSearch: function (text) {\n            return false;\n        },\n        onToggle: function (cardView) {\n            return false;\n        },\n        onPreBody: function (data) {\n            return false;\n        },\n        onPostBody: function () {\n            return false;\n        },\n        onPostHeader: function () {\n            return false;\n        },\n        onExpandRow: function (index, row, $detail) {\n            return false;\n        },\n        onCollapseRow: function (index, row) {\n            return false;\n        },\n        onRefreshOptions: function (options) {\n            return false;\n        },\n        onRefresh: function (params) {\n          return false;\n        },\n        onResetView: function () {\n            return false;\n        }\n    };\n\n    BootstrapTable.LOCALES = {};\n\n    BootstrapTable.LOCALES['en-US'] = BootstrapTable.LOCALES.en = {\n        formatLoadingMessage: function () {\n            return 'Loading, please wait...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return sprintf('%s rows per page', pageNumber);\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return sprintf('Showing %s to %s of %s rows', pageFrom, pageTo, totalRows);\n        },\n        formatDetailPagination: function (totalRows) {\n            return sprintf('Showing %s rows', totalRows);\n        },\n        formatSearch: function () {\n            return 'Search';\n        },\n        formatNoMatches: function () {\n            return 'No matching records found';\n        },\n        formatPaginationSwitch: function () {\n            return 'Hide/Show pagination';\n        },\n        formatRefresh: function () {\n            return 'Refresh';\n        },\n        formatToggle: function () {\n            return 'Toggle';\n        },\n        formatColumns: function () {\n            return 'Columns';\n        },\n        formatAllRows: function () {\n            return 'All';\n        }\n    };\n\n    $.extend(BootstrapTable.DEFAULTS, BootstrapTable.LOCALES['en-US']);\n\n    BootstrapTable.COLUMN_DEFAULTS = {\n        radio: false,\n        checkbox: false,\n        checkboxEnabled: true,\n        field: undefined,\n        title: undefined,\n        titleTooltip: undefined,\n        'class': undefined,\n        align: undefined, // left, right, center\n        halign: undefined, // left, right, center\n        falign: undefined, // left, right, center\n        valign: undefined, // top, middle, bottom\n        width: undefined,\n        sortable: false,\n        order: 'asc', // asc, desc\n        visible: true,\n        switchable: true,\n        clickToSelect: true,\n        formatter: undefined,\n        footerFormatter: undefined,\n        events: undefined,\n        sorter: undefined,\n        sortName: undefined,\n        cellStyle: undefined,\n        searchable: true,\n        searchFormatter: true,\n        cardVisible: true,\n        escape : false\n    };\n\n    BootstrapTable.EVENTS = {\n        'all.bs.table': 'onAll',\n        'click-cell.bs.table': 'onClickCell',\n        'dbl-click-cell.bs.table': 'onDblClickCell',\n        'click-row.bs.table': 'onClickRow',\n        'dbl-click-row.bs.table': 'onDblClickRow',\n        'sort.bs.table': 'onSort',\n        'check.bs.table': 'onCheck',\n        'uncheck.bs.table': 'onUncheck',\n        'check-all.bs.table': 'onCheckAll',\n        'uncheck-all.bs.table': 'onUncheckAll',\n        'check-some.bs.table': 'onCheckSome',\n        'uncheck-some.bs.table': 'onUncheckSome',\n        'load-success.bs.table': 'onLoadSuccess',\n        'load-error.bs.table': 'onLoadError',\n        'column-switch.bs.table': 'onColumnSwitch',\n        'page-change.bs.table': 'onPageChange',\n        'search.bs.table': 'onSearch',\n        'toggle.bs.table': 'onToggle',\n        'pre-body.bs.table': 'onPreBody',\n        'post-body.bs.table': 'onPostBody',\n        'post-header.bs.table': 'onPostHeader',\n        'expand-row.bs.table': 'onExpandRow',\n        'collapse-row.bs.table': 'onCollapseRow',\n        'refresh-options.bs.table': 'onRefreshOptions',\n        'reset-view.bs.table': 'onResetView',\n        'refresh.bs.table': 'onRefresh'\n    };\n\n    BootstrapTable.prototype.init = function () {\n        this.initLocale();\n        this.initContainer();\n        this.initTable();\n        this.initHeader();\n        this.initData();\n        this.initHiddenRows();\n        this.initFooter();\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n        this.initSearchText();\n        this.initServer();\n    };\n\n    BootstrapTable.prototype.initLocale = function () {\n        if (this.options.locale) {\n            var parts = this.options.locale.split(/-|_/);\n            parts[0].toLowerCase();\n            if (parts[1]) parts[1].toUpperCase();\n            if ($.fn.bootstrapTable.locales[this.options.locale]) {\n                // locale as requested\n                $.extend(this.options, $.fn.bootstrapTable.locales[this.options.locale]);\n            } else if ($.fn.bootstrapTable.locales[parts.join('-')]) {\n                // locale with sep set to - (in case original was specified with _)\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts.join('-')]);\n            } else if ($.fn.bootstrapTable.locales[parts[0]]) {\n                // short locale language code (i.e. 'en')\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts[0]]);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.initContainer = function () {\n        this.$container = $([\n            '<div class=\"bootstrap-table\">',\n            '<div class=\"fixed-table-toolbar\"></div>',\n            this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\" style=\"clear: both;\"></div>' :\n                '',\n            '<div class=\"fixed-table-container\">',\n            '<div class=\"fixed-table-header\"><table></table></div>',\n            '<div class=\"fixed-table-body\">',\n            '<div class=\"fixed-table-loading\">',\n            this.options.formatLoadingMessage(),\n            '</div>',\n            '</div>',\n            '<div class=\"fixed-table-footer\"><table><tr></tr></table></div>',\n            this.options.paginationVAlign === 'bottom' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\"></div>' :\n                '',\n            '</div>',\n            '</div>'\n        ].join(''));\n\n        this.$container.insertAfter(this.$el);\n        this.$tableContainer = this.$container.find('.fixed-table-container');\n        this.$tableHeader = this.$container.find('.fixed-table-header');\n        this.$tableBody = this.$container.find('.fixed-table-body');\n        this.$tableLoading = this.$container.find('.fixed-table-loading');\n        this.$tableFooter = this.$container.find('.fixed-table-footer');\n        this.$toolbar = this.$container.find('.fixed-table-toolbar');\n        this.$pagination = this.$container.find('.fixed-table-pagination');\n\n        this.$tableBody.append(this.$el);\n        this.$container.after('<div class=\"clearfix\"></div>');\n\n        this.$el.addClass(this.options.classes);\n        if (this.options.striped) {\n            this.$el.addClass('table-striped');\n        }\n        if ($.inArray('table-no-bordered', this.options.classes.split(' ')) !== -1) {\n            this.$tableContainer.addClass('table-no-bordered');\n        }\n    };\n\n    BootstrapTable.prototype.initTable = function () {\n        var that = this,\n            columns = [],\n            data = [];\n\n        this.$header = this.$el.find('>thead');\n        if (!this.$header.length) {\n            this.$header = $('<thead></thead>').appendTo(this.$el);\n        }\n        this.$header.find('tr').each(function () {\n            var column = [];\n\n            $(this).find('th').each(function () {\n                // Fix #2014 - getFieldIndex and elsewhere assume this is string, causes issues if not\n                if (typeof $(this).data('field') !== 'undefined') {\n                    $(this).data('field', $(this).data('field') + '');\n                }\n                column.push($.extend({}, {\n                    title: $(this).html(),\n                    'class': $(this).attr('class'),\n                    titleTooltip: $(this).attr('title'),\n                    rowspan: $(this).attr('rowspan') ? +$(this).attr('rowspan') : undefined,\n                    colspan: $(this).attr('colspan') ? +$(this).attr('colspan') : undefined\n                }, $(this).data()));\n            });\n            columns.push(column);\n        });\n        if (!$.isArray(this.options.columns[0])) {\n            this.options.columns = [this.options.columns];\n        }\n        this.options.columns = $.extend(true, [], columns, this.options.columns);\n        this.columns = [];\n\n        setFieldIndex(this.options.columns);\n        $.each(this.options.columns, function (i, columns) {\n            $.each(columns, function (j, column) {\n                column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, column);\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.columns[column.fieldIndex] = column;\n                }\n\n                that.options.columns[i][j] = column;\n            });\n        });\n\n        // if options.data is setting, do not process tbody data\n        if (this.options.data.length) {\n            return;\n        }\n\n        var m = [];\n        this.$el.find('>tbody>tr').each(function (y) {\n            var row = {};\n\n            // save tr's id, class and data-* attributes\n            row._id = $(this).attr('id');\n            row._class = $(this).attr('class');\n            row._data = getRealDataAttr($(this).data());\n\n            $(this).find('>td').each(function (x) {\n                var $this = $(this),\n                    cspan = +$this.attr('colspan') || 1,\n                    rspan = +$this.attr('rowspan') || 1,\n                    tx, ty;\n\n                for (; m[y] && m[y][x]; x++); //skip already occupied cells in current row\n\n                for (tx = x; tx < x + cspan; tx++) { //mark matrix elements occupied by current cell with true\n                    for (ty = y; ty < y + rspan; ty++) {\n                        if (!m[ty]) { //fill missing rows\n                            m[ty] = [];\n                        }\n                        m[ty][tx] = true;\n                    }\n                }\n\n                var field = that.columns[x].field;\n\n                row[field] = $(this).html();\n                // save td's id, class and data-* attributes\n                row['_' + field + '_id'] = $(this).attr('id');\n                row['_' + field + '_class'] = $(this).attr('class');\n                row['_' + field + '_rowspan'] = $(this).attr('rowspan');\n                row['_' + field + '_colspan'] = $(this).attr('colspan');\n                row['_' + field + '_title'] = $(this).attr('title');\n                row['_' + field + '_data'] = getRealDataAttr($(this).data());\n            });\n            data.push(row);\n        });\n        this.options.data = data;\n        if (data.length) this.fromHtml = true;\n    };\n\n    BootstrapTable.prototype.initHeader = function () {\n        var that = this,\n            visibleColumns = {},\n            html = [];\n\n        this.header = {\n            fields: [],\n            styles: [],\n            classes: [],\n            formatters: [],\n            events: [],\n            sorters: [],\n            sortNames: [],\n            cellStyles: [],\n            searchables: []\n        };\n\n        $.each(this.options.columns, function (i, columns) {\n            html.push('<tr>');\n\n            if (i === 0 && !that.options.cardView && that.options.detailView) {\n                html.push(sprintf('<th class=\"detail\" rowspan=\"%s\"><div class=\"fht-cell\"></div></th>',\n                    that.options.columns.length));\n            }\n\n            $.each(columns, function (j, column) {\n                var text = '',\n                    halign = '', // header align style\n                    align = '', // body align style\n                    style = '',\n                    class_ = sprintf(' class=\"%s\"', column['class']),\n                    order = that.options.sortOrder || column.order,\n                    unitWidth = 'px',\n                    width = column.width;\n\n                if (column.width !== undefined && (!that.options.cardView)) {\n                    if (typeof column.width === 'string') {\n                        if (column.width.indexOf('%') !== -1) {\n                            unitWidth = '%';\n                        }\n                    }\n                }\n                if (column.width && typeof column.width === 'string') {\n                    width = column.width.replace('%', '').replace('px', '');\n                }\n\n                halign = sprintf('text-align: %s; ', column.halign ? column.halign : column.align);\n                align = sprintf('text-align: %s; ', column.align);\n                style = sprintf('vertical-align: %s; ', column.valign);\n                style += sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n                    '36px' : (width ? width + unitWidth : undefined));\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.header.fields[column.fieldIndex] = column.field;\n                    that.header.styles[column.fieldIndex] = align + style;\n                    that.header.classes[column.fieldIndex] = class_;\n                    that.header.formatters[column.fieldIndex] = column.formatter;\n                    that.header.events[column.fieldIndex] = column.events;\n                    that.header.sorters[column.fieldIndex] = column.sorter;\n                    that.header.sortNames[column.fieldIndex] = column.sortName;\n                    that.header.cellStyles[column.fieldIndex] = column.cellStyle;\n                    that.header.searchables[column.fieldIndex] = column.searchable;\n\n                    if (!column.visible) {\n                        return;\n                    }\n\n                    if (that.options.cardView && (!column.cardVisible)) {\n                        return;\n                    }\n\n                    visibleColumns[column.field] = column;\n                }\n\n                html.push('<th' + sprintf(' title=\"%s\"', column.titleTooltip),\n                    column.checkbox || column.radio ?\n                        sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n                        class_,\n                    sprintf(' style=\"%s\"', halign + style),\n                    sprintf(' rowspan=\"%s\"', column.rowspan),\n                    sprintf(' colspan=\"%s\"', column.colspan),\n                    sprintf(' data-field=\"%s\"', column.field),\n                    '>');\n\n                html.push(sprintf('<div class=\"th-inner %s\">', that.options.sortable && column.sortable ?\n                    'sortable both' : ''));\n\n                text = that.options.escape ? escapeHTML(column.title) : column.title;\n\n                if (column.checkbox) {\n                    if (!that.options.singleSelect && that.options.checkboxHeader) {\n                        text = '<input name=\"btSelectAll\" type=\"checkbox\" />';\n                    }\n                    that.header.stateField = column.field;\n                }\n                if (column.radio) {\n                    text = '';\n                    that.header.stateField = column.field;\n                    that.options.singleSelect = true;\n                }\n\n                html.push(text);\n                html.push('</div>');\n                html.push('<div class=\"fht-cell\"></div>');\n                html.push('</div>');\n                html.push('</th>');\n            });\n            html.push('</tr>');\n        });\n\n        this.$header.html(html.join(''));\n        this.$header.find('th[data-field]').each(function (i) {\n            $(this).data(visibleColumns[$(this).data('field')]);\n        });\n        this.$container.off('click', '.th-inner').on('click', '.th-inner', function (event) {\n            var target = $(this);\n\n            if (that.options.detailView) {\n                if (target.closest('.bootstrap-table')[0] !== that.$container[0])\n                    return false;\n            }\n\n            if (that.options.sortable && target.parent().data().sortable) {\n                that.onSort(event);\n            }\n        });\n\n        this.$header.children().children().off('keypress').on('keypress', function (event) {\n            if (that.options.sortable && $(this).data().sortable) {\n                var code = event.keyCode || event.which;\n                if (code == 13) { //Enter keycode\n                    that.onSort(event);\n                }\n            }\n        });\n\n        $(window).off('resize.bootstrap-table');\n        if (!this.options.showHeader || this.options.cardView) {\n            this.$header.hide();\n            this.$tableHeader.hide();\n            this.$tableLoading.css('top', 0);\n        } else {\n            this.$header.show();\n            this.$tableHeader.show();\n            this.$tableLoading.css('top', this.$header.outerHeight() + 1);\n            // Assign the correct sortable arrow\n            this.getCaret();\n            $(window).on('resize.bootstrap-table', $.proxy(this.resetWidth, this));\n        }\n\n        this.$selectAll = this.$header.find('[name=\"btSelectAll\"]');\n        this.$selectAll.off('click').on('click', function () {\n                var checked = $(this).prop('checked');\n                that[checked ? 'checkAll' : 'uncheckAll']();\n                that.updateSelected();\n            });\n    };\n\n    BootstrapTable.prototype.initFooter = function () {\n        if (!this.options.showFooter || this.options.cardView) {\n            this.$tableFooter.hide();\n        } else {\n            this.$tableFooter.show();\n        }\n    };\n\n    /**\n     * @param data\n     * @param type: append / prepend\n     */\n    BootstrapTable.prototype.initData = function (data, type) {\n        if (type === 'append') {\n            this.data = this.data.concat(data);\n        } else if (type === 'prepend') {\n            this.data = [].concat(data).concat(this.data);\n        } else {\n            this.data = data || this.options.data;\n        }\n\n        // Fix #839 Records deleted when adding new row on filtered table\n        if (type === 'append') {\n            this.options.data = this.options.data.concat(data);\n        } else if (type === 'prepend') {\n            this.options.data = [].concat(data).concat(this.options.data);\n        } else {\n            this.options.data = this.data;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            return;\n        }\n        this.initSort();\n    };\n\n    BootstrapTable.prototype.initSort = function () {\n        var that = this,\n            name = this.options.sortName,\n            order = this.options.sortOrder === 'desc' ? -1 : 1,\n            index = $.inArray(this.options.sortName, this.header.fields),\n            timeoutId = 0;\n\n        if (this.options.customSort !== $.noop) {\n            this.options.customSort.apply(this, [this.options.sortName, this.options.sortOrder]);\n            return;\n        }\n\n        if (index !== -1) {\n            if (this.options.sortStable) {\n                $.each(this.data, function (i, row) {\n                    if (!row.hasOwnProperty('_position')) row._position = i;\n                });\n            }\n\n            this.data.sort(function (a, b) {\n                if (that.header.sortNames[index]) {\n                    name = that.header.sortNames[index];\n                }\n                var aa = getItemField(a, name, that.options.escape),\n                    bb = getItemField(b, name, that.options.escape),\n                    value = calculateObjectValue(that.header, that.header.sorters[index], [aa, bb]);\n\n                if (value !== undefined) {\n                    return order * value;\n                }\n\n                // Fix #161: undefined or null string sort bug.\n                if (aa === undefined || aa === null) {\n                    aa = '';\n                }\n                if (bb === undefined || bb === null) {\n                    bb = '';\n                }\n\n                if (that.options.sortStable && aa === bb) {\n                    aa = a._position;\n                    bb = b._position;\n                }\n\n                // IF both values are numeric, do a numeric comparison\n                if ($.isNumeric(aa) && $.isNumeric(bb)) {\n                    // Convert numerical values form string to float.\n                    aa = parseFloat(aa);\n                    bb = parseFloat(bb);\n                    if (aa < bb) {\n                        return order * -1;\n                    }\n                    return order;\n                }\n\n                if (aa === bb) {\n                    return 0;\n                }\n\n                // If value is not a string, convert to string\n                if (typeof aa !== 'string') {\n                    aa = aa.toString();\n                }\n\n                if (aa.localeCompare(bb) === -1) {\n                    return order * -1;\n                }\n\n                return order;\n            });\n\n            if (this.options.sortClass !== undefined) {\n                clearTimeout(timeoutId);\n                timeoutId = setTimeout(function () {\n                    that.$el.removeClass(that.options.sortClass);\n                    var index = that.$header.find(sprintf('[data-field=\"%s\"]',\n                        that.options.sortName).index() + 1);\n                    that.$el.find(sprintf('tr td:nth-child(%s)', index))\n                        .addClass(that.options.sortClass);\n                }, 250);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSort = function (event) {\n        var $this = event.type === \"keypress\" ? $(event.currentTarget) : $(event.currentTarget).parent(),\n            $this_ = this.$header.find('th').eq($this.index());\n\n        this.$header.add(this.$header_).find('span.order').remove();\n\n        if (this.options.sortName === $this.data('field')) {\n            this.options.sortOrder = this.options.sortOrder === 'asc' ? 'desc' : 'asc';\n        } else {\n            this.options.sortName = $this.data('field');\n            this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc';\n        }\n        this.trigger('sort', this.options.sortName, this.options.sortOrder);\n\n        $this.add($this_).data('order', this.options.sortOrder);\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n\n        if (this.options.sidePagination === 'server') {\n            this.initServer(this.options.silentSort);\n            return;\n        }\n\n        this.initSort();\n        this.initBody();\n    };\n\n    BootstrapTable.prototype.initToolbar = function () {\n        var that = this,\n            html = [],\n            timeoutId = 0,\n            $keepOpen,\n            $search,\n            switchableCount = 0;\n\n        if (this.$toolbar.find('.bs-bars').children().length) {\n            $('body').append($(this.options.toolbar));\n        }\n        this.$toolbar.html('');\n\n        if (typeof this.options.toolbar === 'string' || typeof this.options.toolbar === 'object') {\n            $(sprintf('<div class=\"bs-bars pull-%s\"></div>', this.options.toolbarAlign))\n                .appendTo(this.$toolbar)\n                .append($(this.options.toolbar));\n        }\n\n        // showColumns, showToggle, showRefresh\n        html = [sprintf('<div class=\"columns columns-%s btn-group pull-%s\">',\n            this.options.buttonsAlign, this.options.buttonsAlign)];\n\n        if (typeof this.options.icons === 'string') {\n            this.options.icons = calculateObjectValue(null, this.options.icons);\n        }\n\n        if (this.options.showPaginationSwitch) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"paginationSwitch\" aria-label=\"pagination Switch\" title=\"%s\">',\n                    this.options.formatPaginationSwitch()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.paginationSwitchDown),\n                '</button>');\n        }\n\n        if (this.options.showRefresh) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"refresh\" aria-label=\"refresh\" title=\"%s\">',\n                    this.options.formatRefresh()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.refresh),\n                '</button>');\n        }\n\n        if (this.options.showToggle) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"toggle\" aria-label=\"toggle\" title=\"%s\">',\n                    this.options.formatToggle()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.toggle),\n                '</button>');\n        }\n\n        if (this.options.showColumns) {\n            html.push(sprintf('<div class=\"keep-open btn-group\" title=\"%s\">',\n                    this.options.formatColumns()),\n                '<button type=\"button\" aria-label=\"columns\" class=\"btn' +\n                sprintf(' btn-%s', this.options.buttonsClass) +\n                sprintf(' btn-%s', this.options.iconSize) +\n                ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.columns),\n                ' <span class=\"caret\"></span>',\n                '</button>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">');\n\n            $.each(this.columns, function (i, column) {\n                if (column.radio || column.checkbox) {\n                    return;\n                }\n\n                if (that.options.cardView && !column.cardVisible) {\n                    return;\n                }\n\n                var checked = column.visible ? ' checked=\"checked\"' : '';\n\n                if (column.switchable) {\n                    html.push(sprintf('<li role=\"menuitem\">' +\n                        '<label><input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s> %s</label>' +\n                        '</li>', column.field, i, checked, column.title));\n                    switchableCount++;\n                }\n            });\n            html.push('</ul>',\n                '</div>');\n        }\n\n        html.push('</div>');\n\n        // Fix #188: this.showToolbar is for extensions\n        if (this.showToolbar || html.length > 2) {\n            this.$toolbar.append(html.join(''));\n        }\n\n        if (this.options.showPaginationSwitch) {\n            this.$toolbar.find('button[name=\"paginationSwitch\"]')\n                .off('click').on('click', $.proxy(this.togglePagination, this));\n        }\n\n        if (this.options.showRefresh) {\n            this.$toolbar.find('button[name=\"refresh\"]')\n                .off('click').on('click', $.proxy(this.refresh, this));\n        }\n\n        if (this.options.showToggle) {\n            this.$toolbar.find('button[name=\"toggle\"]')\n                .off('click').on('click', function () {\n                    that.toggleView();\n                });\n        }\n\n        if (this.options.showColumns) {\n            $keepOpen = this.$toolbar.find('.keep-open');\n\n            if (switchableCount <= this.options.minimumCountColumns) {\n                $keepOpen.find('input').prop('disabled', true);\n            }\n\n            $keepOpen.find('li').off('click').on('click', function (event) {\n                event.stopImmediatePropagation();\n            });\n            $keepOpen.find('input').off('click').on('click', function () {\n                var $this = $(this);\n\n                that.toggleColumn($(this).val(), $this.prop('checked'), false);\n                that.trigger('column-switch', $(this).data('field'), $this.prop('checked'));\n            });\n        }\n\n        if (this.options.search) {\n            html = [];\n            html.push(\n                '<div class=\"pull-' + this.options.searchAlign + ' search\">',\n                sprintf('<input class=\"form-control' +\n                    sprintf(' input-%s', this.options.iconSize) +\n                    '\" type=\"text\" placeholder=\"%s\">',\n                    this.options.formatSearch()),\n                '</div>');\n\n            this.$toolbar.append(html.join(''));\n            $search = this.$toolbar.find('.search input');\n            $search.off('keyup drop blur').on('keyup drop blur', function (event) {\n                if (that.options.searchOnEnterKey && event.keyCode !== 13) {\n                    return;\n                }\n\n                if ($.inArray(event.keyCode, [37, 38, 39, 40]) > -1) {\n                    return;\n                }\n\n                clearTimeout(timeoutId); // doesn't matter if it's 0\n                timeoutId = setTimeout(function () {\n                    that.onSearch(event);\n                }, that.options.searchTimeOut);\n            });\n\n            if (isIEBrowser()) {\n                $search.off('mouseup').on('mouseup', function (event) {\n                    clearTimeout(timeoutId); // doesn't matter if it's 0\n                    timeoutId = setTimeout(function () {\n                        that.onSearch(event);\n                    }, that.options.searchTimeOut);\n                });\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSearch = function (event) {\n        var text = $.trim($(event.currentTarget).val());\n\n        // trim search input\n        if (this.options.trimOnSearch && $(event.currentTarget).val() !== text) {\n            $(event.currentTarget).val(text);\n        }\n\n        if (text === this.searchText) {\n            return;\n        }\n        this.searchText = text;\n        this.options.searchText = text;\n\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n        this.trigger('search', text);\n    };\n\n    BootstrapTable.prototype.initSearch = function () {\n        var that = this;\n\n        if (this.options.sidePagination !== 'server') {\n            if (this.options.customSearch !== $.noop) {\n                this.options.customSearch.apply(this, [this.searchText]);\n                return;\n            }\n\n            var s = this.searchText && (this.options.escape ?\n                escapeHTML(this.searchText) : this.searchText).toLowerCase();\n            var f = $.isEmptyObject(this.filterColumns) ? null : this.filterColumns;\n\n            // Check filter\n            this.data = f ? $.grep(this.options.data, function (item, i) {\n                for (var key in f) {\n                    if ($.isArray(f[key]) && $.inArray(item[key], f[key]) === -1 ||\n                            !$.isArray(f[key]) && item[key] !== f[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }) : this.options.data;\n\n            this.data = s ? $.grep(this.data, function (item, i) {\n                for (var j = 0; j < that.header.fields.length; j++) {\n\n                    if (!that.header.searchables[j]) {\n                        continue;\n                    }\n\n                    var key = $.isNumeric(that.header.fields[j]) ? parseInt(that.header.fields[j], 10) : that.header.fields[j];\n                    var column = that.columns[getFieldIndex(that.columns, key)];\n                    var value;\n\n                    if (typeof key === 'string') {\n                        value = item;\n                        var props = key.split('.');\n                        for (var prop_index = 0; prop_index < props.length; prop_index++) {\n                            value = value[props[prop_index]];\n                        }\n\n                        // Fix #142: respect searchForamtter boolean\n                        if (column && column.searchFormatter) {\n                            value = calculateObjectValue(column,\n                                that.header.formatters[j], [value, item, i], value);\n                        }\n                    } else {\n                        value = item[key];\n                    }\n\n                    if (typeof value === 'string' || typeof value === 'number') {\n                        if (that.options.strictSearch) {\n                            if ((value + '').toLowerCase() === s) {\n                                return true;\n                            }\n                        } else {\n                            if ((value + '').toLowerCase().indexOf(s) !== -1) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }) : this.data;\n        }\n    };\n\n    BootstrapTable.prototype.initPagination = function () {\n        if (!this.options.pagination) {\n            this.$pagination.hide();\n            return;\n        } else {\n            this.$pagination.show();\n        }\n\n        var that = this,\n            html = [],\n            $allSelected = false,\n            i, from, to,\n            $pageList,\n            $first, $pre,\n            $next, $last,\n            $number,\n            data = this.getData(),\n            pageList = this.options.pageList;\n\n        if (this.options.sidePagination !== 'server') {\n            this.options.totalRows = data.length;\n        }\n\n        this.totalPages = 0;\n        if (this.options.totalRows) {\n            if (this.options.pageSize === this.options.formatAllRows()) {\n                this.options.pageSize = this.options.totalRows;\n                $allSelected = true;\n            } else if (this.options.pageSize === this.options.totalRows) {\n                // Fix #667 Table with pagination,\n                // multiple pages and a search that matches to one page throws exception\n                var pageLst = typeof this.options.pageList === 'string' ?\n                    this.options.pageList.replace('[', '').replace(']', '')\n                        .replace(/ /g, '').toLowerCase().split(',') : this.options.pageList;\n                if ($.inArray(this.options.formatAllRows().toLowerCase(), pageLst)  > -1) {\n                    $allSelected = true;\n                }\n            }\n\n            this.totalPages = ~~((this.options.totalRows - 1) / this.options.pageSize) + 1;\n\n            this.options.totalPages = this.totalPages;\n        }\n        if (this.totalPages > 0 && this.options.pageNumber > this.totalPages) {\n            this.options.pageNumber = this.totalPages;\n        }\n\n        this.pageFrom = (this.options.pageNumber - 1) * this.options.pageSize + 1;\n        this.pageTo = this.options.pageNumber * this.options.pageSize;\n        if (this.pageTo > this.options.totalRows) {\n            this.pageTo = this.options.totalRows;\n        }\n\n        html.push(\n            '<div class=\"pull-' + this.options.paginationDetailHAlign + ' pagination-detail\">',\n            '<span class=\"pagination-info\">',\n            this.options.onlyInfoPagination ? this.options.formatDetailPagination(this.options.totalRows) :\n            this.options.formatShowingRows(this.pageFrom, this.pageTo, this.options.totalRows),\n            '</span>');\n\n        if (!this.options.onlyInfoPagination) {\n            html.push('<span class=\"page-list\">');\n\n            var pageNumber = [\n                    sprintf('<span class=\"btn-group %s\">',\n                        this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                            'dropdown' : 'dropup'),\n                    '<button type=\"button\" class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                    '<span class=\"page-size\">',\n                    $allSelected ? this.options.formatAllRows() : this.options.pageSize,\n                    '</span>',\n                    ' <span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu\" role=\"menu\">'\n                ];\n\n            if (typeof this.options.pageList === 'string') {\n                var list = this.options.pageList.replace('[', '').replace(']', '')\n                    .replace(/ /g, '').split(',');\n\n                pageList = [];\n                $.each(list, function (i, value) {\n                    pageList.push(value.toUpperCase() === that.options.formatAllRows().toUpperCase() ?\n                        that.options.formatAllRows() : +value);\n                });\n            }\n\n            $.each(pageList, function (i, page) {\n                if (!that.options.smartDisplay || i === 0 || pageList[i - 1] < that.options.totalRows) {\n                    var active;\n                    if ($allSelected) {\n                        active = page === that.options.formatAllRows() ? ' class=\"active\"' : '';\n                    } else {\n                        active = page === that.options.pageSize ? ' class=\"active\"' : '';\n                    }\n                    pageNumber.push(sprintf('<li role=\"menuitem\"%s><a href=\"#\">%s</a></li>', active, page));\n                }\n            });\n            pageNumber.push('</ul></span>');\n\n            html.push(this.options.formatRecordsPerPage(pageNumber.join('')));\n            html.push('</span>');\n\n            html.push('</div>',\n                '<div class=\"pull-' + this.options.paginationHAlign + ' pagination\">',\n                '<ul class=\"pagination' + sprintf(' pagination-%s', this.options.iconSize) + '\">',\n                '<li class=\"page-pre\"><a href=\"#\">' + this.options.paginationPreText + '</a></li>');\n\n            if (this.totalPages < 5) {\n                from = 1;\n                to = this.totalPages;\n            } else {\n                from = this.options.pageNumber - 2;\n                to = from + 4;\n                if (from < 1) {\n                    from = 1;\n                    to = 5;\n                }\n                if (to > this.totalPages) {\n                    to = this.totalPages;\n                    from = to - 4;\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber >= 3) {\n                    html.push('<li class=\"page-first' + (1 === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', 1, '</a>',\n                        '</li>');\n\n                    from++;\n                }\n\n                if (this.options.pageNumber >= 4) {\n                    if (this.options.pageNumber == 4 || this.totalPages == 6 || this.totalPages == 7) {\n                        from--;\n                    } else {\n                        html.push('<li class=\"page-first-separator disabled\">',\n                            '<a href=\"#\">...</a>',\n                            '</li>');\n                    }\n\n                    to--;\n                }\n            }\n\n            if (this.totalPages >= 7) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    from--;\n                }\n            }\n\n            if (this.totalPages == 6) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    to++;\n                }\n            } else if (this.totalPages >= 7) {\n                if (this.totalPages == 7 || this.options.pageNumber >= (this.totalPages - 3)) {\n                    to++;\n                }\n            }\n\n            for (i = from; i <= to; i++) {\n                html.push('<li class=\"page-number' + (i === this.options.pageNumber ? ' active' : '') + '\">',\n                    '<a href=\"#\">', i, '</a>',\n                    '</li>');\n            }\n\n            if (this.totalPages >= 8) {\n                if (this.options.pageNumber <= (this.totalPages - 4)) {\n                    html.push('<li class=\"page-last-separator disabled\">',\n                        '<a href=\"#\">...</a>',\n                        '</li>');\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber <= (this.totalPages - 3)) {\n                    html.push('<li class=\"page-last' + (this.totalPages === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', this.totalPages, '</a>',\n                        '</li>');\n                }\n            }\n\n            html.push(\n                '<li class=\"page-next\"><a href=\"#\">' + this.options.paginationNextText + '</a></li>',\n                '</ul>',\n                '</div>');\n        }\n        this.$pagination.html(html.join(''));\n\n        if (!this.options.onlyInfoPagination) {\n            $pageList = this.$pagination.find('.page-list a');\n            $first = this.$pagination.find('.page-first');\n            $pre = this.$pagination.find('.page-pre');\n            $next = this.$pagination.find('.page-next');\n            $last = this.$pagination.find('.page-last');\n            $number = this.$pagination.find('.page-number');\n\n            if (this.options.smartDisplay) {\n                if (this.totalPages <= 1) {\n                    this.$pagination.find('div.pagination').hide();\n                }\n                if (pageList.length < 2 || this.options.totalRows <= pageList[0]) {\n                    this.$pagination.find('span.page-list').hide();\n                }\n\n                // when data is empty, hide the pagination\n                this.$pagination[this.getData().length ? 'show' : 'hide']();\n            }\n\n            if (!this.options.paginationLoop) {\n                if (this.options.pageNumber === 1) {\n                    $pre.addClass('disabled');\n                }\n                if (this.options.pageNumber === this.totalPages) {\n                    $next.addClass('disabled');\n                }\n            }\n\n            if ($allSelected) {\n                this.options.pageSize = this.options.formatAllRows();\n            }\n            $pageList.off('click').on('click', $.proxy(this.onPageListChange, this));\n            $first.off('click').on('click', $.proxy(this.onPageFirst, this));\n            $pre.off('click').on('click', $.proxy(this.onPagePre, this));\n            $next.off('click').on('click', $.proxy(this.onPageNext, this));\n            $last.off('click').on('click', $.proxy(this.onPageLast, this));\n            $number.off('click').on('click', $.proxy(this.onPageNumber, this));\n        }\n    };\n\n    BootstrapTable.prototype.updatePagination = function (event) {\n        // Fix #171: IE disabled button can be clicked bug.\n        if (event && $(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        if (!this.options.maintainSelected) {\n            this.resetRows();\n        }\n\n        this.initPagination();\n        if (this.options.sidePagination === 'server') {\n            this.initServer();\n        } else {\n            this.initBody();\n        }\n\n        this.trigger('page-change', this.options.pageNumber, this.options.pageSize);\n    };\n\n    BootstrapTable.prototype.onPageListChange = function (event) {\n        var $this = $(event.currentTarget);\n\n        $this.parent().addClass('active').siblings().removeClass('active');\n        this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n            this.options.formatAllRows() : +$this.text();\n        this.$toolbar.find('.page-size').text(this.options.pageSize);\n\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageFirst = function (event) {\n        this.options.pageNumber = 1;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPagePre = function (event) {\n        if ((this.options.pageNumber - 1) === 0) {\n            this.options.pageNumber = this.options.totalPages;\n        } else {\n            this.options.pageNumber--;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNext = function (event) {\n        if ((this.options.pageNumber + 1) > this.options.totalPages) {\n            this.options.pageNumber = 1;\n        } else {\n            this.options.pageNumber++;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageLast = function (event) {\n        this.options.pageNumber = this.totalPages;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNumber = function (event) {\n        if (this.options.pageNumber === +$(event.currentTarget).text()) {\n            return;\n        }\n        this.options.pageNumber = +$(event.currentTarget).text();\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.initRow = function(item, i, data, parentDom) {\n        var that=this,\n            key,\n            html = [],\n            style = {},\n            csses = [],\n            data_ = '',\n            attributes = {},\n            htmlAttributes = [];\n\n        if ($.inArray(item, this.hiddenRows) > -1) {\n            return;\n        }\n\n        style = calculateObjectValue(this.options, this.options.rowStyle, [item, i], style);\n\n        if (style && style.css) {\n            for (key in style.css) {\n                csses.push(key + ': ' + style.css[key]);\n            }\n        }\n\n        attributes = calculateObjectValue(this.options,\n            this.options.rowAttributes, [item, i], attributes);\n\n        if (attributes) {\n            for (key in attributes) {\n                htmlAttributes.push(sprintf('%s=\"%s\"', key, escapeHTML(attributes[key])));\n            }\n        }\n\n        if (item._data && !$.isEmptyObject(item._data)) {\n            $.each(item._data, function(k, v) {\n                // ignore data-index\n                if (k === 'index') {\n                    return;\n                }\n                data_ += sprintf(' data-%s=\"%s\"', k, v);\n            });\n        }\n\n        html.push('<tr',\n            sprintf(' %s', htmlAttributes.join(' ')),\n            sprintf(' id=\"%s\"', $.isArray(item) ? undefined : item._id),\n            sprintf(' class=\"%s\"', style.classes || ($.isArray(item) ? undefined : item._class)),\n            sprintf(' data-index=\"%s\"', i),\n            sprintf(' data-uniqueid=\"%s\"', item[this.options.uniqueId]),\n            sprintf('%s', data_),\n            '>'\n        );\n\n        if (this.options.cardView) {\n            html.push(sprintf('<td colspan=\"%s\"><div class=\"card-views\">', this.header.fields.length));\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td>',\n                '<a class=\"detail-icon\" href=\"#\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.detailOpen),\n                '</a>',\n                '</td>');\n        }\n\n        $.each(this.header.fields, function(j, field) {\n            var text = '',\n                value_ = getItemField(item, field, that.options.escape),\n                value = '',\n                type = '',\n                cellStyle = {},\n                id_ = '',\n                class_ = that.header.classes[j],\n                data_ = '',\n                rowspan_ = '',\n                colspan_ = '',\n                title_ = '',\n                column = that.columns[j];\n\n            if (that.fromHtml && typeof value_ === 'undefined') {\n                return;\n            }\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            if (column.escape) {\n                value_ = escapeHTML(value_);\n            }\n\n            style = sprintf('style=\"%s\"', csses.concat(that.header.styles[j]).join('; '));\n\n            // handle td's id and class\n            if (item['_' + field + '_id']) {\n                id_ = sprintf(' id=\"%s\"', item['_' + field + '_id']);\n            }\n            if (item['_' + field + '_class']) {\n                class_ = sprintf(' class=\"%s\"', item['_' + field + '_class']);\n            }\n            if (item['_' + field + '_rowspan']) {\n                rowspan_ = sprintf(' rowspan=\"%s\"', item['_' + field + '_rowspan']);\n            }\n            if (item['_' + field + '_colspan']) {\n                colspan_ = sprintf(' colspan=\"%s\"', item['_' + field + '_colspan']);\n            }\n            if (item['_' + field + '_title']) {\n                title_ = sprintf(' title=\"%s\"', item['_' + field + '_title']);\n            }\n            cellStyle = calculateObjectValue(that.header,\n                that.header.cellStyles[j], [value_, item, i, field], cellStyle);\n            if (cellStyle.classes) {\n                class_ = sprintf(' class=\"%s\"', cellStyle.classes);\n            }\n            if (cellStyle.css) {\n                var csses_ = [];\n                for (var key in cellStyle.css) {\n                    csses_.push(key + ': ' + cellStyle.css[key]);\n                }\n                style = sprintf('style=\"%s\"', csses_.concat(that.header.styles[j]).join('; '));\n            }\n\n            value = calculateObjectValue(column,\n                that.header.formatters[j], [value_, item, i], value_);\n\n            if (item['_' + field + '_data'] && !$.isEmptyObject(item['_' + field + '_data'])) {\n                $.each(item['_' + field + '_data'], function(k, v) {\n                    // ignore data-index\n                    if (k === 'index') {\n                        return;\n                    }\n                    data_ += sprintf(' data-%s=\"%s\"', k, v);\n                });\n            }\n\n            if (column.checkbox || column.radio) {\n                type = column.checkbox ? 'checkbox' : type;\n                type = column.radio ? 'radio' : type;\n\n                text = [sprintf(that.options.cardView ?\n                        '<div class=\"card-view %s\">' : '<td class=\"bs-checkbox %s\">', column['class'] || ''),\n                    '<input' +\n                    sprintf(' data-index=\"%s\"', i) +\n                    sprintf(' name=\"%s\"', that.options.selectItemName) +\n                    sprintf(' type=\"%s\"', type) +\n                    sprintf(' value=\"%s\"', item[that.options.idField]) +\n                    sprintf(' checked=\"%s\"', value === true ||\n                        (value_ || value && value.checked) ? 'checked' : undefined) +\n                    sprintf(' disabled=\"%s\"', !column.checkboxEnabled ||\n                        (value && value.disabled) ? 'disabled' : undefined) +\n                    ' />',\n                    that.header.formatters[j] && typeof value === 'string' ? value : '',\n                    that.options.cardView ? '</div>' : '</td>'\n                ].join('');\n\n                item[that.header.stateField] = value === true || (value && value.checked);\n            } else {\n                value = typeof value === 'undefined' || value === null ?\n                    that.options.undefinedText : value;\n\n                text = that.options.cardView ? ['<div class=\"card-view\">',\n                    that.options.showHeader ? sprintf('<span class=\"title\" %s>%s</span>', style,\n                        getPropertyFromOther(that.columns, 'field', 'title', field)) : '',\n                    sprintf('<span class=\"value\">%s</span>', value),\n                    '</div>'\n                ].join('') : [sprintf('<td%s %s %s %s %s %s %s>',\n                        id_, class_, style, data_, rowspan_, colspan_, title_),\n                    value,\n                    '</td>'\n                ].join('');\n\n                // Hide empty data on Card view when smartDisplay is set to true.\n                if (that.options.cardView && that.options.smartDisplay && value === '') {\n                    // Should set a placeholder for event binding correct fieldIndex\n                    text = '<div class=\"card-view\"></div>';\n                }\n            }\n\n            html.push(text);\n        });\n\n        if (this.options.cardView) {\n            html.push('</div></td>');\n        }\n        html.push('</tr>');\n\n        return html.join(' ');\n    };\n\n    BootstrapTable.prototype.initBody = function (fixedScroll) {\n        var that = this,\n            html = [],\n            data = this.getData();\n\n        this.trigger('pre-body', data);\n\n        this.$body = this.$el.find('>tbody');\n        if (!this.$body.length) {\n            this.$body = $('<tbody></tbody>').appendTo(this.$el);\n        }\n\n        //Fix #389 Bootstrap-table-flatJSON is not working\n\n        if (!this.options.pagination || this.options.sidePagination === 'server') {\n            this.pageFrom = 1;\n            this.pageTo = data.length;\n        }\n\n        var trFragments = $(document.createDocumentFragment());\n        var hasTr;\n\n        for (var i = this.pageFrom - 1; i < this.pageTo; i++) {\n            var item = data[i];\n            var tr = this.initRow(item, i, data, trFragments);\n            hasTr = hasTr || !!tr;\n            if (tr&&tr!==true) {\n                trFragments.append(tr);\n            }\n        }\n\n        // show no records\n        if (!hasTr) {\n            trFragments.append('<tr class=\"no-records-found\">' +\n                sprintf('<td colspan=\"%s\">%s</td>',\n                this.$header.find('th').length,\n                this.options.formatNoMatches()) +\n                '</tr>');\n        }\n\n        this.$body.html(trFragments);\n\n        if (!fixedScroll) {\n            this.scrollTo(0);\n        }\n\n        // click to select by column\n        this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', function (e) {\n            var $td = $(this),\n                $tr = $td.parent(),\n                item = that.data[$tr.data('index')],\n                index = $td[0].cellIndex,\n                fields = that.getVisibleFields(),\n                field = fields[that.options.detailView && !that.options.cardView ? index - 1 : index],\n                column = that.columns[getFieldIndex(that.columns, field)],\n                value = getItemField(item, field, that.options.escape);\n\n            if ($td.find('.detail-icon').length) {\n                return;\n            }\n\n            that.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td);\n            that.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field);\n\n            // if click to select - then trigger the checkbox/radio click\n            if (e.type === 'click' && that.options.clickToSelect && column.clickToSelect) {\n                var $selectItem = $tr.find(sprintf('[name=\"%s\"]', that.options.selectItemName));\n                if ($selectItem.length) {\n                    $selectItem[0].click(); // #144: .trigger('click') bug\n                }\n            }\n        });\n\n        this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', function () {\n            var $this = $(this),\n                $tr = $this.parent().parent(),\n                index = $tr.data('index'),\n                row = data[index]; // Fix #980 Detail view, when searching, returns wrong row\n\n            // remove and update\n            if ($tr.next().is('tr.detail-view')) {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailOpen));\n                that.trigger('collapse-row', index, row);\n                $tr.next().remove();\n            } else {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailClose));\n                $tr.after(sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.find('td').length));\n                var $element = $tr.next().find('td');\n                var content = calculateObjectValue(that.options, that.options.detailFormatter, [index, row, $element], '');\n                if($element.length === 1) {\n                    $element.append(content);\n                }\n                that.trigger('expand-row', index, row, $element);\n            }\n            that.resetView();\n            return false;\n        });\n\n        this.$selectItem = this.$body.find(sprintf('[name=\"%s\"]', this.options.selectItemName));\n        this.$selectItem.off('click').on('click', function (event) {\n            event.stopImmediatePropagation();\n\n            var $this = $(this),\n                checked = $this.prop('checked'),\n                row = that.data[$this.data('index')];\n\n            if (that.options.maintainSelected && $(this).is(':radio')) {\n                $.each(that.options.data, function (i, row) {\n                    row[that.header.stateField] = false;\n                });\n            }\n\n            row[that.header.stateField] = checked;\n\n            if (that.options.singleSelect) {\n                that.$selectItem.not(this).each(function () {\n                    that.data[$(this).data('index')][that.header.stateField] = false;\n                });\n                that.$selectItem.filter(':checked').not(this).prop('checked', false);\n            }\n\n            that.updateSelected();\n            that.trigger(checked ? 'check' : 'uncheck', row, $this);\n        });\n\n        $.each(this.header.events, function (i, events) {\n            if (!events) {\n                return;\n            }\n            // fix bug, if events is defined with namespace\n            if (typeof events === 'string') {\n                events = calculateObjectValue(null, events);\n            }\n\n            var field = that.header.fields[i],\n                fieldIndex = $.inArray(field, that.getVisibleFields());\n\n            if (that.options.detailView && !that.options.cardView) {\n                fieldIndex += 1;\n            }\n\n            for (var key in events) {\n                that.$body.find('>tr:not(.no-records-found)').each(function () {\n                    var $tr = $(this),\n                        $td = $tr.find(that.options.cardView ? '.card-view' : 'td').eq(fieldIndex),\n                        index = key.indexOf(' '),\n                        name = key.substring(0, index),\n                        el = key.substring(index + 1),\n                        func = events[key];\n\n                    $td.find(el).off(name).on(name, function (e) {\n                        var index = $tr.data('index'),\n                            row = that.data[index],\n                            value = row[field];\n\n                        func.apply(this, [e, value, row, index]);\n                    });\n                });\n            }\n        });\n\n        this.updateSelected();\n        this.resetView();\n\n        this.trigger('post-body', data);\n    };\n\n    BootstrapTable.prototype.initServer = function (silent, query, url) {\n        var that = this,\n            data = {},\n            params = {\n                searchText: this.searchText,\n                sortName: this.options.sortName,\n                sortOrder: this.options.sortOrder\n            },\n            request;\n\n        if (this.options.pagination) {\n            params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n                this.options.totalRows : this.options.pageSize;\n            params.pageNumber = this.options.pageNumber;\n        }\n\n        if (!(url || this.options.url) && !this.options.ajax) {\n            return;\n        }\n\n        if (this.options.queryParamsType === 'limit') {\n            params = {\n                search: params.searchText,\n                sort: params.sortName,\n                order: params.sortOrder\n            };\n\n            if (this.options.pagination) {\n                params.offset = this.options.pageSize === this.options.formatAllRows() ?\n                    0 : this.options.pageSize * (this.options.pageNumber - 1);\n                params.limit = this.options.pageSize === this.options.formatAllRows() ?\n                    this.options.totalRows : this.options.pageSize;\n            }\n        }\n\n        if (!($.isEmptyObject(this.filterColumnsPartial))) {\n            params.filter = JSON.stringify(this.filterColumnsPartial, null);\n        }\n\n        data = calculateObjectValue(this.options, this.options.queryParams, [params], data);\n\n        $.extend(data, query || {});\n\n        // false to stop request\n        if (data === false) {\n            return;\n        }\n\n        if (!silent) {\n            this.$tableLoading.show();\n        }\n        request = $.extend({}, calculateObjectValue(null, this.options.ajaxOptions), {\n            type: this.options.method,\n            url:  url || this.options.url,\n            data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n                JSON.stringify(data) : data,\n            cache: this.options.cache,\n            contentType: this.options.contentType,\n            dataType: this.options.dataType,\n            success: function (res) {\n                res = calculateObjectValue(that.options, that.options.responseHandler, [res], res);\n\n                that.load(res);\n                that.trigger('load-success', res);\n                if (!silent) that.$tableLoading.hide();\n            },\n            error: function (res) {\n                that.trigger('load-error', res.status, res);\n                if (!silent) that.$tableLoading.hide();\n            }\n        });\n\n        if (this.options.ajax) {\n            calculateObjectValue(this, this.options.ajax, [request], null);\n        } else {\n            if (this._xhr && this._xhr.readyState !== 4) {\n                this._xhr.abort();\n            }\n            this._xhr = $.ajax(request);\n        }\n    };\n\n    BootstrapTable.prototype.initSearchText = function () {\n        if (this.options.search) {\n            if (this.options.searchText !== '') {\n                var $search = this.$toolbar.find('.search input');\n                $search.val(this.options.searchText);\n                this.onSearch({currentTarget: $search});\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getCaret = function () {\n        var that = this;\n\n        $.each(this.$header.find('th'), function (i, th) {\n            $(th).find('.sortable').removeClass('desc asc').addClass($(th).data('field') === that.options.sortName ? that.options.sortOrder : 'both');\n        });\n    };\n\n    BootstrapTable.prototype.updateSelected = function () {\n        var checkAll = this.$selectItem.filter(':enabled').length &&\n            this.$selectItem.filter(':enabled').length ===\n            this.$selectItem.filter(':enabled').filter(':checked').length;\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checkAll);\n\n        this.$selectItem.each(function () {\n            $(this).closest('tr')[$(this).prop('checked') ? 'addClass' : 'removeClass']('selected');\n        });\n    };\n\n    BootstrapTable.prototype.updateRows = function () {\n        var that = this;\n\n        this.$selectItem.each(function () {\n            that.data[$(this).data('index')][that.header.stateField] = $(this).prop('checked');\n        });\n    };\n\n    BootstrapTable.prototype.resetRows = function () {\n        var that = this;\n\n        $.each(this.data, function (i, row) {\n            that.$selectAll.prop('checked', false);\n            that.$selectItem.prop('checked', false);\n            if (that.header.stateField) {\n                row[that.header.stateField] = false;\n            }\n        });\n        this.initHiddenRows();\n    };\n\n    BootstrapTable.prototype.trigger = function (name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        name += '.bs.table';\n        this.options[BootstrapTable.EVENTS[name]].apply(this.options, args);\n        this.$el.trigger($.Event(name), args);\n\n        this.options.onAll(name, args);\n        this.$el.trigger($.Event('all.bs.table'), [name, args]);\n    };\n\n    BootstrapTable.prototype.resetHeader = function () {\n        // fix #61: the hidden table reset header bug.\n        // fix bug: get $el.css('width') error sometime (height = 500)\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout($.proxy(this.fitHeader, this), this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitHeader = function () {\n        var that = this,\n            fixedBody,\n            scrollWidth,\n            focused,\n            focusedTemp;\n\n        if (that.$el.is(':hidden')) {\n            that.timeoutId_ = setTimeout($.proxy(that.fitHeader, that), 100);\n            return;\n        }\n        fixedBody = this.$tableBody.get(0);\n\n        scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n        fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            getScrollBarWidth() : 0;\n\n        this.$el.css('margin-top', -this.$header.outerHeight());\n\n        focused = $(':focus');\n        if (focused.length > 0) {\n            var $th = focused.parents('th');\n            if ($th.length > 0) {\n                var dataField = $th.attr('data-field');\n                if (dataField !== undefined) {\n                    var $headerTh = this.$header.find(\"[data-field='\" + dataField + \"']\");\n                    if ($headerTh.length > 0) {\n                        $headerTh.find(\":input\").addClass(\"focus-temp\");\n                    }\n                }\n            }\n        }\n\n        this.$header_ = this.$header.clone(true, true);\n        this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]');\n        this.$tableHeader.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', this.$el.outerWidth())\n            .html('').attr('class', this.$el.attr('class'))\n            .append(this.$header_);\n\n\n        focusedTemp = $('.focus-temp:visible:eq(0)');\n        if (focusedTemp.length > 0) {\n            focusedTemp.focus();\n            this.$header.find('.focus-temp').removeClass('focus-temp');\n        }\n\n        // fix bug: $.data() is not working as expected after $.append()\n        this.$header.find('th[data-field]').each(function (i) {\n            that.$header_.find(sprintf('th[data-field=\"%s\"]', $(this).data('field'))).data($(this).data());\n        });\n\n        var visibleFields = this.getVisibleFields(),\n            $ths = this.$header_.find('th');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this),\n                index = i;\n\n            if (that.options.detailView && !that.options.cardView) {\n                if (i === 0) {\n                    that.$header_.find('th.detail').find('.fht-cell').width($this.innerWidth());\n                }\n                index = i - 1;\n            }\n\n            var $th = that.$header_.find(sprintf('th[data-field=\"%s\"]', visibleFields[index]));\n            if ($th.length > 1) {\n                $th = $($ths[$this[0].cellIndex]);\n            }\n\n            $th.find('.fht-cell').width($this.innerWidth());\n        });\n        // horizontal scroll event\n        // TODO: it's probably better improving the layout than binding to scroll event\n        this.$tableBody.off('scroll').on('scroll', function () {\n            that.$tableHeader.scrollLeft($(this).scrollLeft());\n\n            if (that.options.showFooter && !that.options.cardView) {\n                that.$tableFooter.scrollLeft($(this).scrollLeft());\n            }\n        });\n        that.trigger('post-header');\n    };\n\n    BootstrapTable.prototype.resetFooter = function () {\n        var that = this,\n            data = that.getData(),\n            html = [];\n\n        if (!this.options.showFooter || this.options.cardView) { //do nothing\n            return;\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td><div class=\"th-inner\">&nbsp;</div><div class=\"fht-cell\"></div></td>');\n        }\n\n        $.each(this.columns, function (i, column) {\n            var key,\n                falign = '', // footer align style\n                valign = '',\n                csses = [],\n                style = {},\n                class_ = sprintf(' class=\"%s\"', column['class']);\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            falign = sprintf('text-align: %s; ', column.falign ? column.falign : column.align);\n            valign = sprintf('vertical-align: %s; ', column.valign);\n\n            style = calculateObjectValue(null, that.options.footerStyle);\n\n            if (style && style.css) {\n                for (key in style.css) {\n                    csses.push(key + ': ' + style.css[key]);\n                }\n            }\n\n            html.push('<td', class_, sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')), '>');\n            html.push('<div class=\"th-inner\">');\n\n            html.push(calculateObjectValue(column, column.footerFormatter, [data], '&nbsp;') || '&nbsp;');\n\n            html.push('</div>');\n            html.push('<div class=\"fht-cell\"></div>');\n            html.push('</div>');\n            html.push('</td>');\n        });\n\n        this.$tableFooter.find('tr').html(html.join(''));\n        this.$tableFooter.show();\n        clearTimeout(this.timeoutFooter_);\n        this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this),\n            this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitFooter = function () {\n        var that = this,\n            $footerTd,\n            elWidth,\n            scrollWidth;\n\n        clearTimeout(this.timeoutFooter_);\n        if (this.$el.is(':hidden')) {\n            this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this), 100);\n            return;\n        }\n\n        elWidth = this.$el.css('width');\n        scrollWidth = elWidth > this.$tableBody.width() ? getScrollBarWidth() : 0;\n\n        this.$tableFooter.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', elWidth)\n            .attr('class', this.$el.attr('class'));\n\n        $footerTd = this.$tableFooter.find('td');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this);\n\n            $footerTd.eq(i).find('.fht-cell').width($this.innerWidth());\n        });\n    };\n\n    BootstrapTable.prototype.toggleColumn = function (index, checked, needUpdate) {\n        if (index === -1) {\n            return;\n        }\n        this.columns[index].visible = checked;\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if (needUpdate) {\n                $items.filter(sprintf('[value=\"%s\"]', index)).prop('checked', checked);\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getVisibleFields = function () {\n        var that = this,\n            visibleFields = [];\n\n        $.each(this.header.fields, function (j, field) {\n            var column = that.columns[getFieldIndex(that.columns, field)];\n\n            if (!column.visible) {\n                return;\n            }\n            visibleFields.push(field);\n        });\n        return visibleFields;\n    };\n\n    // PUBLIC FUNCTION DEFINITION\n    // =======================\n\n    BootstrapTable.prototype.resetView = function (params) {\n        var padding = 0;\n\n        if (params && params.height) {\n            this.options.height = params.height;\n        }\n\n        this.$selectAll.prop('checked', this.$selectItem.length > 0 &&\n            this.$selectItem.length === this.$selectItem.filter(':checked').length);\n\n        if (this.options.height) {\n            var toolbarHeight = this.$toolbar.outerHeight(true),\n                paginationHeight = this.$pagination.outerHeight(true),\n                height = this.options.height - toolbarHeight - paginationHeight;\n\n            this.$tableContainer.css('height', height + 'px');\n        }\n\n        if (this.options.cardView) {\n            // remove the element css\n            this.$el.css('margin-top', '0');\n            this.$tableContainer.css('padding-bottom', '0');\n            this.$tableFooter.hide();\n            return;\n        }\n\n        if (this.options.showHeader && this.options.height) {\n            this.$tableHeader.show();\n            this.resetHeader();\n            padding += this.$header.outerHeight();\n        } else {\n            this.$tableHeader.hide();\n            this.trigger('post-header');\n        }\n\n        if (this.options.showFooter) {\n            this.resetFooter();\n            if (this.options.height) {\n                padding += this.$tableFooter.outerHeight() + 1;\n            }\n        }\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n        this.$tableContainer.css('padding-bottom', padding + 'px');\n        this.trigger('reset-view');\n    };\n\n    BootstrapTable.prototype.getData = function (useCurrentPage) {\n        return (this.searchText || !$.isEmptyObject(this.filterColumns) || !$.isEmptyObject(this.filterColumnsPartial)) ?\n            (useCurrentPage ? this.data.slice(this.pageFrom - 1, this.pageTo) : this.data) :\n            (useCurrentPage ? this.options.data.slice(this.pageFrom - 1, this.pageTo) : this.options.data);\n    };\n\n    BootstrapTable.prototype.load = function (data) {\n        var fixedScroll = false;\n\n        // #431: support pagination\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows = data[this.options.totalField];\n            fixedScroll = data.fixedScroll;\n            data = data[this.options.dataField];\n        } else if (!$.isArray(data)) { // support fixedScroll\n            fixedScroll = data.fixedScroll;\n            data = data.data;\n        }\n\n        this.initData(data);\n        this.initSearch();\n        this.initPagination();\n        this.initBody(fixedScroll);\n    };\n\n    BootstrapTable.prototype.append = function (data) {\n        this.initData(data, 'append');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.prepend = function (data) {\n        this.initData(data, 'prepend');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.remove = function (params) {\n        var len = this.options.data.length,\n            i, row;\n\n        if (!params.hasOwnProperty('field') || !params.hasOwnProperty('values')) {\n            return;\n        }\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (!row.hasOwnProperty(params.field)) {\n                continue;\n            }\n            if ($.inArray(row[params.field], params.values) !== -1) {\n                this.options.data.splice(i, 1);\n                if (this.options.sidePagination === 'server') {\n                    this.options.totalRows -= 1;\n                }\n            }\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.removeAll = function () {\n        if (this.options.data.length > 0) {\n            this.options.data.splice(0, this.options.data.length);\n            this.initSearch();\n            this.initPagination();\n            this.initBody(true);\n        }\n    };\n\n    BootstrapTable.prototype.getRowByUniqueId = function (id) {\n        var uniqueId = this.options.uniqueId,\n            len = this.options.data.length,\n            dataRow = null,\n            i, row, rowUniqueId;\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (row.hasOwnProperty(uniqueId)) { // uniqueId is a column\n                rowUniqueId = row[uniqueId];\n            } else if(row._data.hasOwnProperty(uniqueId)) { // uniqueId is a row data property\n                rowUniqueId = row._data[uniqueId];\n            } else {\n                continue;\n            }\n\n            if (typeof rowUniqueId === 'string') {\n                id = id.toString();\n            } else if (typeof rowUniqueId === 'number') {\n                if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n                    id = parseInt(id);\n                } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n                    id = parseFloat(id);\n                }\n            }\n\n            if (rowUniqueId === id) {\n                dataRow = row;\n                break;\n            }\n        }\n\n        return dataRow;\n    };\n\n    BootstrapTable.prototype.removeByUniqueId = function (id) {\n        var len = this.options.data.length,\n            row = this.getRowByUniqueId(id);\n\n        if (row) {\n            this.options.data.splice(this.options.data.indexOf(row), 1);\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateByUniqueId = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            var rowId;\n\n            if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n                return;\n            }\n\n            rowId = $.inArray(that.getRowByUniqueId(params.id), that.options.data);\n\n            if (rowId === -1) {\n                return;\n            }\n            $.extend(that.options.data[rowId], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.insertRow = function (params) {\n        if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n            return;\n        }\n        this.data.splice(params.index, 0, params.row);\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateRow = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n                return;\n            }\n            $.extend(that.options.data[params.index], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.initHiddenRows = function () {\n        this.hiddenRows = [];\n    };\n\n    BootstrapTable.prototype.showRow = function (params) {\n        this.toggleRow(params, true);\n    };\n\n    BootstrapTable.prototype.hideRow = function (params) {\n        this.toggleRow(params, false);\n    };\n\n    BootstrapTable.prototype.toggleRow = function (params, visible) {\n        var row, index;\n\n        if (params.hasOwnProperty('index')) {\n            row = this.getData()[params.index];\n        } else if (params.hasOwnProperty('uniqueId')) {\n            row = this.getRowByUniqueId(params.uniqueId);\n        }\n\n        if (!row) {\n            return;\n        }\n\n        index = $.inArray(row, this.hiddenRows);\n\n        if (!visible && index === -1) {\n            this.hiddenRows.push(row);\n        } else if (visible && index > -1) {\n            this.hiddenRows.splice(index, 1);\n        }\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getHiddenRows = function (show) {\n        var that = this,\n            data = this.getData(),\n            rows = [];\n\n        $.each(data, function (i, row) {\n            if ($.inArray(row, that.hiddenRows) > -1) {\n                rows.push(row);\n            }\n        });\n        this.hiddenRows = rows;\n        return rows;\n    };\n\n    BootstrapTable.prototype.mergeCells = function (options) {\n        var row = options.index,\n            col = $.inArray(options.field, this.getVisibleFields()),\n            rowspan = options.rowspan || 1,\n            colspan = options.colspan || 1,\n            i, j,\n            $tr = this.$body.find('>tr'),\n            $td;\n\n        if (this.options.detailView && !this.options.cardView) {\n            col += 1;\n        }\n\n        $td = $tr.eq(row).find('>td').eq(col);\n\n        if (row < 0 || col < 0 || row >= this.data.length) {\n            return;\n        }\n\n        for (i = row; i < row + rowspan; i++) {\n            for (j = col; j < col + colspan; j++) {\n                $tr.eq(i).find('>td').eq(j).hide();\n            }\n        }\n\n        $td.attr('rowspan', rowspan).attr('colspan', colspan).show();\n    };\n\n    BootstrapTable.prototype.updateCell = function (params) {\n        if (!params.hasOwnProperty('index') ||\n            !params.hasOwnProperty('field') ||\n            !params.hasOwnProperty('value')) {\n            return;\n        }\n        this.data[params.index][params.field] = params.value;\n\n        if (params.reinit === false) {\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getOptions = function () {\n        return this.options;\n    };\n\n    BootstrapTable.prototype.getSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            // fix #2424: from html with checkbox\n            return row[that.header.stateField] === true;\n        });\n    };\n\n    BootstrapTable.prototype.getAllSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            return row[that.header.stateField];\n        });\n    };\n\n    BootstrapTable.prototype.checkAll = function () {\n        this.checkAll_(true);\n    };\n\n    BootstrapTable.prototype.uncheckAll = function () {\n        this.checkAll_(false);\n    };\n\n    BootstrapTable.prototype.checkInvert = function () {\n        var that = this;\n        var rows = that.$selectItem.filter(':enabled');\n        var checked = rows.filter(':checked');\n        rows.each(function() {\n            $(this).prop('checked', !$(this).prop('checked'));\n        });\n        that.updateRows();\n        that.updateSelected();\n        that.trigger('uncheck-some', checked);\n        checked = that.getSelections();\n        that.trigger('check-some', checked);\n    };\n\n    BootstrapTable.prototype.checkAll_ = function (checked) {\n        var rows;\n        if (!checked) {\n            rows = this.getSelections();\n        }\n        this.$selectAll.add(this.$selectAll_).prop('checked', checked);\n        this.$selectItem.filter(':enabled').prop('checked', checked);\n        this.updateRows();\n        if (checked) {\n            rows = this.getSelections();\n        }\n        this.trigger(checked ? 'check-all' : 'uncheck-all', rows);\n    };\n\n    BootstrapTable.prototype.check = function (index) {\n        this.check_(true, index);\n    };\n\n    BootstrapTable.prototype.uncheck = function (index) {\n        this.check_(false, index);\n    };\n\n    BootstrapTable.prototype.check_ = function (checked, index) {\n        var $el = this.$selectItem.filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n        this.data[index][this.header.stateField] = checked;\n        this.updateSelected();\n        this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el);\n    };\n\n    BootstrapTable.prototype.checkBy = function (obj) {\n        this.checkBy_(true, obj);\n    };\n\n    BootstrapTable.prototype.uncheckBy = function (obj) {\n        this.checkBy_(false, obj);\n    };\n\n    BootstrapTable.prototype.checkBy_ = function (checked, obj) {\n        if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n            return;\n        }\n\n        var that = this,\n            rows = [];\n        $.each(this.options.data, function (index, row) {\n            if (!row.hasOwnProperty(obj.field)) {\n                return false;\n            }\n            if ($.inArray(row[obj.field], obj.values) !== -1) {\n                var $el = that.$selectItem.filter(':enabled')\n                    .filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n                row[that.header.stateField] = checked;\n                rows.push(row);\n                that.trigger(checked ? 'check' : 'uncheck', row, $el);\n            }\n        });\n        this.updateSelected();\n        this.trigger(checked ? 'check-some' : 'uncheck-some', rows);\n    };\n\n    BootstrapTable.prototype.destroy = function () {\n        this.$el.insertBefore(this.$container);\n        $(this.options.toolbar).insertBefore(this.$el);\n        this.$container.next().remove();\n        this.$container.remove();\n        this.$el.html(this.$el_.html())\n            .css('margin-top', '0')\n            .attr('class', this.$el_.attr('class') || ''); // reset the class\n    };\n\n    BootstrapTable.prototype.showLoading = function () {\n        this.$tableLoading.show();\n    };\n\n    BootstrapTable.prototype.hideLoading = function () {\n        this.$tableLoading.hide();\n    };\n\n    BootstrapTable.prototype.togglePagination = function () {\n        this.options.pagination = !this.options.pagination;\n        var button = this.$toolbar.find('button[name=\"paginationSwitch\"] i');\n        if (this.options.pagination) {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchDown);\n        } else {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchUp);\n        }\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.refresh = function (params) {\n        if (params && params.url) {\n            this.options.url = params.url;\n        }\n        if (params && params.pageNumber) {\n            this.options.pageNumber = params.pageNumber;\n        }\n        if (params && params.pageSize) {\n            this.options.pageSize = params.pageSize;\n        }\n        this.initServer(params && params.silent,\n            params && params.query, params && params.url);\n        this.trigger('refresh', params);\n    };\n\n    BootstrapTable.prototype.resetWidth = function () {\n        if (this.options.showHeader && this.options.height) {\n            this.fitHeader();\n        }\n        if (this.options.showFooter) {\n            this.fitFooter();\n        }\n    };\n\n    BootstrapTable.prototype.showColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), true, true);\n    };\n\n    BootstrapTable.prototype.hideColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), false, true);\n    };\n\n    BootstrapTable.prototype.getHiddenColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return !column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.getVisibleColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.toggleAllColumns = function (visible) {\n        $.each(this.columns, function (i, column) {\n            this.columns[i].visible = visible;\n        });\n\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.showAllColumns = function () {\n        this.toggleAllColumns(true);\n    };\n\n    BootstrapTable.prototype.hideAllColumns = function () {\n        this.toggleAllColumns(false);\n    };\n\n    BootstrapTable.prototype.filterBy = function (columns) {\n        this.filterColumns = $.isEmptyObject(columns) ? {} : columns;\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.scrollTo = function (value) {\n        if (typeof value === 'string') {\n            value = value === 'bottom' ? this.$tableBody[0].scrollHeight : 0;\n        }\n        if (typeof value === 'number') {\n            this.$tableBody.scrollTop(value);\n        }\n        if (typeof value === 'undefined') {\n            return this.$tableBody.scrollTop();\n        }\n    };\n\n    BootstrapTable.prototype.getScrollPosition = function () {\n        return this.scrollTo();\n    };\n\n    BootstrapTable.prototype.selectPage = function (page) {\n        if (page > 0 && page <= this.options.totalPages) {\n            this.options.pageNumber = page;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.prevPage = function () {\n        if (this.options.pageNumber > 1) {\n            this.options.pageNumber--;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.nextPage = function () {\n        if (this.options.pageNumber < this.options.totalPages) {\n            this.options.pageNumber++;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.toggleView = function () {\n        this.options.cardView = !this.options.cardView;\n        this.initHeader();\n        // Fixed remove toolbar when click cardView button.\n        //that.initToolbar();\n        this.initBody();\n        this.trigger('toggle', this.options.cardView);\n    };\n\n    BootstrapTable.prototype.refreshOptions = function (options) {\n        //If the objects are equivalent then avoid the call of destroy / init methods\n        if (compareObjects(this.options, options, true)) {\n            return;\n        }\n        this.options = $.extend(this.options, options);\n        this.trigger('refresh-options', this.options);\n        this.destroy();\n        this.init();\n    };\n\n    BootstrapTable.prototype.resetSearch = function (text) {\n        var $search = this.$toolbar.find('.search input');\n        $search.val(text || '');\n        this.onSearch({currentTarget: $search});\n    };\n\n    BootstrapTable.prototype.expandRow_ = function (expand, index) {\n        var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', index));\n        if ($tr.next().is('tr.detail-view') === (expand ? false : true)) {\n            $tr.find('> td > .detail-icon').click();\n        }\n    };\n\n    BootstrapTable.prototype.expandRow = function (index) {\n        this.expandRow_(true, index);\n    };\n\n    BootstrapTable.prototype.collapseRow = function (index) {\n        this.expandRow_(false, index);\n    };\n\n    BootstrapTable.prototype.expandAllRows = function (isSubTable) {\n        if (isSubTable) {\n            var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', 0)),\n                that = this,\n                detailIcon = null,\n                executeInterval = false,\n                idInterval = -1;\n\n            if (!$tr.next().is('tr.detail-view')) {\n                $tr.find('> td > .detail-icon').click();\n                executeInterval = true;\n            } else if (!$tr.next().next().is('tr.detail-view')) {\n                $tr.next().find(\".detail-icon\").click();\n                executeInterval = true;\n            }\n\n            if (executeInterval) {\n                try {\n                    idInterval = setInterval(function () {\n                        detailIcon = that.$body.find(\"tr.detail-view\").last().find(\".detail-icon\");\n                        if (detailIcon.length > 0) {\n                            detailIcon.click();\n                        } else {\n                            clearInterval(idInterval);\n                        }\n                    }, 1);\n                } catch (ex) {\n                    clearInterval(idInterval);\n                }\n            }\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(true, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.collapseAllRows = function (isSubTable) {\n        if (isSubTable) {\n            this.expandRow_(false, 0);\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(false, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.updateFormatText = function (name, text) {\n        if (this.options[sprintf('format%s', name)]) {\n            if (typeof text === 'string') {\n                this.options[sprintf('format%s', name)] = function () {\n                    return text;\n                };\n            } else if (typeof text === 'function') {\n                this.options[sprintf('format%s', name)] = text;\n            }\n        }\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n    };\n\n    // BOOTSTRAP TABLE PLUGIN DEFINITION\n    // =======================\n\n    var allowedMethods = [\n        'getOptions',\n        'getSelections', 'getAllSelections', 'getData',\n        'load', 'append', 'prepend', 'remove', 'removeAll',\n        'insertRow', 'updateRow', 'updateCell', 'updateByUniqueId', 'removeByUniqueId',\n        'getRowByUniqueId', 'showRow', 'hideRow', 'getHiddenRows',\n        'mergeCells',\n        'checkAll', 'uncheckAll', 'checkInvert',\n        'check', 'uncheck',\n        'checkBy', 'uncheckBy',\n        'refresh',\n        'resetView',\n        'resetWidth',\n        'destroy',\n        'showLoading', 'hideLoading',\n        'showColumn', 'hideColumn', 'getHiddenColumns', 'getVisibleColumns',\n        'showAllColumns', 'hideAllColumns',\n        'filterBy',\n        'scrollTo',\n        'getScrollPosition',\n        'selectPage', 'prevPage', 'nextPage',\n        'togglePagination',\n        'toggleView',\n        'refreshOptions',\n        'resetSearch',\n        'expandRow', 'collapseRow', 'expandAllRows', 'collapseAllRows',\n        'updateFormatText'\n    ];\n\n    $.fn.bootstrapTable = function (option) {\n        var value,\n            args = Array.prototype.slice.call(arguments, 1);\n\n        this.each(function () {\n            var $this = $(this),\n                data = $this.data('bootstrap.table'),\n                options = $.extend({}, BootstrapTable.DEFAULTS, $this.data(),\n                    typeof option === 'object' && option);\n\n            if (typeof option === 'string') {\n                if ($.inArray(option, allowedMethods) < 0) {\n                    throw new Error(\"Unknown method: \" + option);\n                }\n\n                if (!data) {\n                    return;\n                }\n\n                value = data[option].apply(data, args);\n\n                if (option === 'destroy') {\n                    $this.removeData('bootstrap.table');\n                }\n            }\n\n            if (!data) {\n                $this.data('bootstrap.table', (data = new BootstrapTable(this, options)));\n            }\n        });\n\n        return typeof value === 'undefined' ? this : value;\n    };\n\n    $.fn.bootstrapTable.Constructor = BootstrapTable;\n    $.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS;\n    $.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS;\n    $.fn.bootstrapTable.locales = BootstrapTable.LOCALES;\n    $.fn.bootstrapTable.methods = allowedMethods;\n    $.fn.bootstrapTable.utils = {\n        sprintf: sprintf,\n        getFieldIndex: getFieldIndex,\n        compareObjects: compareObjects,\n        calculateObjectValue: calculateObjectValue,\n        getItemField: getItemField,\n        objectKeys: objectKeys,\n        isIEBrowser: isIEBrowser\n    };\n\n    // BOOTSTRAP TABLE INIT\n    // =======================\n\n    $(function () {\n        $('[data-toggle=\"table\"]').bootstrapTable();\n    });\n})(jQuery));\n\n\n/***/ }),\n\n/***/ 87:\n/***/ (function(module, exports) {\n\n/**\n * Bootstrap Table Spanish (España) translation\n * Author: Antonio Pérez <anpegar@gmail.com>\n */\n (function ($) {\n    'use strict';\n    \n    $.fn.bootstrapTable.locales['es-SP'] = {\n        formatLoadingMessage: function () {\n            return 'Cargando, por favor espera...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return pageNumber + ' registros por p&#225;gina.';\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return pageFrom + ' - ' + pageTo + ' de ' + totalRows + ' registros.';\n        },\n        formatSearch: function () {\n            return 'Buscar';\n        },\n        formatNoMatches: function () {\n            return 'No se han encontrado registros.';\n        },\n        formatRefresh: function () {\n            return 'Actualizar';\n        },\n        formatToggle: function () {\n            return 'Alternar';\n        },\n        formatColumns: function () {\n            return 'Columnas';\n        },\n        formatAllRows: function () {\n            return 'Todo';\n        }\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales['es-SP']);\n\n})(jQuery);\n\n/***/ }),\n\n/***/ 88:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"display\",attrs:{\"id\":_vm.ids,\"cellspacing\":\"0\",\"width\":\"100%\"}},[_c('thead'),_c('tbody')])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/6.js","<template lang=\"pug\">\n  .wrapper\n    .left-navigation.col-md-2\n      .aside-nav-container\n        .left-navigation__header\n          h3.left-navigation__header-text {{ title }}\n        ul.aside-nav\n          li.aside-buttons\n            a(href=\"\" id=\"make-payment\", @click.prevent=\"sendTo('new_contract')\")\n              i.material-icons monetization_on\n              | Registrar Pago\n\n    .main-content.col-md-10\n      #extra-table-container\n        .searcher-container.main-toolbar#extra-toolbar\n          .input-group.search\n            .input-group-addon: i.material-icons search\n            input.form-control.searcher(type=\"text\" placeholder=\"Buscar por cliente\",v-model=\"search.text\", @keypress.enter.stop=\"getExtras\")\n          .pull-right\n            a.btn.icon.print-table(target=\"_blank\" href=\"process/getreport/clientes'\"): i.material-icons print\n          .pull-right\n            select#client-filter.form-group.filter.btn.btn-primary\n              option(:value=\"option.key\", v-for=\"option of options\") {{ option.text }}\n        DataTable(ids=\"extra-table\", :parentId=\"parentId\", :data=\"content\", :cols=\"cols\", :toolbar=\"toolbar\", :options=\"tableOptions\")\n        .mini-card.total\n          h5 Vendido : {{totales.total_vendido | currencyFormat}}\n          h5.text-success Pagado : RD$ {{totales.pagado | currencyFormat}}\n          h5 --------------------\n          h5.text-danger Pendiente : RD$ {{totales.pendiente | currencyFormat}}\n</template>\n\n<script>\n  import DataTable from './../sharedComponents/DataTable.vue';\n  import utils from './../sharedComponents/utils';\n\n  export default {\n    components: {\n      DataTable\n    },\n    mounted() {\n      this.getExtras();\n      utils.spyLeftNavigation();\n    },\n    data() {\n      return {\n        title: 'Extras',\n        parentId: '#extra-table-container',\n        toolbar: '#extra-toolbar',\n        content: '',\n        options: [\n          { key: 'todo', text: 'Todos' },\n          { key: 'saldado', text: 'Saldados' },\n          { key: 'activo', text: 'Activos' }\n        ],\n        tableOptions: {\n          pageSize: 200,\n          pageList: [50, 100, 200, 500, 1000],\n          states: ['saldado', 'activo'],\n          stateField: 'estado'\n        },\n        search: {\n          text: '',\n          state: 'activo'\n        },\n        totales: {\n          pagado: 0,\n          pendiente: 0,\n          total_vendido: 0\n        },\n        tableId: '#extra-table-full'\n      };\n    },\n    methods: {\n      getExtras() {\n        this.$http.post('extra/get_all', this.getDataForm(this.search))\n          .then((res) => {\n            this.content = res.data.content;\n            this.totales = res.data.totales;\n          });\n      },\n    },\n\n    computed: {\n      cols() {\n        return [\n          {\n            field: 'controls',\n            title: '',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'id',\n            title: 'COD',\n            valign: 'middle',\n            align: 'center',\n            class: 'hide'\n          },\n          {\n            field: 'id_servicio',\n            title: 'COR_SER',\n            valign: 'middle',\n            align: 'center',\n            class: 'hide'\n          },\n          {\n            field: 'cliente',\n            title: 'Cliente',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            checkbox: true,\n            field: 'checkbox',\n            title: '',\n            valign: 'middle',\n            align: 'center',\n            class: 'hide'\n          },\n          {\n            field: 'fecha',\n            title: 'Fecha',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'concepto',\n            title: 'Concepto',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'ultimo_pago',\n            title: 'Ultimo Pago',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'monto_pagado',\n            title: 'Monto Pagado',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'deuda',\n            title: 'Pendiente',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'monto_total',\n            title: 'Monto Total',\n            valign: 'middle',\n            align: 'center'\n          },\n          {\n            field: 'estado',\n            title: 'Estado',\n            valign: 'middle',\n            align: 'center'\n          },\n        ];\n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/modules/extras/ExtraSection.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('div',{staticClass:\"left-navigation col-md-2\"},[_c('div',{staticClass:\"aside-nav-container\"},[_c('div',{staticClass:\"left-navigation__header\"},[_c('h3',{staticClass:\"left-navigation__header-text\"},[_vm._v(_vm._s(_vm.title))])]),_c('ul',{staticClass:\"aside-nav\"},[_c('li',{staticClass:\"aside-buttons\"},[_c('a',{attrs:{\"href\":\"\",\"id\":\"make-payment\"},on:{\"click\":function($event){$event.preventDefault();_vm.sendTo('new_contract')}}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"monetization_on\")]),_vm._v(\"Registrar Pago\")])])])])]),_c('div',{staticClass:\"main-content col-md-10\"},[_c('div',{attrs:{\"id\":\"extra-table-container\"}},[_c('div',{staticClass:\"searcher-container main-toolbar\",attrs:{\"id\":\"extra-toolbar\"}},[_c('div',{staticClass:\"input-group search\"},[_vm._m(0,false,false),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search.text),expression:\"search.text\"}],staticClass:\"form-control searcher\",attrs:{\"type\":\"text\",\"placeholder\":\"Buscar por cliente\"},domProps:{\"value\":(_vm.search.text)},on:{\"keypress\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key)){ return null; }$event.stopPropagation();_vm.getExtras($event)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.search, \"text\", $event.target.value)}}})]),_vm._m(1,false,false),_c('div',{staticClass:\"pull-right\"},[_c('select',{staticClass:\"form-group filter btn btn-primary\",attrs:{\"id\":\"client-filter\"}},_vm._l((_vm.options),function(option){return _c('option',{domProps:{\"value\":option.key}},[_vm._v(_vm._s(option.text))])}))])]),_c('DataTable',{attrs:{\"ids\":\"extra-table\",\"parentId\":_vm.parentId,\"data\":_vm.content,\"cols\":_vm.cols,\"toolbar\":_vm.toolbar,\"options\":_vm.tableOptions}}),_c('div',{staticClass:\"mini-card total\"},[_c('h5',[_vm._v(\"Vendido : \"+_vm._s(_vm._f(\"currencyFormat\")(_vm.totales.total_vendido)))]),_c('h5',{staticClass:\"text-success\"},[_vm._v(\"Pagado : RD$ \"+_vm._s(_vm._f(\"currencyFormat\")(_vm.totales.pagado)))]),_c('h5',[_vm._v(\"--------------------\")]),_c('h5',{staticClass:\"text-danger\"},[_vm._v(\"Pendiente : RD$ \"+_vm._s(_vm._f(\"currencyFormat\")(_vm.totales.pendiente)))])])],1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-addon\"},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"search\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pull-right\"},[_c('a',{staticClass:\"btn icon print-table\",attrs:{\"target\":\"_blank\",\"href\":\"process/getreport/clientes'\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"print\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6a4db7fb\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/modules/extras/ExtraSection.vue\n// module id = 152\n// module chunks = 6","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ExtraSection.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6a4db7fb\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ExtraSection.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/extras/ExtraSection.vue\n// module id = 81\n// module chunks = 6","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DataTable.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-357e043f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DataTable.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/sharedComponents/DataTable.vue\n// module id = 84\n// module chunks = 0 1 2 3 5 6","<template lang=\"pug\">\n\n  table(:id=\"ids\", class=\"display\", cellspacing=\"0\", width=\"100%\")\n    thead\n    tbody\n</template>\n\n<script>\n  import 'bootstrap-table';\n  import '../../../node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP';\n\n  export default {\n    props: {\n      cols: {\n        type: Array\n      },\n      data: {\n        type: String\n      },\n      options: {\n        type: Object\n      },\n      ids: {\n        type: String\n      },\n      endpoint: {\n        type: String\n      },\n      parentId: {\n        type: String\n      },\n      toolbar: {\n        type: String\n      }\n    },\n    mounted() {\n      this.init();\n      this.refresh(this.data);\n    },\n    watch: {\n      data() {\n        this.refresh(this.data);\n        this.intialized = false;\n      }\n    },\n\n    methods: {\n\n      init() {\n        this.table = $(`#${this.ids}`);\n        this.$filter = $(`${this.parentId} .filter`);\n        this.activate();\n        this.listen();\n      },\n\n      activate(page) {\n        const self = this;\n        this.table.bootstrapTable({\n          columns: self.cols,\n          sortOrder: 'asc',\n          search: 'true',\n          toolbar: self.toolbar,\n          showRefresh: false,\n          showColumns: false,\n          showExport: false,\n          minimumCountColumns: 2,\n          showPaginationSwitch: false,\n          pagination: true,\n          idField: 'id',\n          pageSize: self.options.pageSize || 50,\n          pageList: self.options.pageList || [10, 20, 50, 100, 2000],\n          showFooter: false,\n          clickToSelect: true,\n          singleSelect: true,\n          striped: false,\n          fixed: true,\n          footer: false\n        });\n        this.table.find('tbody').css({ display: 'table-row-group' });\n        this.table.addClass('innertable');\n        this.$filter.change();\n        if (!this.intialized) {\n          this.initialized = true;\n          this.customSearch();\n          this.listen();\n        }\n        if (page) {\n          this.table.bootstrapTable('selectPage', page);\n        }\n      },\n\n      getSelectedRow(emit = true) {\n        const row = this.table.bootstrapTable('getSelections')[0];\n        if (emit) {\n          this.$emit('selected-row', row);\n        }\n        return row;\n      },\n\n      getId(emit = true) {\n        const self = this;\n        const id = $.map(this.table.bootstrapTable('getSelections'), row => row[self.idField]);\n        if (emit) {\n          this.$emit('id', id);\n        }\n        return id;\n      },\n\n      refresh(content) {\n        const options = this.table.bootstrapTable('getOptions');\n        this.table.bootstrapTable('destroy');\n        this.table.find('tbody').html(content);\n        this.activate(options.pageNumber);\n      },\n\n      listen() {\n        const self = this;\n        this.table.on('all.bs.table', (e, name, args) => {\n          if (name === 'check.bs.table' || name === 'uncheck.bs.table') {\n            const row = this.getSelectedRow();\n            self.$emit('check-uncheck', name, row, args);\n          } else if (name === 'click-cell.bs.table' && args[0] === 'estado') {\n            self.$emit('cell-clicked', name, args);\n          }\n        });\n\n        $(window).resize(() => {\n          self.table.bootstrapTable('resetView');\n        });\n      },\n\n      customSearch() {\n        $(`${this.parentId} .pull-right.search`).addClass('hide');\n        const $inputSearch = $(`${this.parentId} .search input`);\n\n        const self = this;\n        // eslint-disable-next-line\n        $inputSearch.on('click', function () {\n          const $this = $(this).parent();\n          $this.addClass('focus');\n        });\n        // eslint-disable-next-line\n        $inputSearch.on('blur', function () {\n          const $this = $(this).parent();\n          $this.removeClass('focus');\n        });\n        // eslint-disable-next-line\n        this.$filter.on('change', function () {\n          let filterWord = $(this).val();\n          if (filterWord === 'todo') {\n            filterWord = self.options.states;\n          }\n          self.applyFilter(filterWord);\n        });\n      },\n\n      applyFilter(filter) {\n        const self = this;\n        this.table.bootstrapTable('filterBy', {\n          [self.options.stateField]: filter\n        });\n        self.$emit('filter.bs');\n      }\n    }\n  };\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/modules/sharedComponents/DataTable.vue","/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.11.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\nexport default (function ($) {\n    'use strict';\n\n    // TOOLS DEFINITION\n    // ======================\n\n    var cachedWidth = null;\n\n    // it only does '%s', and return '' when arguments are undefined\n    var sprintf = function (str) {\n        var args = arguments,\n            flag = true,\n            i = 1;\n\n        str = str.replace(/%s/g, function () {\n            var arg = args[i++];\n\n            if (typeof arg === 'undefined') {\n                flag = false;\n                return '';\n            }\n            return arg;\n        });\n        return flag ? str : '';\n    };\n\n    var getPropertyFromOther = function (list, from, to, value) {\n        var result = '';\n        $.each(list, function (i, item) {\n            if (item[from] === value) {\n                result = item[to];\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n\n    var getFieldIndex = function (columns, field) {\n        var index = -1;\n\n        $.each(columns, function (i, column) {\n            if (column.field === field) {\n                index = i;\n                return false;\n            }\n            return true;\n        });\n        return index;\n    };\n\n    // http://jsfiddle.net/wenyi/47nz7ez9/3/\n    var setFieldIndex = function (columns) {\n        var i, j, k,\n            totalCol = 0,\n            flag = [];\n\n        for (i = 0; i < columns[0].length; i++) {\n            totalCol += columns[0][i].colspan || 1;\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            flag[i] = [];\n            for (j = 0; j < totalCol; j++) {\n                flag[i][j] = false;\n            }\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            for (j = 0; j < columns[i].length; j++) {\n                var r = columns[i][j],\n                    rowspan = r.rowspan || 1,\n                    colspan = r.colspan || 1,\n                    index = $.inArray(false, flag[i]);\n\n                if (colspan === 1) {\n                    r.fieldIndex = index;\n                    // when field is undefined, use index instead\n                    if (typeof r.field === 'undefined') {\n                        r.field = index;\n                    }\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    flag[i + k][index] = true;\n                }\n                for (k = 0; k < colspan; k++) {\n                    flag[i][index + k] = true;\n                }\n            }\n        }\n    };\n\n    var getScrollBarWidth = function () {\n        if (cachedWidth === null) {\n            var inner = $('<p/>').addClass('fixed-table-scroll-inner'),\n                outer = $('<div/>').addClass('fixed-table-scroll-outer'),\n                w1, w2;\n\n            outer.append(inner);\n            $('body').append(outer);\n\n            w1 = inner[0].offsetWidth;\n            outer.css('overflow', 'scroll');\n            w2 = inner[0].offsetWidth;\n\n            if (w1 === w2) {\n                w2 = outer[0].clientWidth;\n            }\n\n            outer.remove();\n            cachedWidth = w1 - w2;\n        }\n        return cachedWidth;\n    };\n\n    var calculateObjectValue = function (self, name, args, defaultValue) {\n        var func = name;\n\n        if (typeof name === 'string') {\n            // support obj.func1.func2\n            var names = name.split('.');\n\n            if (names.length > 1) {\n                func = window;\n                $.each(names, function (i, f) {\n                    func = func[f];\n                });\n            } else {\n                func = window[name];\n            }\n        }\n        if (typeof func === 'object') {\n            return func;\n        }\n        if (typeof func === 'function') {\n            return func.apply(self, args || []);\n        }\n        if (!func && typeof name === 'string' && sprintf.apply(this, [name].concat(args))) {\n            return sprintf.apply(this, [name].concat(args));\n        }\n        return defaultValue;\n    };\n\n    var compareObjects = function (objectA, objectB, compareLength) {\n        // Create arrays of property names\n        var objectAProperties = Object.getOwnPropertyNames(objectA),\n            objectBProperties = Object.getOwnPropertyNames(objectB),\n            propName = '';\n\n        if (compareLength) {\n            // If number of properties is different, objects are not equivalent\n            if (objectAProperties.length !== objectBProperties.length) {\n                return false;\n            }\n        }\n\n        for (var i = 0; i < objectAProperties.length; i++) {\n            propName = objectAProperties[i];\n\n            // If the property is not in the object B properties, continue with the next property\n            if ($.inArray(propName, objectBProperties) > -1) {\n                // If values of same property are not equal, objects are not equivalent\n                if (objectA[propName] !== objectB[propName]) {\n                    return false;\n                }\n            }\n        }\n\n        // If we made it this far, objects are considered equivalent\n        return true;\n    };\n\n    var escapeHTML = function (text) {\n        if (typeof text === 'string') {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;')\n                .replace(/`/g, '&#x60;');\n        }\n        return text;\n    };\n\n    var getRealDataAttr = function (dataAttr) {\n        for (var attr in dataAttr) {\n            var auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase();\n            if (auxAttr !== attr) {\n                dataAttr[auxAttr] = dataAttr[attr];\n                delete dataAttr[attr];\n            }\n        }\n\n        return dataAttr;\n    };\n\n    var getItemField = function (item, field, escape) {\n        var value = item;\n\n        if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n            return escape ? escapeHTML(item[field]) : item[field];\n        }\n        var props = field.split('.');\n        for (var p in props) {\n            if (props.hasOwnProperty(p)) {\n                value = value && value[props[p]];\n            }\n        }\n        return escape ? escapeHTML(value) : value;\n    };\n\n    var isIEBrowser = function () {\n        return !!(navigator.userAgent.indexOf(\"MSIE \") > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./));\n    };\n\n    var objectKeys = function () {\n        // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n                    dontEnums = [\n                        'toString',\n                        'toLocaleString',\n                        'valueOf',\n                        'hasOwnProperty',\n                        'isPrototypeOf',\n                        'propertyIsEnumerable',\n                        'constructor'\n                    ],\n                    dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    var result = [], prop, i;\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n                    return result;\n                };\n            }());\n        }\n    };\n\n    // BOOTSTRAP TABLE CLASS DEFINITION\n    // ======================\n\n    var BootstrapTable = function (el, options) {\n        this.options = options;\n        this.$el = $(el);\n        this.$el_ = this.$el.clone();\n        this.timeoutId_ = 0;\n        this.timeoutFooter_ = 0;\n\n        this.init();\n    };\n\n    BootstrapTable.DEFAULTS = {\n        classes: 'table table-hover',\n        sortClass: undefined,\n        locale: undefined,\n        height: undefined,\n        undefinedText: '-',\n        sortName: undefined,\n        sortOrder: 'asc',\n        sortStable: false,\n        striped: false,\n        columns: [[]],\n        data: [],\n        totalField: 'total',\n        dataField: 'rows',\n        method: 'get',\n        url: undefined,\n        ajax: undefined,\n        cache: true,\n        contentType: 'application/json',\n        dataType: 'json',\n        ajaxOptions: {},\n        queryParams: function (params) {\n            return params;\n        },\n        queryParamsType: 'limit', // undefined\n        responseHandler: function (res) {\n            return res;\n        },\n        pagination: false,\n        onlyInfoPagination: false,\n        paginationLoop: true,\n        sidePagination: 'client', // client or server\n        totalRows: 0, // server side need to set\n        pageNumber: 1,\n        pageSize: 10,\n        pageList: [10, 25, 50, 100],\n        paginationHAlign: 'right', //right, left\n        paginationVAlign: 'bottom', //bottom, top, both\n        paginationDetailHAlign: 'left', //right, left\n        paginationPreText: '&lsaquo;',\n        paginationNextText: '&rsaquo;',\n        search: false,\n        searchOnEnterKey: false,\n        strictSearch: false,\n        searchAlign: 'right',\n        selectItemName: 'btSelectItem',\n        showHeader: true,\n        showFooter: false,\n        showColumns: false,\n        showPaginationSwitch: false,\n        showRefresh: false,\n        showToggle: false,\n        buttonsAlign: 'right',\n        smartDisplay: true,\n        escape: false,\n        minimumCountColumns: 1,\n        idField: undefined,\n        uniqueId: undefined,\n        cardView: false,\n        detailView: false,\n        detailFormatter: function (index, row) {\n            return '';\n        },\n        trimOnSearch: true,\n        clickToSelect: false,\n        singleSelect: false,\n        toolbar: undefined,\n        toolbarAlign: 'left',\n        checkboxHeader: true,\n        sortable: true,\n        silentSort: true,\n        maintainSelected: false,\n        searchTimeOut: 500,\n        searchText: '',\n        iconSize: undefined,\n        buttonsClass: 'default',\n        iconsPrefix: 'glyphicon', // glyphicon of fa (font awesome)\n        icons: {\n            paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n            paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n            refresh: 'glyphicon-refresh icon-refresh',\n            toggle: 'glyphicon-list-alt icon-list-alt',\n            columns: 'glyphicon-th icon-th',\n            detailOpen: 'glyphicon-plus icon-plus',\n            detailClose: 'glyphicon-minus icon-minus'\n        },\n\n        customSearch: $.noop,\n\n        customSort: $.noop,\n\n        rowStyle: function (row, index) {\n            return {};\n        },\n\n        rowAttributes: function (row, index) {\n            return {};\n        },\n\n        footerStyle: function (row, index) {\n            return {};\n        },\n\n        onAll: function (name, args) {\n            return false;\n        },\n        onClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onDblClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onClickRow: function (item, $element) {\n            return false;\n        },\n        onDblClickRow: function (item, $element) {\n            return false;\n        },\n        onSort: function (name, order) {\n            return false;\n        },\n        onCheck: function (row) {\n            return false;\n        },\n        onUncheck: function (row) {\n            return false;\n        },\n        onCheckAll: function (rows) {\n            return false;\n        },\n        onUncheckAll: function (rows) {\n            return false;\n        },\n        onCheckSome: function (rows) {\n            return false;\n        },\n        onUncheckSome: function (rows) {\n            return false;\n        },\n        onLoadSuccess: function (data) {\n            return false;\n        },\n        onLoadError: function (status) {\n            return false;\n        },\n        onColumnSwitch: function (field, checked) {\n            return false;\n        },\n        onPageChange: function (number, size) {\n            return false;\n        },\n        onSearch: function (text) {\n            return false;\n        },\n        onToggle: function (cardView) {\n            return false;\n        },\n        onPreBody: function (data) {\n            return false;\n        },\n        onPostBody: function () {\n            return false;\n        },\n        onPostHeader: function () {\n            return false;\n        },\n        onExpandRow: function (index, row, $detail) {\n            return false;\n        },\n        onCollapseRow: function (index, row) {\n            return false;\n        },\n        onRefreshOptions: function (options) {\n            return false;\n        },\n        onRefresh: function (params) {\n          return false;\n        },\n        onResetView: function () {\n            return false;\n        }\n    };\n\n    BootstrapTable.LOCALES = {};\n\n    BootstrapTable.LOCALES['en-US'] = BootstrapTable.LOCALES.en = {\n        formatLoadingMessage: function () {\n            return 'Loading, please wait...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return sprintf('%s rows per page', pageNumber);\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return sprintf('Showing %s to %s of %s rows', pageFrom, pageTo, totalRows);\n        },\n        formatDetailPagination: function (totalRows) {\n            return sprintf('Showing %s rows', totalRows);\n        },\n        formatSearch: function () {\n            return 'Search';\n        },\n        formatNoMatches: function () {\n            return 'No matching records found';\n        },\n        formatPaginationSwitch: function () {\n            return 'Hide/Show pagination';\n        },\n        formatRefresh: function () {\n            return 'Refresh';\n        },\n        formatToggle: function () {\n            return 'Toggle';\n        },\n        formatColumns: function () {\n            return 'Columns';\n        },\n        formatAllRows: function () {\n            return 'All';\n        }\n    };\n\n    $.extend(BootstrapTable.DEFAULTS, BootstrapTable.LOCALES['en-US']);\n\n    BootstrapTable.COLUMN_DEFAULTS = {\n        radio: false,\n        checkbox: false,\n        checkboxEnabled: true,\n        field: undefined,\n        title: undefined,\n        titleTooltip: undefined,\n        'class': undefined,\n        align: undefined, // left, right, center\n        halign: undefined, // left, right, center\n        falign: undefined, // left, right, center\n        valign: undefined, // top, middle, bottom\n        width: undefined,\n        sortable: false,\n        order: 'asc', // asc, desc\n        visible: true,\n        switchable: true,\n        clickToSelect: true,\n        formatter: undefined,\n        footerFormatter: undefined,\n        events: undefined,\n        sorter: undefined,\n        sortName: undefined,\n        cellStyle: undefined,\n        searchable: true,\n        searchFormatter: true,\n        cardVisible: true,\n        escape : false\n    };\n\n    BootstrapTable.EVENTS = {\n        'all.bs.table': 'onAll',\n        'click-cell.bs.table': 'onClickCell',\n        'dbl-click-cell.bs.table': 'onDblClickCell',\n        'click-row.bs.table': 'onClickRow',\n        'dbl-click-row.bs.table': 'onDblClickRow',\n        'sort.bs.table': 'onSort',\n        'check.bs.table': 'onCheck',\n        'uncheck.bs.table': 'onUncheck',\n        'check-all.bs.table': 'onCheckAll',\n        'uncheck-all.bs.table': 'onUncheckAll',\n        'check-some.bs.table': 'onCheckSome',\n        'uncheck-some.bs.table': 'onUncheckSome',\n        'load-success.bs.table': 'onLoadSuccess',\n        'load-error.bs.table': 'onLoadError',\n        'column-switch.bs.table': 'onColumnSwitch',\n        'page-change.bs.table': 'onPageChange',\n        'search.bs.table': 'onSearch',\n        'toggle.bs.table': 'onToggle',\n        'pre-body.bs.table': 'onPreBody',\n        'post-body.bs.table': 'onPostBody',\n        'post-header.bs.table': 'onPostHeader',\n        'expand-row.bs.table': 'onExpandRow',\n        'collapse-row.bs.table': 'onCollapseRow',\n        'refresh-options.bs.table': 'onRefreshOptions',\n        'reset-view.bs.table': 'onResetView',\n        'refresh.bs.table': 'onRefresh'\n    };\n\n    BootstrapTable.prototype.init = function () {\n        this.initLocale();\n        this.initContainer();\n        this.initTable();\n        this.initHeader();\n        this.initData();\n        this.initHiddenRows();\n        this.initFooter();\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n        this.initSearchText();\n        this.initServer();\n    };\n\n    BootstrapTable.prototype.initLocale = function () {\n        if (this.options.locale) {\n            var parts = this.options.locale.split(/-|_/);\n            parts[0].toLowerCase();\n            if (parts[1]) parts[1].toUpperCase();\n            if ($.fn.bootstrapTable.locales[this.options.locale]) {\n                // locale as requested\n                $.extend(this.options, $.fn.bootstrapTable.locales[this.options.locale]);\n            } else if ($.fn.bootstrapTable.locales[parts.join('-')]) {\n                // locale with sep set to - (in case original was specified with _)\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts.join('-')]);\n            } else if ($.fn.bootstrapTable.locales[parts[0]]) {\n                // short locale language code (i.e. 'en')\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts[0]]);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.initContainer = function () {\n        this.$container = $([\n            '<div class=\"bootstrap-table\">',\n            '<div class=\"fixed-table-toolbar\"></div>',\n            this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\" style=\"clear: both;\"></div>' :\n                '',\n            '<div class=\"fixed-table-container\">',\n            '<div class=\"fixed-table-header\"><table></table></div>',\n            '<div class=\"fixed-table-body\">',\n            '<div class=\"fixed-table-loading\">',\n            this.options.formatLoadingMessage(),\n            '</div>',\n            '</div>',\n            '<div class=\"fixed-table-footer\"><table><tr></tr></table></div>',\n            this.options.paginationVAlign === 'bottom' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\"></div>' :\n                '',\n            '</div>',\n            '</div>'\n        ].join(''));\n\n        this.$container.insertAfter(this.$el);\n        this.$tableContainer = this.$container.find('.fixed-table-container');\n        this.$tableHeader = this.$container.find('.fixed-table-header');\n        this.$tableBody = this.$container.find('.fixed-table-body');\n        this.$tableLoading = this.$container.find('.fixed-table-loading');\n        this.$tableFooter = this.$container.find('.fixed-table-footer');\n        this.$toolbar = this.$container.find('.fixed-table-toolbar');\n        this.$pagination = this.$container.find('.fixed-table-pagination');\n\n        this.$tableBody.append(this.$el);\n        this.$container.after('<div class=\"clearfix\"></div>');\n\n        this.$el.addClass(this.options.classes);\n        if (this.options.striped) {\n            this.$el.addClass('table-striped');\n        }\n        if ($.inArray('table-no-bordered', this.options.classes.split(' ')) !== -1) {\n            this.$tableContainer.addClass('table-no-bordered');\n        }\n    };\n\n    BootstrapTable.prototype.initTable = function () {\n        var that = this,\n            columns = [],\n            data = [];\n\n        this.$header = this.$el.find('>thead');\n        if (!this.$header.length) {\n            this.$header = $('<thead></thead>').appendTo(this.$el);\n        }\n        this.$header.find('tr').each(function () {\n            var column = [];\n\n            $(this).find('th').each(function () {\n                // Fix #2014 - getFieldIndex and elsewhere assume this is string, causes issues if not\n                if (typeof $(this).data('field') !== 'undefined') {\n                    $(this).data('field', $(this).data('field') + '');\n                }\n                column.push($.extend({}, {\n                    title: $(this).html(),\n                    'class': $(this).attr('class'),\n                    titleTooltip: $(this).attr('title'),\n                    rowspan: $(this).attr('rowspan') ? +$(this).attr('rowspan') : undefined,\n                    colspan: $(this).attr('colspan') ? +$(this).attr('colspan') : undefined\n                }, $(this).data()));\n            });\n            columns.push(column);\n        });\n        if (!$.isArray(this.options.columns[0])) {\n            this.options.columns = [this.options.columns];\n        }\n        this.options.columns = $.extend(true, [], columns, this.options.columns);\n        this.columns = [];\n\n        setFieldIndex(this.options.columns);\n        $.each(this.options.columns, function (i, columns) {\n            $.each(columns, function (j, column) {\n                column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, column);\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.columns[column.fieldIndex] = column;\n                }\n\n                that.options.columns[i][j] = column;\n            });\n        });\n\n        // if options.data is setting, do not process tbody data\n        if (this.options.data.length) {\n            return;\n        }\n\n        var m = [];\n        this.$el.find('>tbody>tr').each(function (y) {\n            var row = {};\n\n            // save tr's id, class and data-* attributes\n            row._id = $(this).attr('id');\n            row._class = $(this).attr('class');\n            row._data = getRealDataAttr($(this).data());\n\n            $(this).find('>td').each(function (x) {\n                var $this = $(this),\n                    cspan = +$this.attr('colspan') || 1,\n                    rspan = +$this.attr('rowspan') || 1,\n                    tx, ty;\n\n                for (; m[y] && m[y][x]; x++); //skip already occupied cells in current row\n\n                for (tx = x; tx < x + cspan; tx++) { //mark matrix elements occupied by current cell with true\n                    for (ty = y; ty < y + rspan; ty++) {\n                        if (!m[ty]) { //fill missing rows\n                            m[ty] = [];\n                        }\n                        m[ty][tx] = true;\n                    }\n                }\n\n                var field = that.columns[x].field;\n\n                row[field] = $(this).html();\n                // save td's id, class and data-* attributes\n                row['_' + field + '_id'] = $(this).attr('id');\n                row['_' + field + '_class'] = $(this).attr('class');\n                row['_' + field + '_rowspan'] = $(this).attr('rowspan');\n                row['_' + field + '_colspan'] = $(this).attr('colspan');\n                row['_' + field + '_title'] = $(this).attr('title');\n                row['_' + field + '_data'] = getRealDataAttr($(this).data());\n            });\n            data.push(row);\n        });\n        this.options.data = data;\n        if (data.length) this.fromHtml = true;\n    };\n\n    BootstrapTable.prototype.initHeader = function () {\n        var that = this,\n            visibleColumns = {},\n            html = [];\n\n        this.header = {\n            fields: [],\n            styles: [],\n            classes: [],\n            formatters: [],\n            events: [],\n            sorters: [],\n            sortNames: [],\n            cellStyles: [],\n            searchables: []\n        };\n\n        $.each(this.options.columns, function (i, columns) {\n            html.push('<tr>');\n\n            if (i === 0 && !that.options.cardView && that.options.detailView) {\n                html.push(sprintf('<th class=\"detail\" rowspan=\"%s\"><div class=\"fht-cell\"></div></th>',\n                    that.options.columns.length));\n            }\n\n            $.each(columns, function (j, column) {\n                var text = '',\n                    halign = '', // header align style\n                    align = '', // body align style\n                    style = '',\n                    class_ = sprintf(' class=\"%s\"', column['class']),\n                    order = that.options.sortOrder || column.order,\n                    unitWidth = 'px',\n                    width = column.width;\n\n                if (column.width !== undefined && (!that.options.cardView)) {\n                    if (typeof column.width === 'string') {\n                        if (column.width.indexOf('%') !== -1) {\n                            unitWidth = '%';\n                        }\n                    }\n                }\n                if (column.width && typeof column.width === 'string') {\n                    width = column.width.replace('%', '').replace('px', '');\n                }\n\n                halign = sprintf('text-align: %s; ', column.halign ? column.halign : column.align);\n                align = sprintf('text-align: %s; ', column.align);\n                style = sprintf('vertical-align: %s; ', column.valign);\n                style += sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n                    '36px' : (width ? width + unitWidth : undefined));\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.header.fields[column.fieldIndex] = column.field;\n                    that.header.styles[column.fieldIndex] = align + style;\n                    that.header.classes[column.fieldIndex] = class_;\n                    that.header.formatters[column.fieldIndex] = column.formatter;\n                    that.header.events[column.fieldIndex] = column.events;\n                    that.header.sorters[column.fieldIndex] = column.sorter;\n                    that.header.sortNames[column.fieldIndex] = column.sortName;\n                    that.header.cellStyles[column.fieldIndex] = column.cellStyle;\n                    that.header.searchables[column.fieldIndex] = column.searchable;\n\n                    if (!column.visible) {\n                        return;\n                    }\n\n                    if (that.options.cardView && (!column.cardVisible)) {\n                        return;\n                    }\n\n                    visibleColumns[column.field] = column;\n                }\n\n                html.push('<th' + sprintf(' title=\"%s\"', column.titleTooltip),\n                    column.checkbox || column.radio ?\n                        sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n                        class_,\n                    sprintf(' style=\"%s\"', halign + style),\n                    sprintf(' rowspan=\"%s\"', column.rowspan),\n                    sprintf(' colspan=\"%s\"', column.colspan),\n                    sprintf(' data-field=\"%s\"', column.field),\n                    '>');\n\n                html.push(sprintf('<div class=\"th-inner %s\">', that.options.sortable && column.sortable ?\n                    'sortable both' : ''));\n\n                text = that.options.escape ? escapeHTML(column.title) : column.title;\n\n                if (column.checkbox) {\n                    if (!that.options.singleSelect && that.options.checkboxHeader) {\n                        text = '<input name=\"btSelectAll\" type=\"checkbox\" />';\n                    }\n                    that.header.stateField = column.field;\n                }\n                if (column.radio) {\n                    text = '';\n                    that.header.stateField = column.field;\n                    that.options.singleSelect = true;\n                }\n\n                html.push(text);\n                html.push('</div>');\n                html.push('<div class=\"fht-cell\"></div>');\n                html.push('</div>');\n                html.push('</th>');\n            });\n            html.push('</tr>');\n        });\n\n        this.$header.html(html.join(''));\n        this.$header.find('th[data-field]').each(function (i) {\n            $(this).data(visibleColumns[$(this).data('field')]);\n        });\n        this.$container.off('click', '.th-inner').on('click', '.th-inner', function (event) {\n            var target = $(this);\n\n            if (that.options.detailView) {\n                if (target.closest('.bootstrap-table')[0] !== that.$container[0])\n                    return false;\n            }\n\n            if (that.options.sortable && target.parent().data().sortable) {\n                that.onSort(event);\n            }\n        });\n\n        this.$header.children().children().off('keypress').on('keypress', function (event) {\n            if (that.options.sortable && $(this).data().sortable) {\n                var code = event.keyCode || event.which;\n                if (code == 13) { //Enter keycode\n                    that.onSort(event);\n                }\n            }\n        });\n\n        $(window).off('resize.bootstrap-table');\n        if (!this.options.showHeader || this.options.cardView) {\n            this.$header.hide();\n            this.$tableHeader.hide();\n            this.$tableLoading.css('top', 0);\n        } else {\n            this.$header.show();\n            this.$tableHeader.show();\n            this.$tableLoading.css('top', this.$header.outerHeight() + 1);\n            // Assign the correct sortable arrow\n            this.getCaret();\n            $(window).on('resize.bootstrap-table', $.proxy(this.resetWidth, this));\n        }\n\n        this.$selectAll = this.$header.find('[name=\"btSelectAll\"]');\n        this.$selectAll.off('click').on('click', function () {\n                var checked = $(this).prop('checked');\n                that[checked ? 'checkAll' : 'uncheckAll']();\n                that.updateSelected();\n            });\n    };\n\n    BootstrapTable.prototype.initFooter = function () {\n        if (!this.options.showFooter || this.options.cardView) {\n            this.$tableFooter.hide();\n        } else {\n            this.$tableFooter.show();\n        }\n    };\n\n    /**\n     * @param data\n     * @param type: append / prepend\n     */\n    BootstrapTable.prototype.initData = function (data, type) {\n        if (type === 'append') {\n            this.data = this.data.concat(data);\n        } else if (type === 'prepend') {\n            this.data = [].concat(data).concat(this.data);\n        } else {\n            this.data = data || this.options.data;\n        }\n\n        // Fix #839 Records deleted when adding new row on filtered table\n        if (type === 'append') {\n            this.options.data = this.options.data.concat(data);\n        } else if (type === 'prepend') {\n            this.options.data = [].concat(data).concat(this.options.data);\n        } else {\n            this.options.data = this.data;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            return;\n        }\n        this.initSort();\n    };\n\n    BootstrapTable.prototype.initSort = function () {\n        var that = this,\n            name = this.options.sortName,\n            order = this.options.sortOrder === 'desc' ? -1 : 1,\n            index = $.inArray(this.options.sortName, this.header.fields),\n            timeoutId = 0;\n\n        if (this.options.customSort !== $.noop) {\n            this.options.customSort.apply(this, [this.options.sortName, this.options.sortOrder]);\n            return;\n        }\n\n        if (index !== -1) {\n            if (this.options.sortStable) {\n                $.each(this.data, function (i, row) {\n                    if (!row.hasOwnProperty('_position')) row._position = i;\n                });\n            }\n\n            this.data.sort(function (a, b) {\n                if (that.header.sortNames[index]) {\n                    name = that.header.sortNames[index];\n                }\n                var aa = getItemField(a, name, that.options.escape),\n                    bb = getItemField(b, name, that.options.escape),\n                    value = calculateObjectValue(that.header, that.header.sorters[index], [aa, bb]);\n\n                if (value !== undefined) {\n                    return order * value;\n                }\n\n                // Fix #161: undefined or null string sort bug.\n                if (aa === undefined || aa === null) {\n                    aa = '';\n                }\n                if (bb === undefined || bb === null) {\n                    bb = '';\n                }\n\n                if (that.options.sortStable && aa === bb) {\n                    aa = a._position;\n                    bb = b._position;\n                }\n\n                // IF both values are numeric, do a numeric comparison\n                if ($.isNumeric(aa) && $.isNumeric(bb)) {\n                    // Convert numerical values form string to float.\n                    aa = parseFloat(aa);\n                    bb = parseFloat(bb);\n                    if (aa < bb) {\n                        return order * -1;\n                    }\n                    return order;\n                }\n\n                if (aa === bb) {\n                    return 0;\n                }\n\n                // If value is not a string, convert to string\n                if (typeof aa !== 'string') {\n                    aa = aa.toString();\n                }\n\n                if (aa.localeCompare(bb) === -1) {\n                    return order * -1;\n                }\n\n                return order;\n            });\n\n            if (this.options.sortClass !== undefined) {\n                clearTimeout(timeoutId);\n                timeoutId = setTimeout(function () {\n                    that.$el.removeClass(that.options.sortClass);\n                    var index = that.$header.find(sprintf('[data-field=\"%s\"]',\n                        that.options.sortName).index() + 1);\n                    that.$el.find(sprintf('tr td:nth-child(%s)', index))\n                        .addClass(that.options.sortClass);\n                }, 250);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSort = function (event) {\n        var $this = event.type === \"keypress\" ? $(event.currentTarget) : $(event.currentTarget).parent(),\n            $this_ = this.$header.find('th').eq($this.index());\n\n        this.$header.add(this.$header_).find('span.order').remove();\n\n        if (this.options.sortName === $this.data('field')) {\n            this.options.sortOrder = this.options.sortOrder === 'asc' ? 'desc' : 'asc';\n        } else {\n            this.options.sortName = $this.data('field');\n            this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc';\n        }\n        this.trigger('sort', this.options.sortName, this.options.sortOrder);\n\n        $this.add($this_).data('order', this.options.sortOrder);\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n\n        if (this.options.sidePagination === 'server') {\n            this.initServer(this.options.silentSort);\n            return;\n        }\n\n        this.initSort();\n        this.initBody();\n    };\n\n    BootstrapTable.prototype.initToolbar = function () {\n        var that = this,\n            html = [],\n            timeoutId = 0,\n            $keepOpen,\n            $search,\n            switchableCount = 0;\n\n        if (this.$toolbar.find('.bs-bars').children().length) {\n            $('body').append($(this.options.toolbar));\n        }\n        this.$toolbar.html('');\n\n        if (typeof this.options.toolbar === 'string' || typeof this.options.toolbar === 'object') {\n            $(sprintf('<div class=\"bs-bars pull-%s\"></div>', this.options.toolbarAlign))\n                .appendTo(this.$toolbar)\n                .append($(this.options.toolbar));\n        }\n\n        // showColumns, showToggle, showRefresh\n        html = [sprintf('<div class=\"columns columns-%s btn-group pull-%s\">',\n            this.options.buttonsAlign, this.options.buttonsAlign)];\n\n        if (typeof this.options.icons === 'string') {\n            this.options.icons = calculateObjectValue(null, this.options.icons);\n        }\n\n        if (this.options.showPaginationSwitch) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"paginationSwitch\" aria-label=\"pagination Switch\" title=\"%s\">',\n                    this.options.formatPaginationSwitch()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.paginationSwitchDown),\n                '</button>');\n        }\n\n        if (this.options.showRefresh) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"refresh\" aria-label=\"refresh\" title=\"%s\">',\n                    this.options.formatRefresh()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.refresh),\n                '</button>');\n        }\n\n        if (this.options.showToggle) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"toggle\" aria-label=\"toggle\" title=\"%s\">',\n                    this.options.formatToggle()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.toggle),\n                '</button>');\n        }\n\n        if (this.options.showColumns) {\n            html.push(sprintf('<div class=\"keep-open btn-group\" title=\"%s\">',\n                    this.options.formatColumns()),\n                '<button type=\"button\" aria-label=\"columns\" class=\"btn' +\n                sprintf(' btn-%s', this.options.buttonsClass) +\n                sprintf(' btn-%s', this.options.iconSize) +\n                ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.columns),\n                ' <span class=\"caret\"></span>',\n                '</button>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">');\n\n            $.each(this.columns, function (i, column) {\n                if (column.radio || column.checkbox) {\n                    return;\n                }\n\n                if (that.options.cardView && !column.cardVisible) {\n                    return;\n                }\n\n                var checked = column.visible ? ' checked=\"checked\"' : '';\n\n                if (column.switchable) {\n                    html.push(sprintf('<li role=\"menuitem\">' +\n                        '<label><input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s> %s</label>' +\n                        '</li>', column.field, i, checked, column.title));\n                    switchableCount++;\n                }\n            });\n            html.push('</ul>',\n                '</div>');\n        }\n\n        html.push('</div>');\n\n        // Fix #188: this.showToolbar is for extensions\n        if (this.showToolbar || html.length > 2) {\n            this.$toolbar.append(html.join(''));\n        }\n\n        if (this.options.showPaginationSwitch) {\n            this.$toolbar.find('button[name=\"paginationSwitch\"]')\n                .off('click').on('click', $.proxy(this.togglePagination, this));\n        }\n\n        if (this.options.showRefresh) {\n            this.$toolbar.find('button[name=\"refresh\"]')\n                .off('click').on('click', $.proxy(this.refresh, this));\n        }\n\n        if (this.options.showToggle) {\n            this.$toolbar.find('button[name=\"toggle\"]')\n                .off('click').on('click', function () {\n                    that.toggleView();\n                });\n        }\n\n        if (this.options.showColumns) {\n            $keepOpen = this.$toolbar.find('.keep-open');\n\n            if (switchableCount <= this.options.minimumCountColumns) {\n                $keepOpen.find('input').prop('disabled', true);\n            }\n\n            $keepOpen.find('li').off('click').on('click', function (event) {\n                event.stopImmediatePropagation();\n            });\n            $keepOpen.find('input').off('click').on('click', function () {\n                var $this = $(this);\n\n                that.toggleColumn($(this).val(), $this.prop('checked'), false);\n                that.trigger('column-switch', $(this).data('field'), $this.prop('checked'));\n            });\n        }\n\n        if (this.options.search) {\n            html = [];\n            html.push(\n                '<div class=\"pull-' + this.options.searchAlign + ' search\">',\n                sprintf('<input class=\"form-control' +\n                    sprintf(' input-%s', this.options.iconSize) +\n                    '\" type=\"text\" placeholder=\"%s\">',\n                    this.options.formatSearch()),\n                '</div>');\n\n            this.$toolbar.append(html.join(''));\n            $search = this.$toolbar.find('.search input');\n            $search.off('keyup drop blur').on('keyup drop blur', function (event) {\n                if (that.options.searchOnEnterKey && event.keyCode !== 13) {\n                    return;\n                }\n\n                if ($.inArray(event.keyCode, [37, 38, 39, 40]) > -1) {\n                    return;\n                }\n\n                clearTimeout(timeoutId); // doesn't matter if it's 0\n                timeoutId = setTimeout(function () {\n                    that.onSearch(event);\n                }, that.options.searchTimeOut);\n            });\n\n            if (isIEBrowser()) {\n                $search.off('mouseup').on('mouseup', function (event) {\n                    clearTimeout(timeoutId); // doesn't matter if it's 0\n                    timeoutId = setTimeout(function () {\n                        that.onSearch(event);\n                    }, that.options.searchTimeOut);\n                });\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSearch = function (event) {\n        var text = $.trim($(event.currentTarget).val());\n\n        // trim search input\n        if (this.options.trimOnSearch && $(event.currentTarget).val() !== text) {\n            $(event.currentTarget).val(text);\n        }\n\n        if (text === this.searchText) {\n            return;\n        }\n        this.searchText = text;\n        this.options.searchText = text;\n\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n        this.trigger('search', text);\n    };\n\n    BootstrapTable.prototype.initSearch = function () {\n        var that = this;\n\n        if (this.options.sidePagination !== 'server') {\n            if (this.options.customSearch !== $.noop) {\n                this.options.customSearch.apply(this, [this.searchText]);\n                return;\n            }\n\n            var s = this.searchText && (this.options.escape ?\n                escapeHTML(this.searchText) : this.searchText).toLowerCase();\n            var f = $.isEmptyObject(this.filterColumns) ? null : this.filterColumns;\n\n            // Check filter\n            this.data = f ? $.grep(this.options.data, function (item, i) {\n                for (var key in f) {\n                    if ($.isArray(f[key]) && $.inArray(item[key], f[key]) === -1 ||\n                            !$.isArray(f[key]) && item[key] !== f[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }) : this.options.data;\n\n            this.data = s ? $.grep(this.data, function (item, i) {\n                for (var j = 0; j < that.header.fields.length; j++) {\n\n                    if (!that.header.searchables[j]) {\n                        continue;\n                    }\n\n                    var key = $.isNumeric(that.header.fields[j]) ? parseInt(that.header.fields[j], 10) : that.header.fields[j];\n                    var column = that.columns[getFieldIndex(that.columns, key)];\n                    var value;\n\n                    if (typeof key === 'string') {\n                        value = item;\n                        var props = key.split('.');\n                        for (var prop_index = 0; prop_index < props.length; prop_index++) {\n                            value = value[props[prop_index]];\n                        }\n\n                        // Fix #142: respect searchForamtter boolean\n                        if (column && column.searchFormatter) {\n                            value = calculateObjectValue(column,\n                                that.header.formatters[j], [value, item, i], value);\n                        }\n                    } else {\n                        value = item[key];\n                    }\n\n                    if (typeof value === 'string' || typeof value === 'number') {\n                        if (that.options.strictSearch) {\n                            if ((value + '').toLowerCase() === s) {\n                                return true;\n                            }\n                        } else {\n                            if ((value + '').toLowerCase().indexOf(s) !== -1) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }) : this.data;\n        }\n    };\n\n    BootstrapTable.prototype.initPagination = function () {\n        if (!this.options.pagination) {\n            this.$pagination.hide();\n            return;\n        } else {\n            this.$pagination.show();\n        }\n\n        var that = this,\n            html = [],\n            $allSelected = false,\n            i, from, to,\n            $pageList,\n            $first, $pre,\n            $next, $last,\n            $number,\n            data = this.getData(),\n            pageList = this.options.pageList;\n\n        if (this.options.sidePagination !== 'server') {\n            this.options.totalRows = data.length;\n        }\n\n        this.totalPages = 0;\n        if (this.options.totalRows) {\n            if (this.options.pageSize === this.options.formatAllRows()) {\n                this.options.pageSize = this.options.totalRows;\n                $allSelected = true;\n            } else if (this.options.pageSize === this.options.totalRows) {\n                // Fix #667 Table with pagination,\n                // multiple pages and a search that matches to one page throws exception\n                var pageLst = typeof this.options.pageList === 'string' ?\n                    this.options.pageList.replace('[', '').replace(']', '')\n                        .replace(/ /g, '').toLowerCase().split(',') : this.options.pageList;\n                if ($.inArray(this.options.formatAllRows().toLowerCase(), pageLst)  > -1) {\n                    $allSelected = true;\n                }\n            }\n\n            this.totalPages = ~~((this.options.totalRows - 1) / this.options.pageSize) + 1;\n\n            this.options.totalPages = this.totalPages;\n        }\n        if (this.totalPages > 0 && this.options.pageNumber > this.totalPages) {\n            this.options.pageNumber = this.totalPages;\n        }\n\n        this.pageFrom = (this.options.pageNumber - 1) * this.options.pageSize + 1;\n        this.pageTo = this.options.pageNumber * this.options.pageSize;\n        if (this.pageTo > this.options.totalRows) {\n            this.pageTo = this.options.totalRows;\n        }\n\n        html.push(\n            '<div class=\"pull-' + this.options.paginationDetailHAlign + ' pagination-detail\">',\n            '<span class=\"pagination-info\">',\n            this.options.onlyInfoPagination ? this.options.formatDetailPagination(this.options.totalRows) :\n            this.options.formatShowingRows(this.pageFrom, this.pageTo, this.options.totalRows),\n            '</span>');\n\n        if (!this.options.onlyInfoPagination) {\n            html.push('<span class=\"page-list\">');\n\n            var pageNumber = [\n                    sprintf('<span class=\"btn-group %s\">',\n                        this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                            'dropdown' : 'dropup'),\n                    '<button type=\"button\" class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                    '<span class=\"page-size\">',\n                    $allSelected ? this.options.formatAllRows() : this.options.pageSize,\n                    '</span>',\n                    ' <span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu\" role=\"menu\">'\n                ];\n\n            if (typeof this.options.pageList === 'string') {\n                var list = this.options.pageList.replace('[', '').replace(']', '')\n                    .replace(/ /g, '').split(',');\n\n                pageList = [];\n                $.each(list, function (i, value) {\n                    pageList.push(value.toUpperCase() === that.options.formatAllRows().toUpperCase() ?\n                        that.options.formatAllRows() : +value);\n                });\n            }\n\n            $.each(pageList, function (i, page) {\n                if (!that.options.smartDisplay || i === 0 || pageList[i - 1] < that.options.totalRows) {\n                    var active;\n                    if ($allSelected) {\n                        active = page === that.options.formatAllRows() ? ' class=\"active\"' : '';\n                    } else {\n                        active = page === that.options.pageSize ? ' class=\"active\"' : '';\n                    }\n                    pageNumber.push(sprintf('<li role=\"menuitem\"%s><a href=\"#\">%s</a></li>', active, page));\n                }\n            });\n            pageNumber.push('</ul></span>');\n\n            html.push(this.options.formatRecordsPerPage(pageNumber.join('')));\n            html.push('</span>');\n\n            html.push('</div>',\n                '<div class=\"pull-' + this.options.paginationHAlign + ' pagination\">',\n                '<ul class=\"pagination' + sprintf(' pagination-%s', this.options.iconSize) + '\">',\n                '<li class=\"page-pre\"><a href=\"#\">' + this.options.paginationPreText + '</a></li>');\n\n            if (this.totalPages < 5) {\n                from = 1;\n                to = this.totalPages;\n            } else {\n                from = this.options.pageNumber - 2;\n                to = from + 4;\n                if (from < 1) {\n                    from = 1;\n                    to = 5;\n                }\n                if (to > this.totalPages) {\n                    to = this.totalPages;\n                    from = to - 4;\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber >= 3) {\n                    html.push('<li class=\"page-first' + (1 === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', 1, '</a>',\n                        '</li>');\n\n                    from++;\n                }\n\n                if (this.options.pageNumber >= 4) {\n                    if (this.options.pageNumber == 4 || this.totalPages == 6 || this.totalPages == 7) {\n                        from--;\n                    } else {\n                        html.push('<li class=\"page-first-separator disabled\">',\n                            '<a href=\"#\">...</a>',\n                            '</li>');\n                    }\n\n                    to--;\n                }\n            }\n\n            if (this.totalPages >= 7) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    from--;\n                }\n            }\n\n            if (this.totalPages == 6) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    to++;\n                }\n            } else if (this.totalPages >= 7) {\n                if (this.totalPages == 7 || this.options.pageNumber >= (this.totalPages - 3)) {\n                    to++;\n                }\n            }\n\n            for (i = from; i <= to; i++) {\n                html.push('<li class=\"page-number' + (i === this.options.pageNumber ? ' active' : '') + '\">',\n                    '<a href=\"#\">', i, '</a>',\n                    '</li>');\n            }\n\n            if (this.totalPages >= 8) {\n                if (this.options.pageNumber <= (this.totalPages - 4)) {\n                    html.push('<li class=\"page-last-separator disabled\">',\n                        '<a href=\"#\">...</a>',\n                        '</li>');\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber <= (this.totalPages - 3)) {\n                    html.push('<li class=\"page-last' + (this.totalPages === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', this.totalPages, '</a>',\n                        '</li>');\n                }\n            }\n\n            html.push(\n                '<li class=\"page-next\"><a href=\"#\">' + this.options.paginationNextText + '</a></li>',\n                '</ul>',\n                '</div>');\n        }\n        this.$pagination.html(html.join(''));\n\n        if (!this.options.onlyInfoPagination) {\n            $pageList = this.$pagination.find('.page-list a');\n            $first = this.$pagination.find('.page-first');\n            $pre = this.$pagination.find('.page-pre');\n            $next = this.$pagination.find('.page-next');\n            $last = this.$pagination.find('.page-last');\n            $number = this.$pagination.find('.page-number');\n\n            if (this.options.smartDisplay) {\n                if (this.totalPages <= 1) {\n                    this.$pagination.find('div.pagination').hide();\n                }\n                if (pageList.length < 2 || this.options.totalRows <= pageList[0]) {\n                    this.$pagination.find('span.page-list').hide();\n                }\n\n                // when data is empty, hide the pagination\n                this.$pagination[this.getData().length ? 'show' : 'hide']();\n            }\n\n            if (!this.options.paginationLoop) {\n                if (this.options.pageNumber === 1) {\n                    $pre.addClass('disabled');\n                }\n                if (this.options.pageNumber === this.totalPages) {\n                    $next.addClass('disabled');\n                }\n            }\n\n            if ($allSelected) {\n                this.options.pageSize = this.options.formatAllRows();\n            }\n            $pageList.off('click').on('click', $.proxy(this.onPageListChange, this));\n            $first.off('click').on('click', $.proxy(this.onPageFirst, this));\n            $pre.off('click').on('click', $.proxy(this.onPagePre, this));\n            $next.off('click').on('click', $.proxy(this.onPageNext, this));\n            $last.off('click').on('click', $.proxy(this.onPageLast, this));\n            $number.off('click').on('click', $.proxy(this.onPageNumber, this));\n        }\n    };\n\n    BootstrapTable.prototype.updatePagination = function (event) {\n        // Fix #171: IE disabled button can be clicked bug.\n        if (event && $(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        if (!this.options.maintainSelected) {\n            this.resetRows();\n        }\n\n        this.initPagination();\n        if (this.options.sidePagination === 'server') {\n            this.initServer();\n        } else {\n            this.initBody();\n        }\n\n        this.trigger('page-change', this.options.pageNumber, this.options.pageSize);\n    };\n\n    BootstrapTable.prototype.onPageListChange = function (event) {\n        var $this = $(event.currentTarget);\n\n        $this.parent().addClass('active').siblings().removeClass('active');\n        this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n            this.options.formatAllRows() : +$this.text();\n        this.$toolbar.find('.page-size').text(this.options.pageSize);\n\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageFirst = function (event) {\n        this.options.pageNumber = 1;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPagePre = function (event) {\n        if ((this.options.pageNumber - 1) === 0) {\n            this.options.pageNumber = this.options.totalPages;\n        } else {\n            this.options.pageNumber--;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNext = function (event) {\n        if ((this.options.pageNumber + 1) > this.options.totalPages) {\n            this.options.pageNumber = 1;\n        } else {\n            this.options.pageNumber++;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageLast = function (event) {\n        this.options.pageNumber = this.totalPages;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNumber = function (event) {\n        if (this.options.pageNumber === +$(event.currentTarget).text()) {\n            return;\n        }\n        this.options.pageNumber = +$(event.currentTarget).text();\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.initRow = function(item, i, data, parentDom) {\n        var that=this,\n            key,\n            html = [],\n            style = {},\n            csses = [],\n            data_ = '',\n            attributes = {},\n            htmlAttributes = [];\n\n        if ($.inArray(item, this.hiddenRows) > -1) {\n            return;\n        }\n\n        style = calculateObjectValue(this.options, this.options.rowStyle, [item, i], style);\n\n        if (style && style.css) {\n            for (key in style.css) {\n                csses.push(key + ': ' + style.css[key]);\n            }\n        }\n\n        attributes = calculateObjectValue(this.options,\n            this.options.rowAttributes, [item, i], attributes);\n\n        if (attributes) {\n            for (key in attributes) {\n                htmlAttributes.push(sprintf('%s=\"%s\"', key, escapeHTML(attributes[key])));\n            }\n        }\n\n        if (item._data && !$.isEmptyObject(item._data)) {\n            $.each(item._data, function(k, v) {\n                // ignore data-index\n                if (k === 'index') {\n                    return;\n                }\n                data_ += sprintf(' data-%s=\"%s\"', k, v);\n            });\n        }\n\n        html.push('<tr',\n            sprintf(' %s', htmlAttributes.join(' ')),\n            sprintf(' id=\"%s\"', $.isArray(item) ? undefined : item._id),\n            sprintf(' class=\"%s\"', style.classes || ($.isArray(item) ? undefined : item._class)),\n            sprintf(' data-index=\"%s\"', i),\n            sprintf(' data-uniqueid=\"%s\"', item[this.options.uniqueId]),\n            sprintf('%s', data_),\n            '>'\n        );\n\n        if (this.options.cardView) {\n            html.push(sprintf('<td colspan=\"%s\"><div class=\"card-views\">', this.header.fields.length));\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td>',\n                '<a class=\"detail-icon\" href=\"#\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.detailOpen),\n                '</a>',\n                '</td>');\n        }\n\n        $.each(this.header.fields, function(j, field) {\n            var text = '',\n                value_ = getItemField(item, field, that.options.escape),\n                value = '',\n                type = '',\n                cellStyle = {},\n                id_ = '',\n                class_ = that.header.classes[j],\n                data_ = '',\n                rowspan_ = '',\n                colspan_ = '',\n                title_ = '',\n                column = that.columns[j];\n\n            if (that.fromHtml && typeof value_ === 'undefined') {\n                return;\n            }\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            if (column.escape) {\n                value_ = escapeHTML(value_);\n            }\n\n            style = sprintf('style=\"%s\"', csses.concat(that.header.styles[j]).join('; '));\n\n            // handle td's id and class\n            if (item['_' + field + '_id']) {\n                id_ = sprintf(' id=\"%s\"', item['_' + field + '_id']);\n            }\n            if (item['_' + field + '_class']) {\n                class_ = sprintf(' class=\"%s\"', item['_' + field + '_class']);\n            }\n            if (item['_' + field + '_rowspan']) {\n                rowspan_ = sprintf(' rowspan=\"%s\"', item['_' + field + '_rowspan']);\n            }\n            if (item['_' + field + '_colspan']) {\n                colspan_ = sprintf(' colspan=\"%s\"', item['_' + field + '_colspan']);\n            }\n            if (item['_' + field + '_title']) {\n                title_ = sprintf(' title=\"%s\"', item['_' + field + '_title']);\n            }\n            cellStyle = calculateObjectValue(that.header,\n                that.header.cellStyles[j], [value_, item, i, field], cellStyle);\n            if (cellStyle.classes) {\n                class_ = sprintf(' class=\"%s\"', cellStyle.classes);\n            }\n            if (cellStyle.css) {\n                var csses_ = [];\n                for (var key in cellStyle.css) {\n                    csses_.push(key + ': ' + cellStyle.css[key]);\n                }\n                style = sprintf('style=\"%s\"', csses_.concat(that.header.styles[j]).join('; '));\n            }\n\n            value = calculateObjectValue(column,\n                that.header.formatters[j], [value_, item, i], value_);\n\n            if (item['_' + field + '_data'] && !$.isEmptyObject(item['_' + field + '_data'])) {\n                $.each(item['_' + field + '_data'], function(k, v) {\n                    // ignore data-index\n                    if (k === 'index') {\n                        return;\n                    }\n                    data_ += sprintf(' data-%s=\"%s\"', k, v);\n                });\n            }\n\n            if (column.checkbox || column.radio) {\n                type = column.checkbox ? 'checkbox' : type;\n                type = column.radio ? 'radio' : type;\n\n                text = [sprintf(that.options.cardView ?\n                        '<div class=\"card-view %s\">' : '<td class=\"bs-checkbox %s\">', column['class'] || ''),\n                    '<input' +\n                    sprintf(' data-index=\"%s\"', i) +\n                    sprintf(' name=\"%s\"', that.options.selectItemName) +\n                    sprintf(' type=\"%s\"', type) +\n                    sprintf(' value=\"%s\"', item[that.options.idField]) +\n                    sprintf(' checked=\"%s\"', value === true ||\n                        (value_ || value && value.checked) ? 'checked' : undefined) +\n                    sprintf(' disabled=\"%s\"', !column.checkboxEnabled ||\n                        (value && value.disabled) ? 'disabled' : undefined) +\n                    ' />',\n                    that.header.formatters[j] && typeof value === 'string' ? value : '',\n                    that.options.cardView ? '</div>' : '</td>'\n                ].join('');\n\n                item[that.header.stateField] = value === true || (value && value.checked);\n            } else {\n                value = typeof value === 'undefined' || value === null ?\n                    that.options.undefinedText : value;\n\n                text = that.options.cardView ? ['<div class=\"card-view\">',\n                    that.options.showHeader ? sprintf('<span class=\"title\" %s>%s</span>', style,\n                        getPropertyFromOther(that.columns, 'field', 'title', field)) : '',\n                    sprintf('<span class=\"value\">%s</span>', value),\n                    '</div>'\n                ].join('') : [sprintf('<td%s %s %s %s %s %s %s>',\n                        id_, class_, style, data_, rowspan_, colspan_, title_),\n                    value,\n                    '</td>'\n                ].join('');\n\n                // Hide empty data on Card view when smartDisplay is set to true.\n                if (that.options.cardView && that.options.smartDisplay && value === '') {\n                    // Should set a placeholder for event binding correct fieldIndex\n                    text = '<div class=\"card-view\"></div>';\n                }\n            }\n\n            html.push(text);\n        });\n\n        if (this.options.cardView) {\n            html.push('</div></td>');\n        }\n        html.push('</tr>');\n\n        return html.join(' ');\n    };\n\n    BootstrapTable.prototype.initBody = function (fixedScroll) {\n        var that = this,\n            html = [],\n            data = this.getData();\n\n        this.trigger('pre-body', data);\n\n        this.$body = this.$el.find('>tbody');\n        if (!this.$body.length) {\n            this.$body = $('<tbody></tbody>').appendTo(this.$el);\n        }\n\n        //Fix #389 Bootstrap-table-flatJSON is not working\n\n        if (!this.options.pagination || this.options.sidePagination === 'server') {\n            this.pageFrom = 1;\n            this.pageTo = data.length;\n        }\n\n        var trFragments = $(document.createDocumentFragment());\n        var hasTr;\n\n        for (var i = this.pageFrom - 1; i < this.pageTo; i++) {\n            var item = data[i];\n            var tr = this.initRow(item, i, data, trFragments);\n            hasTr = hasTr || !!tr;\n            if (tr&&tr!==true) {\n                trFragments.append(tr);\n            }\n        }\n\n        // show no records\n        if (!hasTr) {\n            trFragments.append('<tr class=\"no-records-found\">' +\n                sprintf('<td colspan=\"%s\">%s</td>',\n                this.$header.find('th').length,\n                this.options.formatNoMatches()) +\n                '</tr>');\n        }\n\n        this.$body.html(trFragments);\n\n        if (!fixedScroll) {\n            this.scrollTo(0);\n        }\n\n        // click to select by column\n        this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', function (e) {\n            var $td = $(this),\n                $tr = $td.parent(),\n                item = that.data[$tr.data('index')],\n                index = $td[0].cellIndex,\n                fields = that.getVisibleFields(),\n                field = fields[that.options.detailView && !that.options.cardView ? index - 1 : index],\n                column = that.columns[getFieldIndex(that.columns, field)],\n                value = getItemField(item, field, that.options.escape);\n\n            if ($td.find('.detail-icon').length) {\n                return;\n            }\n\n            that.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td);\n            that.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field);\n\n            // if click to select - then trigger the checkbox/radio click\n            if (e.type === 'click' && that.options.clickToSelect && column.clickToSelect) {\n                var $selectItem = $tr.find(sprintf('[name=\"%s\"]', that.options.selectItemName));\n                if ($selectItem.length) {\n                    $selectItem[0].click(); // #144: .trigger('click') bug\n                }\n            }\n        });\n\n        this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', function () {\n            var $this = $(this),\n                $tr = $this.parent().parent(),\n                index = $tr.data('index'),\n                row = data[index]; // Fix #980 Detail view, when searching, returns wrong row\n\n            // remove and update\n            if ($tr.next().is('tr.detail-view')) {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailOpen));\n                that.trigger('collapse-row', index, row);\n                $tr.next().remove();\n            } else {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailClose));\n                $tr.after(sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.find('td').length));\n                var $element = $tr.next().find('td');\n                var content = calculateObjectValue(that.options, that.options.detailFormatter, [index, row, $element], '');\n                if($element.length === 1) {\n                    $element.append(content);\n                }\n                that.trigger('expand-row', index, row, $element);\n            }\n            that.resetView();\n            return false;\n        });\n\n        this.$selectItem = this.$body.find(sprintf('[name=\"%s\"]', this.options.selectItemName));\n        this.$selectItem.off('click').on('click', function (event) {\n            event.stopImmediatePropagation();\n\n            var $this = $(this),\n                checked = $this.prop('checked'),\n                row = that.data[$this.data('index')];\n\n            if (that.options.maintainSelected && $(this).is(':radio')) {\n                $.each(that.options.data, function (i, row) {\n                    row[that.header.stateField] = false;\n                });\n            }\n\n            row[that.header.stateField] = checked;\n\n            if (that.options.singleSelect) {\n                that.$selectItem.not(this).each(function () {\n                    that.data[$(this).data('index')][that.header.stateField] = false;\n                });\n                that.$selectItem.filter(':checked').not(this).prop('checked', false);\n            }\n\n            that.updateSelected();\n            that.trigger(checked ? 'check' : 'uncheck', row, $this);\n        });\n\n        $.each(this.header.events, function (i, events) {\n            if (!events) {\n                return;\n            }\n            // fix bug, if events is defined with namespace\n            if (typeof events === 'string') {\n                events = calculateObjectValue(null, events);\n            }\n\n            var field = that.header.fields[i],\n                fieldIndex = $.inArray(field, that.getVisibleFields());\n\n            if (that.options.detailView && !that.options.cardView) {\n                fieldIndex += 1;\n            }\n\n            for (var key in events) {\n                that.$body.find('>tr:not(.no-records-found)').each(function () {\n                    var $tr = $(this),\n                        $td = $tr.find(that.options.cardView ? '.card-view' : 'td').eq(fieldIndex),\n                        index = key.indexOf(' '),\n                        name = key.substring(0, index),\n                        el = key.substring(index + 1),\n                        func = events[key];\n\n                    $td.find(el).off(name).on(name, function (e) {\n                        var index = $tr.data('index'),\n                            row = that.data[index],\n                            value = row[field];\n\n                        func.apply(this, [e, value, row, index]);\n                    });\n                });\n            }\n        });\n\n        this.updateSelected();\n        this.resetView();\n\n        this.trigger('post-body', data);\n    };\n\n    BootstrapTable.prototype.initServer = function (silent, query, url) {\n        var that = this,\n            data = {},\n            params = {\n                searchText: this.searchText,\n                sortName: this.options.sortName,\n                sortOrder: this.options.sortOrder\n            },\n            request;\n\n        if (this.options.pagination) {\n            params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n                this.options.totalRows : this.options.pageSize;\n            params.pageNumber = this.options.pageNumber;\n        }\n\n        if (!(url || this.options.url) && !this.options.ajax) {\n            return;\n        }\n\n        if (this.options.queryParamsType === 'limit') {\n            params = {\n                search: params.searchText,\n                sort: params.sortName,\n                order: params.sortOrder\n            };\n\n            if (this.options.pagination) {\n                params.offset = this.options.pageSize === this.options.formatAllRows() ?\n                    0 : this.options.pageSize * (this.options.pageNumber - 1);\n                params.limit = this.options.pageSize === this.options.formatAllRows() ?\n                    this.options.totalRows : this.options.pageSize;\n            }\n        }\n\n        if (!($.isEmptyObject(this.filterColumnsPartial))) {\n            params.filter = JSON.stringify(this.filterColumnsPartial, null);\n        }\n\n        data = calculateObjectValue(this.options, this.options.queryParams, [params], data);\n\n        $.extend(data, query || {});\n\n        // false to stop request\n        if (data === false) {\n            return;\n        }\n\n        if (!silent) {\n            this.$tableLoading.show();\n        }\n        request = $.extend({}, calculateObjectValue(null, this.options.ajaxOptions), {\n            type: this.options.method,\n            url:  url || this.options.url,\n            data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n                JSON.stringify(data) : data,\n            cache: this.options.cache,\n            contentType: this.options.contentType,\n            dataType: this.options.dataType,\n            success: function (res) {\n                res = calculateObjectValue(that.options, that.options.responseHandler, [res], res);\n\n                that.load(res);\n                that.trigger('load-success', res);\n                if (!silent) that.$tableLoading.hide();\n            },\n            error: function (res) {\n                that.trigger('load-error', res.status, res);\n                if (!silent) that.$tableLoading.hide();\n            }\n        });\n\n        if (this.options.ajax) {\n            calculateObjectValue(this, this.options.ajax, [request], null);\n        } else {\n            if (this._xhr && this._xhr.readyState !== 4) {\n                this._xhr.abort();\n            }\n            this._xhr = $.ajax(request);\n        }\n    };\n\n    BootstrapTable.prototype.initSearchText = function () {\n        if (this.options.search) {\n            if (this.options.searchText !== '') {\n                var $search = this.$toolbar.find('.search input');\n                $search.val(this.options.searchText);\n                this.onSearch({currentTarget: $search});\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getCaret = function () {\n        var that = this;\n\n        $.each(this.$header.find('th'), function (i, th) {\n            $(th).find('.sortable').removeClass('desc asc').addClass($(th).data('field') === that.options.sortName ? that.options.sortOrder : 'both');\n        });\n    };\n\n    BootstrapTable.prototype.updateSelected = function () {\n        var checkAll = this.$selectItem.filter(':enabled').length &&\n            this.$selectItem.filter(':enabled').length ===\n            this.$selectItem.filter(':enabled').filter(':checked').length;\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checkAll);\n\n        this.$selectItem.each(function () {\n            $(this).closest('tr')[$(this).prop('checked') ? 'addClass' : 'removeClass']('selected');\n        });\n    };\n\n    BootstrapTable.prototype.updateRows = function () {\n        var that = this;\n\n        this.$selectItem.each(function () {\n            that.data[$(this).data('index')][that.header.stateField] = $(this).prop('checked');\n        });\n    };\n\n    BootstrapTable.prototype.resetRows = function () {\n        var that = this;\n\n        $.each(this.data, function (i, row) {\n            that.$selectAll.prop('checked', false);\n            that.$selectItem.prop('checked', false);\n            if (that.header.stateField) {\n                row[that.header.stateField] = false;\n            }\n        });\n        this.initHiddenRows();\n    };\n\n    BootstrapTable.prototype.trigger = function (name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        name += '.bs.table';\n        this.options[BootstrapTable.EVENTS[name]].apply(this.options, args);\n        this.$el.trigger($.Event(name), args);\n\n        this.options.onAll(name, args);\n        this.$el.trigger($.Event('all.bs.table'), [name, args]);\n    };\n\n    BootstrapTable.prototype.resetHeader = function () {\n        // fix #61: the hidden table reset header bug.\n        // fix bug: get $el.css('width') error sometime (height = 500)\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout($.proxy(this.fitHeader, this), this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitHeader = function () {\n        var that = this,\n            fixedBody,\n            scrollWidth,\n            focused,\n            focusedTemp;\n\n        if (that.$el.is(':hidden')) {\n            that.timeoutId_ = setTimeout($.proxy(that.fitHeader, that), 100);\n            return;\n        }\n        fixedBody = this.$tableBody.get(0);\n\n        scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n        fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            getScrollBarWidth() : 0;\n\n        this.$el.css('margin-top', -this.$header.outerHeight());\n\n        focused = $(':focus');\n        if (focused.length > 0) {\n            var $th = focused.parents('th');\n            if ($th.length > 0) {\n                var dataField = $th.attr('data-field');\n                if (dataField !== undefined) {\n                    var $headerTh = this.$header.find(\"[data-field='\" + dataField + \"']\");\n                    if ($headerTh.length > 0) {\n                        $headerTh.find(\":input\").addClass(\"focus-temp\");\n                    }\n                }\n            }\n        }\n\n        this.$header_ = this.$header.clone(true, true);\n        this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]');\n        this.$tableHeader.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', this.$el.outerWidth())\n            .html('').attr('class', this.$el.attr('class'))\n            .append(this.$header_);\n\n\n        focusedTemp = $('.focus-temp:visible:eq(0)');\n        if (focusedTemp.length > 0) {\n            focusedTemp.focus();\n            this.$header.find('.focus-temp').removeClass('focus-temp');\n        }\n\n        // fix bug: $.data() is not working as expected after $.append()\n        this.$header.find('th[data-field]').each(function (i) {\n            that.$header_.find(sprintf('th[data-field=\"%s\"]', $(this).data('field'))).data($(this).data());\n        });\n\n        var visibleFields = this.getVisibleFields(),\n            $ths = this.$header_.find('th');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this),\n                index = i;\n\n            if (that.options.detailView && !that.options.cardView) {\n                if (i === 0) {\n                    that.$header_.find('th.detail').find('.fht-cell').width($this.innerWidth());\n                }\n                index = i - 1;\n            }\n\n            var $th = that.$header_.find(sprintf('th[data-field=\"%s\"]', visibleFields[index]));\n            if ($th.length > 1) {\n                $th = $($ths[$this[0].cellIndex]);\n            }\n\n            $th.find('.fht-cell').width($this.innerWidth());\n        });\n        // horizontal scroll event\n        // TODO: it's probably better improving the layout than binding to scroll event\n        this.$tableBody.off('scroll').on('scroll', function () {\n            that.$tableHeader.scrollLeft($(this).scrollLeft());\n\n            if (that.options.showFooter && !that.options.cardView) {\n                that.$tableFooter.scrollLeft($(this).scrollLeft());\n            }\n        });\n        that.trigger('post-header');\n    };\n\n    BootstrapTable.prototype.resetFooter = function () {\n        var that = this,\n            data = that.getData(),\n            html = [];\n\n        if (!this.options.showFooter || this.options.cardView) { //do nothing\n            return;\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td><div class=\"th-inner\">&nbsp;</div><div class=\"fht-cell\"></div></td>');\n        }\n\n        $.each(this.columns, function (i, column) {\n            var key,\n                falign = '', // footer align style\n                valign = '',\n                csses = [],\n                style = {},\n                class_ = sprintf(' class=\"%s\"', column['class']);\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            falign = sprintf('text-align: %s; ', column.falign ? column.falign : column.align);\n            valign = sprintf('vertical-align: %s; ', column.valign);\n\n            style = calculateObjectValue(null, that.options.footerStyle);\n\n            if (style && style.css) {\n                for (key in style.css) {\n                    csses.push(key + ': ' + style.css[key]);\n                }\n            }\n\n            html.push('<td', class_, sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')), '>');\n            html.push('<div class=\"th-inner\">');\n\n            html.push(calculateObjectValue(column, column.footerFormatter, [data], '&nbsp;') || '&nbsp;');\n\n            html.push('</div>');\n            html.push('<div class=\"fht-cell\"></div>');\n            html.push('</div>');\n            html.push('</td>');\n        });\n\n        this.$tableFooter.find('tr').html(html.join(''));\n        this.$tableFooter.show();\n        clearTimeout(this.timeoutFooter_);\n        this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this),\n            this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitFooter = function () {\n        var that = this,\n            $footerTd,\n            elWidth,\n            scrollWidth;\n\n        clearTimeout(this.timeoutFooter_);\n        if (this.$el.is(':hidden')) {\n            this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this), 100);\n            return;\n        }\n\n        elWidth = this.$el.css('width');\n        scrollWidth = elWidth > this.$tableBody.width() ? getScrollBarWidth() : 0;\n\n        this.$tableFooter.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', elWidth)\n            .attr('class', this.$el.attr('class'));\n\n        $footerTd = this.$tableFooter.find('td');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this);\n\n            $footerTd.eq(i).find('.fht-cell').width($this.innerWidth());\n        });\n    };\n\n    BootstrapTable.prototype.toggleColumn = function (index, checked, needUpdate) {\n        if (index === -1) {\n            return;\n        }\n        this.columns[index].visible = checked;\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if (needUpdate) {\n                $items.filter(sprintf('[value=\"%s\"]', index)).prop('checked', checked);\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getVisibleFields = function () {\n        var that = this,\n            visibleFields = [];\n\n        $.each(this.header.fields, function (j, field) {\n            var column = that.columns[getFieldIndex(that.columns, field)];\n\n            if (!column.visible) {\n                return;\n            }\n            visibleFields.push(field);\n        });\n        return visibleFields;\n    };\n\n    // PUBLIC FUNCTION DEFINITION\n    // =======================\n\n    BootstrapTable.prototype.resetView = function (params) {\n        var padding = 0;\n\n        if (params && params.height) {\n            this.options.height = params.height;\n        }\n\n        this.$selectAll.prop('checked', this.$selectItem.length > 0 &&\n            this.$selectItem.length === this.$selectItem.filter(':checked').length);\n\n        if (this.options.height) {\n            var toolbarHeight = this.$toolbar.outerHeight(true),\n                paginationHeight = this.$pagination.outerHeight(true),\n                height = this.options.height - toolbarHeight - paginationHeight;\n\n            this.$tableContainer.css('height', height + 'px');\n        }\n\n        if (this.options.cardView) {\n            // remove the element css\n            this.$el.css('margin-top', '0');\n            this.$tableContainer.css('padding-bottom', '0');\n            this.$tableFooter.hide();\n            return;\n        }\n\n        if (this.options.showHeader && this.options.height) {\n            this.$tableHeader.show();\n            this.resetHeader();\n            padding += this.$header.outerHeight();\n        } else {\n            this.$tableHeader.hide();\n            this.trigger('post-header');\n        }\n\n        if (this.options.showFooter) {\n            this.resetFooter();\n            if (this.options.height) {\n                padding += this.$tableFooter.outerHeight() + 1;\n            }\n        }\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n        this.$tableContainer.css('padding-bottom', padding + 'px');\n        this.trigger('reset-view');\n    };\n\n    BootstrapTable.prototype.getData = function (useCurrentPage) {\n        return (this.searchText || !$.isEmptyObject(this.filterColumns) || !$.isEmptyObject(this.filterColumnsPartial)) ?\n            (useCurrentPage ? this.data.slice(this.pageFrom - 1, this.pageTo) : this.data) :\n            (useCurrentPage ? this.options.data.slice(this.pageFrom - 1, this.pageTo) : this.options.data);\n    };\n\n    BootstrapTable.prototype.load = function (data) {\n        var fixedScroll = false;\n\n        // #431: support pagination\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows = data[this.options.totalField];\n            fixedScroll = data.fixedScroll;\n            data = data[this.options.dataField];\n        } else if (!$.isArray(data)) { // support fixedScroll\n            fixedScroll = data.fixedScroll;\n            data = data.data;\n        }\n\n        this.initData(data);\n        this.initSearch();\n        this.initPagination();\n        this.initBody(fixedScroll);\n    };\n\n    BootstrapTable.prototype.append = function (data) {\n        this.initData(data, 'append');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.prepend = function (data) {\n        this.initData(data, 'prepend');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.remove = function (params) {\n        var len = this.options.data.length,\n            i, row;\n\n        if (!params.hasOwnProperty('field') || !params.hasOwnProperty('values')) {\n            return;\n        }\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (!row.hasOwnProperty(params.field)) {\n                continue;\n            }\n            if ($.inArray(row[params.field], params.values) !== -1) {\n                this.options.data.splice(i, 1);\n                if (this.options.sidePagination === 'server') {\n                    this.options.totalRows -= 1;\n                }\n            }\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.removeAll = function () {\n        if (this.options.data.length > 0) {\n            this.options.data.splice(0, this.options.data.length);\n            this.initSearch();\n            this.initPagination();\n            this.initBody(true);\n        }\n    };\n\n    BootstrapTable.prototype.getRowByUniqueId = function (id) {\n        var uniqueId = this.options.uniqueId,\n            len = this.options.data.length,\n            dataRow = null,\n            i, row, rowUniqueId;\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (row.hasOwnProperty(uniqueId)) { // uniqueId is a column\n                rowUniqueId = row[uniqueId];\n            } else if(row._data.hasOwnProperty(uniqueId)) { // uniqueId is a row data property\n                rowUniqueId = row._data[uniqueId];\n            } else {\n                continue;\n            }\n\n            if (typeof rowUniqueId === 'string') {\n                id = id.toString();\n            } else if (typeof rowUniqueId === 'number') {\n                if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n                    id = parseInt(id);\n                } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n                    id = parseFloat(id);\n                }\n            }\n\n            if (rowUniqueId === id) {\n                dataRow = row;\n                break;\n            }\n        }\n\n        return dataRow;\n    };\n\n    BootstrapTable.prototype.removeByUniqueId = function (id) {\n        var len = this.options.data.length,\n            row = this.getRowByUniqueId(id);\n\n        if (row) {\n            this.options.data.splice(this.options.data.indexOf(row), 1);\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateByUniqueId = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            var rowId;\n\n            if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n                return;\n            }\n\n            rowId = $.inArray(that.getRowByUniqueId(params.id), that.options.data);\n\n            if (rowId === -1) {\n                return;\n            }\n            $.extend(that.options.data[rowId], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.insertRow = function (params) {\n        if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n            return;\n        }\n        this.data.splice(params.index, 0, params.row);\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateRow = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n                return;\n            }\n            $.extend(that.options.data[params.index], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.initHiddenRows = function () {\n        this.hiddenRows = [];\n    };\n\n    BootstrapTable.prototype.showRow = function (params) {\n        this.toggleRow(params, true);\n    };\n\n    BootstrapTable.prototype.hideRow = function (params) {\n        this.toggleRow(params, false);\n    };\n\n    BootstrapTable.prototype.toggleRow = function (params, visible) {\n        var row, index;\n\n        if (params.hasOwnProperty('index')) {\n            row = this.getData()[params.index];\n        } else if (params.hasOwnProperty('uniqueId')) {\n            row = this.getRowByUniqueId(params.uniqueId);\n        }\n\n        if (!row) {\n            return;\n        }\n\n        index = $.inArray(row, this.hiddenRows);\n\n        if (!visible && index === -1) {\n            this.hiddenRows.push(row);\n        } else if (visible && index > -1) {\n            this.hiddenRows.splice(index, 1);\n        }\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getHiddenRows = function (show) {\n        var that = this,\n            data = this.getData(),\n            rows = [];\n\n        $.each(data, function (i, row) {\n            if ($.inArray(row, that.hiddenRows) > -1) {\n                rows.push(row);\n            }\n        });\n        this.hiddenRows = rows;\n        return rows;\n    };\n\n    BootstrapTable.prototype.mergeCells = function (options) {\n        var row = options.index,\n            col = $.inArray(options.field, this.getVisibleFields()),\n            rowspan = options.rowspan || 1,\n            colspan = options.colspan || 1,\n            i, j,\n            $tr = this.$body.find('>tr'),\n            $td;\n\n        if (this.options.detailView && !this.options.cardView) {\n            col += 1;\n        }\n\n        $td = $tr.eq(row).find('>td').eq(col);\n\n        if (row < 0 || col < 0 || row >= this.data.length) {\n            return;\n        }\n\n        for (i = row; i < row + rowspan; i++) {\n            for (j = col; j < col + colspan; j++) {\n                $tr.eq(i).find('>td').eq(j).hide();\n            }\n        }\n\n        $td.attr('rowspan', rowspan).attr('colspan', colspan).show();\n    };\n\n    BootstrapTable.prototype.updateCell = function (params) {\n        if (!params.hasOwnProperty('index') ||\n            !params.hasOwnProperty('field') ||\n            !params.hasOwnProperty('value')) {\n            return;\n        }\n        this.data[params.index][params.field] = params.value;\n\n        if (params.reinit === false) {\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getOptions = function () {\n        return this.options;\n    };\n\n    BootstrapTable.prototype.getSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            // fix #2424: from html with checkbox\n            return row[that.header.stateField] === true;\n        });\n    };\n\n    BootstrapTable.prototype.getAllSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            return row[that.header.stateField];\n        });\n    };\n\n    BootstrapTable.prototype.checkAll = function () {\n        this.checkAll_(true);\n    };\n\n    BootstrapTable.prototype.uncheckAll = function () {\n        this.checkAll_(false);\n    };\n\n    BootstrapTable.prototype.checkInvert = function () {\n        var that = this;\n        var rows = that.$selectItem.filter(':enabled');\n        var checked = rows.filter(':checked');\n        rows.each(function() {\n            $(this).prop('checked', !$(this).prop('checked'));\n        });\n        that.updateRows();\n        that.updateSelected();\n        that.trigger('uncheck-some', checked);\n        checked = that.getSelections();\n        that.trigger('check-some', checked);\n    };\n\n    BootstrapTable.prototype.checkAll_ = function (checked) {\n        var rows;\n        if (!checked) {\n            rows = this.getSelections();\n        }\n        this.$selectAll.add(this.$selectAll_).prop('checked', checked);\n        this.$selectItem.filter(':enabled').prop('checked', checked);\n        this.updateRows();\n        if (checked) {\n            rows = this.getSelections();\n        }\n        this.trigger(checked ? 'check-all' : 'uncheck-all', rows);\n    };\n\n    BootstrapTable.prototype.check = function (index) {\n        this.check_(true, index);\n    };\n\n    BootstrapTable.prototype.uncheck = function (index) {\n        this.check_(false, index);\n    };\n\n    BootstrapTable.prototype.check_ = function (checked, index) {\n        var $el = this.$selectItem.filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n        this.data[index][this.header.stateField] = checked;\n        this.updateSelected();\n        this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el);\n    };\n\n    BootstrapTable.prototype.checkBy = function (obj) {\n        this.checkBy_(true, obj);\n    };\n\n    BootstrapTable.prototype.uncheckBy = function (obj) {\n        this.checkBy_(false, obj);\n    };\n\n    BootstrapTable.prototype.checkBy_ = function (checked, obj) {\n        if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n            return;\n        }\n\n        var that = this,\n            rows = [];\n        $.each(this.options.data, function (index, row) {\n            if (!row.hasOwnProperty(obj.field)) {\n                return false;\n            }\n            if ($.inArray(row[obj.field], obj.values) !== -1) {\n                var $el = that.$selectItem.filter(':enabled')\n                    .filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n                row[that.header.stateField] = checked;\n                rows.push(row);\n                that.trigger(checked ? 'check' : 'uncheck', row, $el);\n            }\n        });\n        this.updateSelected();\n        this.trigger(checked ? 'check-some' : 'uncheck-some', rows);\n    };\n\n    BootstrapTable.prototype.destroy = function () {\n        this.$el.insertBefore(this.$container);\n        $(this.options.toolbar).insertBefore(this.$el);\n        this.$container.next().remove();\n        this.$container.remove();\n        this.$el.html(this.$el_.html())\n            .css('margin-top', '0')\n            .attr('class', this.$el_.attr('class') || ''); // reset the class\n    };\n\n    BootstrapTable.prototype.showLoading = function () {\n        this.$tableLoading.show();\n    };\n\n    BootstrapTable.prototype.hideLoading = function () {\n        this.$tableLoading.hide();\n    };\n\n    BootstrapTable.prototype.togglePagination = function () {\n        this.options.pagination = !this.options.pagination;\n        var button = this.$toolbar.find('button[name=\"paginationSwitch\"] i');\n        if (this.options.pagination) {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchDown);\n        } else {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchUp);\n        }\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.refresh = function (params) {\n        if (params && params.url) {\n            this.options.url = params.url;\n        }\n        if (params && params.pageNumber) {\n            this.options.pageNumber = params.pageNumber;\n        }\n        if (params && params.pageSize) {\n            this.options.pageSize = params.pageSize;\n        }\n        this.initServer(params && params.silent,\n            params && params.query, params && params.url);\n        this.trigger('refresh', params);\n    };\n\n    BootstrapTable.prototype.resetWidth = function () {\n        if (this.options.showHeader && this.options.height) {\n            this.fitHeader();\n        }\n        if (this.options.showFooter) {\n            this.fitFooter();\n        }\n    };\n\n    BootstrapTable.prototype.showColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), true, true);\n    };\n\n    BootstrapTable.prototype.hideColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), false, true);\n    };\n\n    BootstrapTable.prototype.getHiddenColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return !column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.getVisibleColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.toggleAllColumns = function (visible) {\n        $.each(this.columns, function (i, column) {\n            this.columns[i].visible = visible;\n        });\n\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.showAllColumns = function () {\n        this.toggleAllColumns(true);\n    };\n\n    BootstrapTable.prototype.hideAllColumns = function () {\n        this.toggleAllColumns(false);\n    };\n\n    BootstrapTable.prototype.filterBy = function (columns) {\n        this.filterColumns = $.isEmptyObject(columns) ? {} : columns;\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.scrollTo = function (value) {\n        if (typeof value === 'string') {\n            value = value === 'bottom' ? this.$tableBody[0].scrollHeight : 0;\n        }\n        if (typeof value === 'number') {\n            this.$tableBody.scrollTop(value);\n        }\n        if (typeof value === 'undefined') {\n            return this.$tableBody.scrollTop();\n        }\n    };\n\n    BootstrapTable.prototype.getScrollPosition = function () {\n        return this.scrollTo();\n    };\n\n    BootstrapTable.prototype.selectPage = function (page) {\n        if (page > 0 && page <= this.options.totalPages) {\n            this.options.pageNumber = page;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.prevPage = function () {\n        if (this.options.pageNumber > 1) {\n            this.options.pageNumber--;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.nextPage = function () {\n        if (this.options.pageNumber < this.options.totalPages) {\n            this.options.pageNumber++;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.toggleView = function () {\n        this.options.cardView = !this.options.cardView;\n        this.initHeader();\n        // Fixed remove toolbar when click cardView button.\n        //that.initToolbar();\n        this.initBody();\n        this.trigger('toggle', this.options.cardView);\n    };\n\n    BootstrapTable.prototype.refreshOptions = function (options) {\n        //If the objects are equivalent then avoid the call of destroy / init methods\n        if (compareObjects(this.options, options, true)) {\n            return;\n        }\n        this.options = $.extend(this.options, options);\n        this.trigger('refresh-options', this.options);\n        this.destroy();\n        this.init();\n    };\n\n    BootstrapTable.prototype.resetSearch = function (text) {\n        var $search = this.$toolbar.find('.search input');\n        $search.val(text || '');\n        this.onSearch({currentTarget: $search});\n    };\n\n    BootstrapTable.prototype.expandRow_ = function (expand, index) {\n        var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', index));\n        if ($tr.next().is('tr.detail-view') === (expand ? false : true)) {\n            $tr.find('> td > .detail-icon').click();\n        }\n    };\n\n    BootstrapTable.prototype.expandRow = function (index) {\n        this.expandRow_(true, index);\n    };\n\n    BootstrapTable.prototype.collapseRow = function (index) {\n        this.expandRow_(false, index);\n    };\n\n    BootstrapTable.prototype.expandAllRows = function (isSubTable) {\n        if (isSubTable) {\n            var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', 0)),\n                that = this,\n                detailIcon = null,\n                executeInterval = false,\n                idInterval = -1;\n\n            if (!$tr.next().is('tr.detail-view')) {\n                $tr.find('> td > .detail-icon').click();\n                executeInterval = true;\n            } else if (!$tr.next().next().is('tr.detail-view')) {\n                $tr.next().find(\".detail-icon\").click();\n                executeInterval = true;\n            }\n\n            if (executeInterval) {\n                try {\n                    idInterval = setInterval(function () {\n                        detailIcon = that.$body.find(\"tr.detail-view\").last().find(\".detail-icon\");\n                        if (detailIcon.length > 0) {\n                            detailIcon.click();\n                        } else {\n                            clearInterval(idInterval);\n                        }\n                    }, 1);\n                } catch (ex) {\n                    clearInterval(idInterval);\n                }\n            }\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(true, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.collapseAllRows = function (isSubTable) {\n        if (isSubTable) {\n            this.expandRow_(false, 0);\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(false, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.updateFormatText = function (name, text) {\n        if (this.options[sprintf('format%s', name)]) {\n            if (typeof text === 'string') {\n                this.options[sprintf('format%s', name)] = function () {\n                    return text;\n                };\n            } else if (typeof text === 'function') {\n                this.options[sprintf('format%s', name)] = text;\n            }\n        }\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n    };\n\n    // BOOTSTRAP TABLE PLUGIN DEFINITION\n    // =======================\n\n    var allowedMethods = [\n        'getOptions',\n        'getSelections', 'getAllSelections', 'getData',\n        'load', 'append', 'prepend', 'remove', 'removeAll',\n        'insertRow', 'updateRow', 'updateCell', 'updateByUniqueId', 'removeByUniqueId',\n        'getRowByUniqueId', 'showRow', 'hideRow', 'getHiddenRows',\n        'mergeCells',\n        'checkAll', 'uncheckAll', 'checkInvert',\n        'check', 'uncheck',\n        'checkBy', 'uncheckBy',\n        'refresh',\n        'resetView',\n        'resetWidth',\n        'destroy',\n        'showLoading', 'hideLoading',\n        'showColumn', 'hideColumn', 'getHiddenColumns', 'getVisibleColumns',\n        'showAllColumns', 'hideAllColumns',\n        'filterBy',\n        'scrollTo',\n        'getScrollPosition',\n        'selectPage', 'prevPage', 'nextPage',\n        'togglePagination',\n        'toggleView',\n        'refreshOptions',\n        'resetSearch',\n        'expandRow', 'collapseRow', 'expandAllRows', 'collapseAllRows',\n        'updateFormatText'\n    ];\n\n    $.fn.bootstrapTable = function (option) {\n        var value,\n            args = Array.prototype.slice.call(arguments, 1);\n\n        this.each(function () {\n            var $this = $(this),\n                data = $this.data('bootstrap.table'),\n                options = $.extend({}, BootstrapTable.DEFAULTS, $this.data(),\n                    typeof option === 'object' && option);\n\n            if (typeof option === 'string') {\n                if ($.inArray(option, allowedMethods) < 0) {\n                    throw new Error(\"Unknown method: \" + option);\n                }\n\n                if (!data) {\n                    return;\n                }\n\n                value = data[option].apply(data, args);\n\n                if (option === 'destroy') {\n                    $this.removeData('bootstrap.table');\n                }\n            }\n\n            if (!data) {\n                $this.data('bootstrap.table', (data = new BootstrapTable(this, options)));\n            }\n        });\n\n        return typeof value === 'undefined' ? this : value;\n    };\n\n    $.fn.bootstrapTable.Constructor = BootstrapTable;\n    $.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS;\n    $.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS;\n    $.fn.bootstrapTable.locales = BootstrapTable.LOCALES;\n    $.fn.bootstrapTable.methods = allowedMethods;\n    $.fn.bootstrapTable.utils = {\n        sprintf: sprintf,\n        getFieldIndex: getFieldIndex,\n        compareObjects: compareObjects,\n        calculateObjectValue: calculateObjectValue,\n        getItemField: getItemField,\n        objectKeys: objectKeys,\n        isIEBrowser: isIEBrowser\n    };\n\n    // BOOTSTRAP TABLE INIT\n    // =======================\n\n    $(function () {\n        $('[data-toggle=\"table\"]').bootstrapTable();\n    });\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bootstrap-table/dist/bootstrap-table.js\n// module id = 86\n// module chunks = 0 1 2 3 5 6","/**\n * Bootstrap Table Spanish (España) translation\n * Author: Antonio Pérez <anpegar@gmail.com>\n */\n (function ($) {\n    'use strict';\n    \n    $.fn.bootstrapTable.locales['es-SP'] = {\n        formatLoadingMessage: function () {\n            return 'Cargando, por favor espera...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return pageNumber + ' registros por p&#225;gina.';\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return pageFrom + ' - ' + pageTo + ' de ' + totalRows + ' registros.';\n        },\n        formatSearch: function () {\n            return 'Buscar';\n        },\n        formatNoMatches: function () {\n            return 'No se han encontrado registros.';\n        },\n        formatRefresh: function () {\n            return 'Actualizar';\n        },\n        formatToggle: function () {\n            return 'Alternar';\n        },\n        formatColumns: function () {\n            return 'Columnas';\n        },\n        formatAllRows: function () {\n            return 'Todo';\n        }\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales['es-SP']);\n\n})(jQuery);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP.js\n// module id = 87\n// module chunks = 0 1 2 3 5 6","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"display\",attrs:{\"id\":_vm.ids,\"cellspacing\":\"0\",\"width\":\"100%\"}},[_c('thead'),_c('tbody')])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-357e043f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/modules/sharedComponents/DataTable.vue\n// module id = 88\n// module chunks = 0 1 2 3 5 6"],"sourceRoot":""}