{"version":3,"sources":["webpack:///assets/js/2.js","webpack:///src/modules/home/HomeSection.vue","webpack:///./src/modules/home/components/DetailCards.vue","webpack:///src/modules/home/components/DetailCards.vue","webpack:///./src/modules/home/components/DetailCards.vue?02d7","webpack:///./src/modules/home/components/SearchClientModal.vue","webpack:///src/modules/home/components/SearchClientModal.vue","webpack:///./src/modules/home/components/SearchClientModal.vue?4813","webpack:///./src/modules/home/HomeSection.vue?2d15","webpack:///./src/modules/home/HomeSection.vue","webpack:///./src/modules/sharedComponents/DataTable.vue","webpack:///src/modules/sharedComponents/DataTable.vue","webpack:///./node_modules/bootstrap-table/dist/bootstrap-table.js","webpack:///./node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP.js","webpack:///./src/modules/sharedComponents/DataTable.vue?0c45","webpack:///./src/modules/clientes/store/clientStore.js"],"names":["webpackJsonp","103","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0__components_DetailCards_vue__","__WEBPACK_IMPORTED_MODULE_1__components_SearchClientModal_vue__","store","window","appStore","name","components","DetailCards","SearchClientModal","mounted","this","getDate","data","date","day","monthYear","dayWeek","hour","methods","updateHour","Date","self","months","getMonth","getFullYear","days","getDay","toLocaleTimeString","setInterval","computed","logo","company","baseURL","104","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DetailCards_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7a82caf3_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DetailCards_vue__","normalizeComponent","Component","105","props","type","Object","required","mode","moveControls","position","$","animate","left","106","render","_vm","_h","$createElement","_c","_self","staticClass","_m","attrs","data-toggle","data-target","_v","_s","_f","pettyCashBalance","on","click","$event","staticRenderFns","target","href","esExports","107","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SearchClientModal_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_78913874_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_SearchClientModal_vue__","108","__WEBPACK_IMPORTED_MODULE_0__sharedComponents_DataTable_vue__","__WEBPACK_IMPORTED_MODULE_1__clientes_store_clientStore__","__WEBPACK_IMPORTED_MODULE_1__clientes_store_clientStore___default","n","DataTable","clientStore","a","parentId","toolbar","clients","tableOptions","pageSize","search","placeholder","cols","columns","getClients","_this","word","$http","post","getDataForm","then","res","catch","err","$toasted","error","109","tabindex","role","id","staticStyle","margin-bottom","width","directives","rawName","value","expression","domProps","keyup","input","composing","ids","options","data-dismiss","stopPropagation","preventDefault","sendMessage","aria-label","aria-hidden","110","src","alt","nombre","currentUser","76","defineProperty","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_HomeSection_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1cbcb835_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_HomeSection_vue__","84","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_357e043f_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__","85","_defineProperty","obj","key","enumerable","configurable","writable","__WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__","Array","String","endpoint","init","refresh","watch","intialized","table","$filter","activate","listen","page","bootstrapTable","sortOrder","showRefresh","showColumns","showExport","minimumCountColumns","showPaginationSwitch","pagination","idField","pageList","showFooter","clickToSelect","singleSelect","striped","fixed","footer","find","css","display","addClass","change","initialized","customSearch","getSelectedRow","emit","arguments","length","undefined","row","$emit","getId","map","content","html","pageNumber","e","args","resize","$inputSearch","parent","removeClass","filterWord","val","states","applyFilter","filter","stateField","86","cachedWidth","sprintf","str","flag","i","replace","arg","getPropertyFromOther","list","from","to","result","each","item","getFieldIndex","field","index","column","setFieldIndex","j","k","totalCol","colspan","r","rowspan","inArray","fieldIndex","getScrollBarWidth","w1","w2","inner","outer","append","offsetWidth","clientWidth","remove","calculateObjectValue","defaultValue","func","names","split","f","apply","concat","compareObjects","objectA","objectB","compareLength","objectAProperties","getOwnPropertyNames","objectBProperties","propName","escapeHTML","text","getRealDataAttr","dataAttr","attr","auxAttr","join","toLowerCase","getItemField","escape","hasOwnProperty","p","isIEBrowser","navigator","userAgent","indexOf","match","objectKeys","keys","prototype","hasDontEnumBug","toString","propertyIsEnumerable","dontEnums","dontEnumsLength","TypeError","prop","call","push","BootstrapTable","el","$el","$el_","clone","timeoutId_","timeoutFooter_","DEFAULTS","classes","sortClass","locale","height","undefinedText","sortName","sortStable","totalField","dataField","method","url","ajax","cache","contentType","dataType","ajaxOptions","queryParams","params","queryParamsType","responseHandler","onlyInfoPagination","paginationLoop","sidePagination","totalRows","paginationHAlign","paginationVAlign","paginationDetailHAlign","paginationPreText","paginationNextText","searchOnEnterKey","strictSearch","searchAlign","selectItemName","showHeader","showToggle","buttonsAlign","smartDisplay","uniqueId","cardView","detailView","detailFormatter","trimOnSearch","toolbarAlign","checkboxHeader","sortable","silentSort","maintainSelected","searchTimeOut","searchText","iconSize","buttonsClass","iconsPrefix","icons","paginationSwitchDown","paginationSwitchUp","toggle","detailOpen","detailClose","noop","customSort","rowStyle","rowAttributes","footerStyle","onAll","onClickCell","$element","onDblClickCell","onClickRow","onDblClickRow","onSort","order","onCheck","onUncheck","onCheckAll","rows","onUncheckAll","onCheckSome","onUncheckSome","onLoadSuccess","onLoadError","status","onColumnSwitch","checked","onPageChange","number","size","onSearch","onToggle","onPreBody","onPostBody","onPostHeader","onExpandRow","$detail","onCollapseRow","onRefreshOptions","onRefresh","onResetView","LOCALES","en","formatLoadingMessage","formatRecordsPerPage","formatShowingRows","pageFrom","pageTo","formatDetailPagination","formatSearch","formatNoMatches","formatPaginationSwitch","formatRefresh","formatToggle","formatColumns","formatAllRows","extend","COLUMN_DEFAULTS","radio","checkbox","checkboxEnabled","title","titleTooltip","class","align","halign","falign","valign","visible","switchable","formatter","footerFormatter","events","sorter","cellStyle","searchable","searchFormatter","cardVisible","EVENTS","all.bs.table","click-cell.bs.table","dbl-click-cell.bs.table","click-row.bs.table","dbl-click-row.bs.table","sort.bs.table","check.bs.table","uncheck.bs.table","check-all.bs.table","uncheck-all.bs.table","check-some.bs.table","uncheck-some.bs.table","load-success.bs.table","load-error.bs.table","column-switch.bs.table","page-change.bs.table","search.bs.table","toggle.bs.table","pre-body.bs.table","post-body.bs.table","post-header.bs.table","expand-row.bs.table","collapse-row.bs.table","refresh-options.bs.table","reset-view.bs.table","refresh.bs.table","initLocale","initContainer","initTable","initHeader","initData","initHiddenRows","initFooter","initToolbar","initPagination","initBody","initSearchText","initServer","parts","toUpperCase","fn","locales","$container","insertAfter","$tableContainer","$tableHeader","$tableBody","$tableLoading","$tableFooter","$toolbar","$pagination","after","that","$header","appendTo","isArray","m","y","_id","_class","_data","x","tx","ty","$this","cspan","rspan","fromHtml","visibleColumns","header","fields","styles","formatters","sorters","sortNames","cellStyles","searchables","style","class_","unitWidth","off","event","closest","children","keyCode","which","hide","show","outerHeight","getCaret","proxy","resetWidth","$selectAll","updateSelected","initSort","timeoutId","_position","sort","b","aa","bb","isNumeric","parseFloat","localeCompare","clearTimeout","setTimeout","currentTarget","$this_","eq","add","$header_","trigger","$keepOpen","$search","switchableCount","showToolbar","togglePagination","toggleView","stopImmediatePropagation","toggleColumn","trim","initSearch","updatePagination","s","isEmptyObject","filterColumns","grep","parseInt","prop_index","$pageList","$first","$pre","$next","$last","$number","$allSelected","getData","totalPages","pageLst","active","onPageListChange","onPageFirst","onPagePre","onPageNext","onPageLast","onPageNumber","hasClass","resetRows","siblings","initRow","parentDom","csses","data_","attributes","htmlAttributes","hiddenRows","v","value_","id_","rowspan_","colspan_","title_","csses_","disabled","fixedScroll","$body","hasTr","trFragments","document","createDocumentFragment","tr","scrollTo","$td","$tr","cellIndex","getVisibleFields","$selectItem","next","is","resetView","not","substring","silent","query","request","offset","limit","filterColumnsPartial","JSON","stringify","success","load","_xhr","readyState","abort","th","checkAll","$selectAll_","updateRows","slice","Event","resetHeader","fitHeader","fixedBody","scrollWidth","focused","focusedTemp","get","scrollHeight","clientHeight","$th","parents","$headerTh","margin-right","outerWidth","focus","visibleFields","$ths","innerWidth","scrollLeft","resetFooter","fitFooter","$footerTd","elWidth","needUpdate","$items","padding","toolbarHeight","paginationHeight","useCurrentPage","prepend","len","values","splice","removeAll","getRowByUniqueId","rowUniqueId","dataRow","Number","removeByUniqueId","updateByUniqueId","allParams","rowId","insertRow","updateRow","showRow","toggleRow","hideRow","getHiddenRows","mergeCells","col","updateCell","reinit","getOptions","getSelections","getAllSelections","checkAll_","uncheckAll","checkInvert","check","check_","uncheck","checkBy","checkBy_","uncheckBy","destroy","insertBefore","showLoading","hideLoading","button","showColumn","hideColumn","getHiddenColumns","getVisibleColumns","toggleAllColumns","showAllColumns","hideAllColumns","filterBy","scrollTop","getScrollPosition","selectPage","prevPage","nextPage","refreshOptions","resetSearch","expandRow_","expand","expandRow","collapseRow","expandAllRows","isSubTable","detailIcon","executeInterval","idInterval","last","clearInterval","ex","trs","collapseAllRows","updateFormatText","allowedMethods","option","Error","removeData","Constructor","defaults","columnDefaults","utils","jQuery","87","exports","88","cellspacing","94","_classCallCheck","instance","_createClass","defineProperties","descriptor","protoProps","staticProps","ClientStore","clientMode","client","nombres","apellidos","cedula","celular","provincia","sector","calle","casa","detalles_direccion","telefono","lugar_trabajo","tel_trabajo","ingresos","lugarTrabajo","telTrabajo","default"],"mappings":"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","file":"assets/js/2.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 103:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_DetailCards_vue__ = __webpack_require__(104);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_SearchClientModal_vue__ = __webpack_require__(107);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\nvar store = window.appStore;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'home-section',\n  components: {\n    DetailCards: __WEBPACK_IMPORTED_MODULE_0__components_DetailCards_vue__[\"a\" /* default */],\n    SearchClientModal: __WEBPACK_IMPORTED_MODULE_1__components_SearchClientModal_vue__[\"a\" /* default */]\n  },\n  mounted: function mounted() {\n    this.getDate();\n  },\n  data: function data() {\n    return {\n      store: store,\n      date: {\n        day: '',\n        monthYear: '',\n        dayWeek: '',\n        hour: ''\n      }\n    };\n  },\n\n\n  methods: {\n    getDate: function getDate() {\n      var self = this;\n      var days = ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado'];\n      var months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n\n      function updateHour() {\n        var date = new Date();\n        self.date.day = date.getDate();\n        self.date.monthYear = 'De ' + months[date.getMonth()] + ' de ' + date.getFullYear();\n        self.date.dayWeek = days[date.getDay()];\n        self.date.hour = date.toLocaleTimeString();\n      }\n\n      setInterval(updateHour, 1000);\n    }\n  },\n\n  computed: {\n    logo: function logo() {\n      var logo = this.store.company.logo || 'company/default.png';\n      return baseURL + 'assets/uploads/' + logo;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 104:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DetailCards_vue__ = __webpack_require__(105);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7a82caf3_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DetailCards_vue__ = __webpack_require__(106);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DetailCards_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_7a82caf3_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DetailCards_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 105:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    store: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      mode: ''\n    };\n  },\n  mounted: function mounted() {\n    this.moveControls();\n  },\n\n\n  methods: {\n    moveControls: function moveControls(position) {\n      var layoutContainer = $('.layout-container');\n      layoutContainer.animate({\n        left: position + '%'\n      }, 200);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 106:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-4 col-xs-12 details-card\"},[_c('div',{staticClass:\"layout-container\"},[_vm._m(0,false,false),_c('div',{staticClass:\"averias-layer\"},[_c('h3',{staticClass:\"card-title\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#notification-view\"}},[_vm._v(\"Caja Chica\")]),_vm._m(1,false,false),_c('div',{staticClass:\"list-repair centered-container\"},[_c('h2',{staticClass:\"current-saldo\"},[_vm._v(_vm._s(_vm._f(\"currencyFormat\")(_vm.store.pettyCashBalance)))])])]),_vm._m(2,false,false),_vm._m(3,false,false)]),_c('div',{staticClass:\"details-control-container\"},[_c('button',{staticClass:\"detail-control\",on:{\"click\":function($event){_vm.moveControls(0)}}},[_vm._v(\"Pagos\")]),_c('button',{staticClass:\"detail-control\",on:{\"click\":function($event){_vm.moveControls(-100)}}},[_vm._v(\"Caja Chica\")]),_c('button',{staticClass:\"detail-control\",on:{\"click\":function($event){_vm.moveControls(-200)}}},[_vm._v(\"Deudores\")]),_c('button',{staticClass:\"detail-control\",on:{\"click\":function($event){_vm.moveControls(-300)}}},[_vm._v(\"Ganancias\")])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pagos-layer\"},[_c('h3',{staticClass:\"card-title\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#notification-view\"}},[_vm._v(\"Proximos Pagos\")]),_c('div',{staticClass:\"placeholder-icon\"},[_c('i',{staticClass:\"material-icons icon-placeholder\"},[_vm._v(\"notifications_active\")])]),_c('div',{staticClass:\"list-nextpayments\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"placeholder-icon\"},[_c('i',{staticClass:\"material-icons icon-placeholder\"},[_vm._v(\"money\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"deudores-layer\"},[_c('h3',{staticClass:\"card-title\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#notification-view\"}},[_vm._v(\"Lista de Deudores\")]),_c('div',{staticClass:\"placeholder-icon\"},[_c('i',{staticClass:\"material-icons icon-placeholder\"},[_vm._v(\"money_off\")])]),_c('div',{staticClass:\"list-nextpayments\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"day-income-layer\"},[_c('h3',{staticClass:\"card-title\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#notification-view\"}},[_vm._v(\"Ganancias del dia\")]),_c('div',{staticClass:\"list-repair centered-container\"},[_c('a',{attrs:{\"target\":\"_blank\",\"href\":\"base_url('process/getreport/payment/today\"}}),_c('h2',{staticClass:\"current-saldo\"},[_vm._v(\"day_income\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 107:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SearchClientModal_vue__ = __webpack_require__(108);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_78913874_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_SearchClientModal_vue__ = __webpack_require__(109);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_SearchClientModal_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_78913874_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_SearchClientModal_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 108:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__sharedComponents_DataTable_vue__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__clientes_store_clientStore__ = __webpack_require__(94);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__clientes_store_clientStore___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__clientes_store_clientStore__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  components: {\n    DataTable: __WEBPACK_IMPORTED_MODULE_0__sharedComponents_DataTable_vue__[\"a\" /* default */]\n  },\n\n  data: function data() {\n    var clientStore = new __WEBPACK_IMPORTED_MODULE_1__clientes_store_clientStore___default.a();\n\n    return {\n      parentId: '#search-client-container',\n      toolbar: '#search-client-toolbar',\n      clients: '',\n      tableOptions: {\n        pageSize: 5\n      },\n      clientStore: clientStore,\n      search: '',\n      placeholder: 'Busque cliente por cedula, nombre, apellidos o id',\n\n      cols: clientStore.columns\n    };\n  },\n\n\n  methods: {\n    getClients: function getClients() {\n      var _this = this;\n\n      var data = { word: this.search };\n      this.$http.post('clients/get_clients/search', this.getDataForm(data)).then(function (res) {\n        _this.clients = res.data.clients;\n      }).catch(function (err) {\n        _this.$toasted.error(err);\n      });\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 109:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade\",attrs:{\"tabindex\":\"-1\",\"role\":\"dialog\",\"id\":\"search-client-modal\"}},[_c('div',{staticClass:\"modal-dialog modal-lg\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_vm._m(0,false,false),_c('div',{staticClass:\"modal-body\"},[_c('div',{attrs:{\"id\":\"search-client-container\"}},[_c('div',{staticClass:\"searcher-container main-toolbar\",staticStyle:{\"margin-bottom\":\"0\"},attrs:{\"id\":\"search-client-toolbar\"}},[_c('div',{staticClass:\"input-group search\",staticStyle:{\"width\":\"100%\",\"margin-bottom\":\"5px\"}},[_vm._m(1,false,false),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search),expression:\"search\"}],staticClass:\"form-control searcher\",attrs:{\"id\":\"client-searcher\",\"type\":\"text\",\"placeholder\":_vm.placeholder},domProps:{\"value\":(_vm.search)},on:{\"keyup\":_vm.getClients,\"input\":function($event){if($event.target.composing){ return; }_vm.search=$event.target.value}}})])]),_c('DataTable',{attrs:{\"ids\":\"search-client-table\",\"parentId\":_vm.parentId,\"data\":_vm.clients,\"cols\":_vm.cols,\"toolbar\":_vm.toolbar,\"options\":_vm.tableOptions}})],1)]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"Cancelar\")]),_c('button',{staticClass:\"btn save\",attrs:{\"type\":\"button\",\"id\":\"btn-send-message\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();_vm.sendMessage($event)}}},[_vm._v(\"enviar\")])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal-header\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]),_c('h4',{staticClass:\"modal-title\"},[_vm._v(\"Nuevo Contrato\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-addon\"},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"search\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 110:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{attrs:{\"id\":\"home-section\"}},[_c('div',{staticClass:\"row welcome-screen\"},[_c('div',{staticClass:\"col-md-8 col-xs-12 main-card\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"company-data\"},[_c('img',{staticClass:\"company-logo\",staticStyle:{\"width\":\"170px\"},attrs:{\"src\":_vm.logo,\"alt\":\"company-logo\"}})]),_c('div',{staticClass:\"welcome-data\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6 without-padding\"},[_c('h4',[_vm._v(_vm._s(_vm.store.company.nombre))]),_c('h4',[_vm._v(\"Bienvenido \"+_vm._s(_vm.store.currentUser.name))])]),_c('div',{staticClass:\"col-md-5 col-xs-6 date-container\"},[_c('p',{staticClass:\"day\"},[_vm._v(_vm._s(_vm.date.day))]),_c('p',{staticClass:\"month-year\"},[_vm._v(_vm._s(_vm.date.monthYear))]),_c('span',{staticClass:\"dayweek\"},[_vm._v(_vm._s(_vm.date.dayWeek))])])])])])]),_c('DetailCards',{attrs:{\"store\":_vm.store}})],1),_c('div',{staticClass:\"row home-options-container\"},[_vm._m(0,false,false),_c('div',{staticClass:\"col-md-4 clock-card\"},[_c('h3',{staticClass:\"card-title t-center\"},[_vm._v(\"Hora\")]),_c('h4',{staticClass:\"hour h3-4 t-center\"},[_vm._v(_vm._s(_vm.date.hour))])])]),_c('SearchClientModal')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8 hidden-xs shortcuts-container\"},[_c('div',{staticClass:\"col-md-4 shortcut\",attrs:{\"id\":\"caller-new-client\",\"data-toggle\":\"modal\",\"data-target\":\"#new-client-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"person_add\")]),_c('p',{staticClass:\"section-title\"},[_vm._v(\"Nuevo Cliente\")])]),_c('div',{staticClass:\"col-md-4 shortcut\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#search-client-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"library_books\")]),_c('p',{staticClass:\"section-title\"},[_vm._v(\"Nuevo Contrato\")])]),_c('div',{staticClass:\"col-md-4 shortcut\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#search-client-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"monetization_on\")]),_c('p',{staticClass:\"section-title\"},[_vm._v(\"Registrar Pago\")])]),_c('div',{staticClass:\"col-md-4 shortcut\",attrs:{\"id\":\"caller-new-client\",\"data-toggle\":\"modal\",\"data-target\":\"#add-extra-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"more\")]),_c('p',{staticClass:\"section-title\"},[_vm._v(\"Servicio Extra\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 76:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_HomeSection_vue__ = __webpack_require__(103);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1cbcb835_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_HomeSection_vue__ = __webpack_require__(110);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_HomeSection_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_1cbcb835_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_HomeSection_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 84:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_357e043f_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__ = __webpack_require__(88);\nvar normalizeComponent = __webpack_require__(3)\n/* script */\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_DataTable_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_357e043f_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_template_compiler_preprocessor_engine_pug_node_modules_vue_loader_lib_selector_type_template_index_0_DataTable_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bootstrap_table__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__node_modules_bootstrap_table_dist_locale_bootstrap_table_es_SP__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    cols: {\n      type: Array\n    },\n    data: {\n      type: String\n    },\n    options: {\n      type: Object\n    },\n    ids: {\n      type: String\n    },\n    endpoint: {\n      type: String\n    },\n    parentId: {\n      type: String\n    },\n    toolbar: {\n      type: String\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.refresh(this.data);\n  },\n\n  watch: {\n    data: function data() {\n      this.refresh(this.data);\n      this.intialized = false;\n    }\n  },\n\n  methods: {\n    init: function init() {\n      this.table = $('#' + this.ids);\n      this.$filter = $(this.parentId + ' .filter');\n      this.activate();\n      this.listen();\n    },\n    activate: function activate(page) {\n      var self = this;\n      this.table.bootstrapTable({\n        columns: self.cols,\n        sortOrder: 'asc',\n        search: 'true',\n        toolbar: self.toolbar,\n        showRefresh: false,\n        showColumns: false,\n        showExport: false,\n        minimumCountColumns: 2,\n        showPaginationSwitch: false,\n        pagination: true,\n        idField: 'id',\n        pageSize: self.options.pageSize || 50,\n        pageList: self.options.pageList || [10, 20, 50, 100, 2000],\n        showFooter: false,\n        clickToSelect: true,\n        singleSelect: true,\n        striped: false,\n        fixed: true,\n        footer: false\n      });\n      this.table.find('tbody').css({ display: 'table-row-group' });\n      this.table.addClass('innertable');\n      this.$filter.change();\n      if (!this.intialized) {\n        this.initialized = true;\n        this.customSearch();\n        this.listen();\n      }\n      if (page) {\n        this.table.bootstrapTable('selectPage', page);\n      }\n    },\n    getSelectedRow: function getSelectedRow() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var row = this.table.bootstrapTable('getSelections')[0];\n      if (emit) {\n        this.$emit('selected-row', row);\n      }\n      return row;\n    },\n    getId: function getId() {\n      var emit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      var self = this;\n      var id = $.map(this.table.bootstrapTable('getSelections'), function (row) {\n        return row[self.idField];\n      });\n      if (emit) {\n        this.$emit('id', id);\n      }\n      return id;\n    },\n    refresh: function refresh(content) {\n      var options = this.table.bootstrapTable('getOptions');\n      this.table.bootstrapTable('destroy');\n      this.table.find('tbody').html(content);\n      this.activate(options.pageNumber);\n    },\n    listen: function listen() {\n      var _this = this;\n\n      var self = this;\n      this.table.on('all.bs.table', function (e, name, args) {\n        if (name === 'check.bs.table' || name === 'uncheck.bs.table') {\n          var row = _this.getSelectedRow();\n          self.$emit('check-uncheck', name, row, args);\n        } else if (name === 'click-cell.bs.table' && args[0] === 'estado') {\n          self.$emit('cell-clicked', name, args);\n        }\n      });\n\n      $(window).resize(function () {\n        self.table.bootstrapTable('resetView');\n      });\n    },\n    customSearch: function customSearch() {\n      $(this.parentId + ' .pull-right.search').addClass('hide');\n      var $inputSearch = $(this.parentId + ' .search input');\n\n      var self = this;\n      // eslint-disable-next-line\n      $inputSearch.on('click', function () {\n        var $this = $(this).parent();\n        $this.addClass('focus');\n      });\n      // eslint-disable-next-line\n      $inputSearch.on('blur', function () {\n        var $this = $(this).parent();\n        $this.removeClass('focus');\n      });\n      // eslint-disable-next-line\n      this.$filter.on('change', function () {\n        var filterWord = $(this).val();\n        if (filterWord === 'todo') {\n          filterWord = self.options.states;\n        }\n        self.applyFilter(filterWord);\n      });\n    },\n    applyFilter: function applyFilter(filter) {\n      var self = this;\n      this.table.bootstrapTable('filterBy', _defineProperty({}, self.options.stateField, filter));\n      self.$emit('filter.bs');\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.11.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\n/* unused harmony default export */ var _unused_webpack_default_export = ((function ($) {\n    'use strict';\n\n    // TOOLS DEFINITION\n    // ======================\n\n    var cachedWidth = null;\n\n    // it only does '%s', and return '' when arguments are undefined\n    var sprintf = function (str) {\n        var args = arguments,\n            flag = true,\n            i = 1;\n\n        str = str.replace(/%s/g, function () {\n            var arg = args[i++];\n\n            if (typeof arg === 'undefined') {\n                flag = false;\n                return '';\n            }\n            return arg;\n        });\n        return flag ? str : '';\n    };\n\n    var getPropertyFromOther = function (list, from, to, value) {\n        var result = '';\n        $.each(list, function (i, item) {\n            if (item[from] === value) {\n                result = item[to];\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n\n    var getFieldIndex = function (columns, field) {\n        var index = -1;\n\n        $.each(columns, function (i, column) {\n            if (column.field === field) {\n                index = i;\n                return false;\n            }\n            return true;\n        });\n        return index;\n    };\n\n    // http://jsfiddle.net/wenyi/47nz7ez9/3/\n    var setFieldIndex = function (columns) {\n        var i, j, k,\n            totalCol = 0,\n            flag = [];\n\n        for (i = 0; i < columns[0].length; i++) {\n            totalCol += columns[0][i].colspan || 1;\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            flag[i] = [];\n            for (j = 0; j < totalCol; j++) {\n                flag[i][j] = false;\n            }\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            for (j = 0; j < columns[i].length; j++) {\n                var r = columns[i][j],\n                    rowspan = r.rowspan || 1,\n                    colspan = r.colspan || 1,\n                    index = $.inArray(false, flag[i]);\n\n                if (colspan === 1) {\n                    r.fieldIndex = index;\n                    // when field is undefined, use index instead\n                    if (typeof r.field === 'undefined') {\n                        r.field = index;\n                    }\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    flag[i + k][index] = true;\n                }\n                for (k = 0; k < colspan; k++) {\n                    flag[i][index + k] = true;\n                }\n            }\n        }\n    };\n\n    var getScrollBarWidth = function () {\n        if (cachedWidth === null) {\n            var inner = $('<p/>').addClass('fixed-table-scroll-inner'),\n                outer = $('<div/>').addClass('fixed-table-scroll-outer'),\n                w1, w2;\n\n            outer.append(inner);\n            $('body').append(outer);\n\n            w1 = inner[0].offsetWidth;\n            outer.css('overflow', 'scroll');\n            w2 = inner[0].offsetWidth;\n\n            if (w1 === w2) {\n                w2 = outer[0].clientWidth;\n            }\n\n            outer.remove();\n            cachedWidth = w1 - w2;\n        }\n        return cachedWidth;\n    };\n\n    var calculateObjectValue = function (self, name, args, defaultValue) {\n        var func = name;\n\n        if (typeof name === 'string') {\n            // support obj.func1.func2\n            var names = name.split('.');\n\n            if (names.length > 1) {\n                func = window;\n                $.each(names, function (i, f) {\n                    func = func[f];\n                });\n            } else {\n                func = window[name];\n            }\n        }\n        if (typeof func === 'object') {\n            return func;\n        }\n        if (typeof func === 'function') {\n            return func.apply(self, args || []);\n        }\n        if (!func && typeof name === 'string' && sprintf.apply(this, [name].concat(args))) {\n            return sprintf.apply(this, [name].concat(args));\n        }\n        return defaultValue;\n    };\n\n    var compareObjects = function (objectA, objectB, compareLength) {\n        // Create arrays of property names\n        var objectAProperties = Object.getOwnPropertyNames(objectA),\n            objectBProperties = Object.getOwnPropertyNames(objectB),\n            propName = '';\n\n        if (compareLength) {\n            // If number of properties is different, objects are not equivalent\n            if (objectAProperties.length !== objectBProperties.length) {\n                return false;\n            }\n        }\n\n        for (var i = 0; i < objectAProperties.length; i++) {\n            propName = objectAProperties[i];\n\n            // If the property is not in the object B properties, continue with the next property\n            if ($.inArray(propName, objectBProperties) > -1) {\n                // If values of same property are not equal, objects are not equivalent\n                if (objectA[propName] !== objectB[propName]) {\n                    return false;\n                }\n            }\n        }\n\n        // If we made it this far, objects are considered equivalent\n        return true;\n    };\n\n    var escapeHTML = function (text) {\n        if (typeof text === 'string') {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;')\n                .replace(/`/g, '&#x60;');\n        }\n        return text;\n    };\n\n    var getRealDataAttr = function (dataAttr) {\n        for (var attr in dataAttr) {\n            var auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase();\n            if (auxAttr !== attr) {\n                dataAttr[auxAttr] = dataAttr[attr];\n                delete dataAttr[attr];\n            }\n        }\n\n        return dataAttr;\n    };\n\n    var getItemField = function (item, field, escape) {\n        var value = item;\n\n        if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n            return escape ? escapeHTML(item[field]) : item[field];\n        }\n        var props = field.split('.');\n        for (var p in props) {\n            if (props.hasOwnProperty(p)) {\n                value = value && value[props[p]];\n            }\n        }\n        return escape ? escapeHTML(value) : value;\n    };\n\n    var isIEBrowser = function () {\n        return !!(navigator.userAgent.indexOf(\"MSIE \") > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./));\n    };\n\n    var objectKeys = function () {\n        // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n                    dontEnums = [\n                        'toString',\n                        'toLocaleString',\n                        'valueOf',\n                        'hasOwnProperty',\n                        'isPrototypeOf',\n                        'propertyIsEnumerable',\n                        'constructor'\n                    ],\n                    dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    var result = [], prop, i;\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n                    return result;\n                };\n            }());\n        }\n    };\n\n    // BOOTSTRAP TABLE CLASS DEFINITION\n    // ======================\n\n    var BootstrapTable = function (el, options) {\n        this.options = options;\n        this.$el = $(el);\n        this.$el_ = this.$el.clone();\n        this.timeoutId_ = 0;\n        this.timeoutFooter_ = 0;\n\n        this.init();\n    };\n\n    BootstrapTable.DEFAULTS = {\n        classes: 'table table-hover',\n        sortClass: undefined,\n        locale: undefined,\n        height: undefined,\n        undefinedText: '-',\n        sortName: undefined,\n        sortOrder: 'asc',\n        sortStable: false,\n        striped: false,\n        columns: [[]],\n        data: [],\n        totalField: 'total',\n        dataField: 'rows',\n        method: 'get',\n        url: undefined,\n        ajax: undefined,\n        cache: true,\n        contentType: 'application/json',\n        dataType: 'json',\n        ajaxOptions: {},\n        queryParams: function (params) {\n            return params;\n        },\n        queryParamsType: 'limit', // undefined\n        responseHandler: function (res) {\n            return res;\n        },\n        pagination: false,\n        onlyInfoPagination: false,\n        paginationLoop: true,\n        sidePagination: 'client', // client or server\n        totalRows: 0, // server side need to set\n        pageNumber: 1,\n        pageSize: 10,\n        pageList: [10, 25, 50, 100],\n        paginationHAlign: 'right', //right, left\n        paginationVAlign: 'bottom', //bottom, top, both\n        paginationDetailHAlign: 'left', //right, left\n        paginationPreText: '&lsaquo;',\n        paginationNextText: '&rsaquo;',\n        search: false,\n        searchOnEnterKey: false,\n        strictSearch: false,\n        searchAlign: 'right',\n        selectItemName: 'btSelectItem',\n        showHeader: true,\n        showFooter: false,\n        showColumns: false,\n        showPaginationSwitch: false,\n        showRefresh: false,\n        showToggle: false,\n        buttonsAlign: 'right',\n        smartDisplay: true,\n        escape: false,\n        minimumCountColumns: 1,\n        idField: undefined,\n        uniqueId: undefined,\n        cardView: false,\n        detailView: false,\n        detailFormatter: function (index, row) {\n            return '';\n        },\n        trimOnSearch: true,\n        clickToSelect: false,\n        singleSelect: false,\n        toolbar: undefined,\n        toolbarAlign: 'left',\n        checkboxHeader: true,\n        sortable: true,\n        silentSort: true,\n        maintainSelected: false,\n        searchTimeOut: 500,\n        searchText: '',\n        iconSize: undefined,\n        buttonsClass: 'default',\n        iconsPrefix: 'glyphicon', // glyphicon of fa (font awesome)\n        icons: {\n            paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n            paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n            refresh: 'glyphicon-refresh icon-refresh',\n            toggle: 'glyphicon-list-alt icon-list-alt',\n            columns: 'glyphicon-th icon-th',\n            detailOpen: 'glyphicon-plus icon-plus',\n            detailClose: 'glyphicon-minus icon-minus'\n        },\n\n        customSearch: $.noop,\n\n        customSort: $.noop,\n\n        rowStyle: function (row, index) {\n            return {};\n        },\n\n        rowAttributes: function (row, index) {\n            return {};\n        },\n\n        footerStyle: function (row, index) {\n            return {};\n        },\n\n        onAll: function (name, args) {\n            return false;\n        },\n        onClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onDblClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onClickRow: function (item, $element) {\n            return false;\n        },\n        onDblClickRow: function (item, $element) {\n            return false;\n        },\n        onSort: function (name, order) {\n            return false;\n        },\n        onCheck: function (row) {\n            return false;\n        },\n        onUncheck: function (row) {\n            return false;\n        },\n        onCheckAll: function (rows) {\n            return false;\n        },\n        onUncheckAll: function (rows) {\n            return false;\n        },\n        onCheckSome: function (rows) {\n            return false;\n        },\n        onUncheckSome: function (rows) {\n            return false;\n        },\n        onLoadSuccess: function (data) {\n            return false;\n        },\n        onLoadError: function (status) {\n            return false;\n        },\n        onColumnSwitch: function (field, checked) {\n            return false;\n        },\n        onPageChange: function (number, size) {\n            return false;\n        },\n        onSearch: function (text) {\n            return false;\n        },\n        onToggle: function (cardView) {\n            return false;\n        },\n        onPreBody: function (data) {\n            return false;\n        },\n        onPostBody: function () {\n            return false;\n        },\n        onPostHeader: function () {\n            return false;\n        },\n        onExpandRow: function (index, row, $detail) {\n            return false;\n        },\n        onCollapseRow: function (index, row) {\n            return false;\n        },\n        onRefreshOptions: function (options) {\n            return false;\n        },\n        onRefresh: function (params) {\n          return false;\n        },\n        onResetView: function () {\n            return false;\n        }\n    };\n\n    BootstrapTable.LOCALES = {};\n\n    BootstrapTable.LOCALES['en-US'] = BootstrapTable.LOCALES.en = {\n        formatLoadingMessage: function () {\n            return 'Loading, please wait...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return sprintf('%s rows per page', pageNumber);\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return sprintf('Showing %s to %s of %s rows', pageFrom, pageTo, totalRows);\n        },\n        formatDetailPagination: function (totalRows) {\n            return sprintf('Showing %s rows', totalRows);\n        },\n        formatSearch: function () {\n            return 'Search';\n        },\n        formatNoMatches: function () {\n            return 'No matching records found';\n        },\n        formatPaginationSwitch: function () {\n            return 'Hide/Show pagination';\n        },\n        formatRefresh: function () {\n            return 'Refresh';\n        },\n        formatToggle: function () {\n            return 'Toggle';\n        },\n        formatColumns: function () {\n            return 'Columns';\n        },\n        formatAllRows: function () {\n            return 'All';\n        }\n    };\n\n    $.extend(BootstrapTable.DEFAULTS, BootstrapTable.LOCALES['en-US']);\n\n    BootstrapTable.COLUMN_DEFAULTS = {\n        radio: false,\n        checkbox: false,\n        checkboxEnabled: true,\n        field: undefined,\n        title: undefined,\n        titleTooltip: undefined,\n        'class': undefined,\n        align: undefined, // left, right, center\n        halign: undefined, // left, right, center\n        falign: undefined, // left, right, center\n        valign: undefined, // top, middle, bottom\n        width: undefined,\n        sortable: false,\n        order: 'asc', // asc, desc\n        visible: true,\n        switchable: true,\n        clickToSelect: true,\n        formatter: undefined,\n        footerFormatter: undefined,\n        events: undefined,\n        sorter: undefined,\n        sortName: undefined,\n        cellStyle: undefined,\n        searchable: true,\n        searchFormatter: true,\n        cardVisible: true,\n        escape : false\n    };\n\n    BootstrapTable.EVENTS = {\n        'all.bs.table': 'onAll',\n        'click-cell.bs.table': 'onClickCell',\n        'dbl-click-cell.bs.table': 'onDblClickCell',\n        'click-row.bs.table': 'onClickRow',\n        'dbl-click-row.bs.table': 'onDblClickRow',\n        'sort.bs.table': 'onSort',\n        'check.bs.table': 'onCheck',\n        'uncheck.bs.table': 'onUncheck',\n        'check-all.bs.table': 'onCheckAll',\n        'uncheck-all.bs.table': 'onUncheckAll',\n        'check-some.bs.table': 'onCheckSome',\n        'uncheck-some.bs.table': 'onUncheckSome',\n        'load-success.bs.table': 'onLoadSuccess',\n        'load-error.bs.table': 'onLoadError',\n        'column-switch.bs.table': 'onColumnSwitch',\n        'page-change.bs.table': 'onPageChange',\n        'search.bs.table': 'onSearch',\n        'toggle.bs.table': 'onToggle',\n        'pre-body.bs.table': 'onPreBody',\n        'post-body.bs.table': 'onPostBody',\n        'post-header.bs.table': 'onPostHeader',\n        'expand-row.bs.table': 'onExpandRow',\n        'collapse-row.bs.table': 'onCollapseRow',\n        'refresh-options.bs.table': 'onRefreshOptions',\n        'reset-view.bs.table': 'onResetView',\n        'refresh.bs.table': 'onRefresh'\n    };\n\n    BootstrapTable.prototype.init = function () {\n        this.initLocale();\n        this.initContainer();\n        this.initTable();\n        this.initHeader();\n        this.initData();\n        this.initHiddenRows();\n        this.initFooter();\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n        this.initSearchText();\n        this.initServer();\n    };\n\n    BootstrapTable.prototype.initLocale = function () {\n        if (this.options.locale) {\n            var parts = this.options.locale.split(/-|_/);\n            parts[0].toLowerCase();\n            if (parts[1]) parts[1].toUpperCase();\n            if ($.fn.bootstrapTable.locales[this.options.locale]) {\n                // locale as requested\n                $.extend(this.options, $.fn.bootstrapTable.locales[this.options.locale]);\n            } else if ($.fn.bootstrapTable.locales[parts.join('-')]) {\n                // locale with sep set to - (in case original was specified with _)\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts.join('-')]);\n            } else if ($.fn.bootstrapTable.locales[parts[0]]) {\n                // short locale language code (i.e. 'en')\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts[0]]);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.initContainer = function () {\n        this.$container = $([\n            '<div class=\"bootstrap-table\">',\n            '<div class=\"fixed-table-toolbar\"></div>',\n            this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\" style=\"clear: both;\"></div>' :\n                '',\n            '<div class=\"fixed-table-container\">',\n            '<div class=\"fixed-table-header\"><table></table></div>',\n            '<div class=\"fixed-table-body\">',\n            '<div class=\"fixed-table-loading\">',\n            this.options.formatLoadingMessage(),\n            '</div>',\n            '</div>',\n            '<div class=\"fixed-table-footer\"><table><tr></tr></table></div>',\n            this.options.paginationVAlign === 'bottom' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\"></div>' :\n                '',\n            '</div>',\n            '</div>'\n        ].join(''));\n\n        this.$container.insertAfter(this.$el);\n        this.$tableContainer = this.$container.find('.fixed-table-container');\n        this.$tableHeader = this.$container.find('.fixed-table-header');\n        this.$tableBody = this.$container.find('.fixed-table-body');\n        this.$tableLoading = this.$container.find('.fixed-table-loading');\n        this.$tableFooter = this.$container.find('.fixed-table-footer');\n        this.$toolbar = this.$container.find('.fixed-table-toolbar');\n        this.$pagination = this.$container.find('.fixed-table-pagination');\n\n        this.$tableBody.append(this.$el);\n        this.$container.after('<div class=\"clearfix\"></div>');\n\n        this.$el.addClass(this.options.classes);\n        if (this.options.striped) {\n            this.$el.addClass('table-striped');\n        }\n        if ($.inArray('table-no-bordered', this.options.classes.split(' ')) !== -1) {\n            this.$tableContainer.addClass('table-no-bordered');\n        }\n    };\n\n    BootstrapTable.prototype.initTable = function () {\n        var that = this,\n            columns = [],\n            data = [];\n\n        this.$header = this.$el.find('>thead');\n        if (!this.$header.length) {\n            this.$header = $('<thead></thead>').appendTo(this.$el);\n        }\n        this.$header.find('tr').each(function () {\n            var column = [];\n\n            $(this).find('th').each(function () {\n                // Fix #2014 - getFieldIndex and elsewhere assume this is string, causes issues if not\n                if (typeof $(this).data('field') !== 'undefined') {\n                    $(this).data('field', $(this).data('field') + '');\n                }\n                column.push($.extend({}, {\n                    title: $(this).html(),\n                    'class': $(this).attr('class'),\n                    titleTooltip: $(this).attr('title'),\n                    rowspan: $(this).attr('rowspan') ? +$(this).attr('rowspan') : undefined,\n                    colspan: $(this).attr('colspan') ? +$(this).attr('colspan') : undefined\n                }, $(this).data()));\n            });\n            columns.push(column);\n        });\n        if (!$.isArray(this.options.columns[0])) {\n            this.options.columns = [this.options.columns];\n        }\n        this.options.columns = $.extend(true, [], columns, this.options.columns);\n        this.columns = [];\n\n        setFieldIndex(this.options.columns);\n        $.each(this.options.columns, function (i, columns) {\n            $.each(columns, function (j, column) {\n                column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, column);\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.columns[column.fieldIndex] = column;\n                }\n\n                that.options.columns[i][j] = column;\n            });\n        });\n\n        // if options.data is setting, do not process tbody data\n        if (this.options.data.length) {\n            return;\n        }\n\n        var m = [];\n        this.$el.find('>tbody>tr').each(function (y) {\n            var row = {};\n\n            // save tr's id, class and data-* attributes\n            row._id = $(this).attr('id');\n            row._class = $(this).attr('class');\n            row._data = getRealDataAttr($(this).data());\n\n            $(this).find('>td').each(function (x) {\n                var $this = $(this),\n                    cspan = +$this.attr('colspan') || 1,\n                    rspan = +$this.attr('rowspan') || 1,\n                    tx, ty;\n\n                for (; m[y] && m[y][x]; x++); //skip already occupied cells in current row\n\n                for (tx = x; tx < x + cspan; tx++) { //mark matrix elements occupied by current cell with true\n                    for (ty = y; ty < y + rspan; ty++) {\n                        if (!m[ty]) { //fill missing rows\n                            m[ty] = [];\n                        }\n                        m[ty][tx] = true;\n                    }\n                }\n\n                var field = that.columns[x].field;\n\n                row[field] = $(this).html();\n                // save td's id, class and data-* attributes\n                row['_' + field + '_id'] = $(this).attr('id');\n                row['_' + field + '_class'] = $(this).attr('class');\n                row['_' + field + '_rowspan'] = $(this).attr('rowspan');\n                row['_' + field + '_colspan'] = $(this).attr('colspan');\n                row['_' + field + '_title'] = $(this).attr('title');\n                row['_' + field + '_data'] = getRealDataAttr($(this).data());\n            });\n            data.push(row);\n        });\n        this.options.data = data;\n        if (data.length) this.fromHtml = true;\n    };\n\n    BootstrapTable.prototype.initHeader = function () {\n        var that = this,\n            visibleColumns = {},\n            html = [];\n\n        this.header = {\n            fields: [],\n            styles: [],\n            classes: [],\n            formatters: [],\n            events: [],\n            sorters: [],\n            sortNames: [],\n            cellStyles: [],\n            searchables: []\n        };\n\n        $.each(this.options.columns, function (i, columns) {\n            html.push('<tr>');\n\n            if (i === 0 && !that.options.cardView && that.options.detailView) {\n                html.push(sprintf('<th class=\"detail\" rowspan=\"%s\"><div class=\"fht-cell\"></div></th>',\n                    that.options.columns.length));\n            }\n\n            $.each(columns, function (j, column) {\n                var text = '',\n                    halign = '', // header align style\n                    align = '', // body align style\n                    style = '',\n                    class_ = sprintf(' class=\"%s\"', column['class']),\n                    order = that.options.sortOrder || column.order,\n                    unitWidth = 'px',\n                    width = column.width;\n\n                if (column.width !== undefined && (!that.options.cardView)) {\n                    if (typeof column.width === 'string') {\n                        if (column.width.indexOf('%') !== -1) {\n                            unitWidth = '%';\n                        }\n                    }\n                }\n                if (column.width && typeof column.width === 'string') {\n                    width = column.width.replace('%', '').replace('px', '');\n                }\n\n                halign = sprintf('text-align: %s; ', column.halign ? column.halign : column.align);\n                align = sprintf('text-align: %s; ', column.align);\n                style = sprintf('vertical-align: %s; ', column.valign);\n                style += sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n                    '36px' : (width ? width + unitWidth : undefined));\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.header.fields[column.fieldIndex] = column.field;\n                    that.header.styles[column.fieldIndex] = align + style;\n                    that.header.classes[column.fieldIndex] = class_;\n                    that.header.formatters[column.fieldIndex] = column.formatter;\n                    that.header.events[column.fieldIndex] = column.events;\n                    that.header.sorters[column.fieldIndex] = column.sorter;\n                    that.header.sortNames[column.fieldIndex] = column.sortName;\n                    that.header.cellStyles[column.fieldIndex] = column.cellStyle;\n                    that.header.searchables[column.fieldIndex] = column.searchable;\n\n                    if (!column.visible) {\n                        return;\n                    }\n\n                    if (that.options.cardView && (!column.cardVisible)) {\n                        return;\n                    }\n\n                    visibleColumns[column.field] = column;\n                }\n\n                html.push('<th' + sprintf(' title=\"%s\"', column.titleTooltip),\n                    column.checkbox || column.radio ?\n                        sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n                        class_,\n                    sprintf(' style=\"%s\"', halign + style),\n                    sprintf(' rowspan=\"%s\"', column.rowspan),\n                    sprintf(' colspan=\"%s\"', column.colspan),\n                    sprintf(' data-field=\"%s\"', column.field),\n                    '>');\n\n                html.push(sprintf('<div class=\"th-inner %s\">', that.options.sortable && column.sortable ?\n                    'sortable both' : ''));\n\n                text = that.options.escape ? escapeHTML(column.title) : column.title;\n\n                if (column.checkbox) {\n                    if (!that.options.singleSelect && that.options.checkboxHeader) {\n                        text = '<input name=\"btSelectAll\" type=\"checkbox\" />';\n                    }\n                    that.header.stateField = column.field;\n                }\n                if (column.radio) {\n                    text = '';\n                    that.header.stateField = column.field;\n                    that.options.singleSelect = true;\n                }\n\n                html.push(text);\n                html.push('</div>');\n                html.push('<div class=\"fht-cell\"></div>');\n                html.push('</div>');\n                html.push('</th>');\n            });\n            html.push('</tr>');\n        });\n\n        this.$header.html(html.join(''));\n        this.$header.find('th[data-field]').each(function (i) {\n            $(this).data(visibleColumns[$(this).data('field')]);\n        });\n        this.$container.off('click', '.th-inner').on('click', '.th-inner', function (event) {\n            var target = $(this);\n\n            if (that.options.detailView) {\n                if (target.closest('.bootstrap-table')[0] !== that.$container[0])\n                    return false;\n            }\n\n            if (that.options.sortable && target.parent().data().sortable) {\n                that.onSort(event);\n            }\n        });\n\n        this.$header.children().children().off('keypress').on('keypress', function (event) {\n            if (that.options.sortable && $(this).data().sortable) {\n                var code = event.keyCode || event.which;\n                if (code == 13) { //Enter keycode\n                    that.onSort(event);\n                }\n            }\n        });\n\n        $(window).off('resize.bootstrap-table');\n        if (!this.options.showHeader || this.options.cardView) {\n            this.$header.hide();\n            this.$tableHeader.hide();\n            this.$tableLoading.css('top', 0);\n        } else {\n            this.$header.show();\n            this.$tableHeader.show();\n            this.$tableLoading.css('top', this.$header.outerHeight() + 1);\n            // Assign the correct sortable arrow\n            this.getCaret();\n            $(window).on('resize.bootstrap-table', $.proxy(this.resetWidth, this));\n        }\n\n        this.$selectAll = this.$header.find('[name=\"btSelectAll\"]');\n        this.$selectAll.off('click').on('click', function () {\n                var checked = $(this).prop('checked');\n                that[checked ? 'checkAll' : 'uncheckAll']();\n                that.updateSelected();\n            });\n    };\n\n    BootstrapTable.prototype.initFooter = function () {\n        if (!this.options.showFooter || this.options.cardView) {\n            this.$tableFooter.hide();\n        } else {\n            this.$tableFooter.show();\n        }\n    };\n\n    /**\n     * @param data\n     * @param type: append / prepend\n     */\n    BootstrapTable.prototype.initData = function (data, type) {\n        if (type === 'append') {\n            this.data = this.data.concat(data);\n        } else if (type === 'prepend') {\n            this.data = [].concat(data).concat(this.data);\n        } else {\n            this.data = data || this.options.data;\n        }\n\n        // Fix #839 Records deleted when adding new row on filtered table\n        if (type === 'append') {\n            this.options.data = this.options.data.concat(data);\n        } else if (type === 'prepend') {\n            this.options.data = [].concat(data).concat(this.options.data);\n        } else {\n            this.options.data = this.data;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            return;\n        }\n        this.initSort();\n    };\n\n    BootstrapTable.prototype.initSort = function () {\n        var that = this,\n            name = this.options.sortName,\n            order = this.options.sortOrder === 'desc' ? -1 : 1,\n            index = $.inArray(this.options.sortName, this.header.fields),\n            timeoutId = 0;\n\n        if (this.options.customSort !== $.noop) {\n            this.options.customSort.apply(this, [this.options.sortName, this.options.sortOrder]);\n            return;\n        }\n\n        if (index !== -1) {\n            if (this.options.sortStable) {\n                $.each(this.data, function (i, row) {\n                    if (!row.hasOwnProperty('_position')) row._position = i;\n                });\n            }\n\n            this.data.sort(function (a, b) {\n                if (that.header.sortNames[index]) {\n                    name = that.header.sortNames[index];\n                }\n                var aa = getItemField(a, name, that.options.escape),\n                    bb = getItemField(b, name, that.options.escape),\n                    value = calculateObjectValue(that.header, that.header.sorters[index], [aa, bb]);\n\n                if (value !== undefined) {\n                    return order * value;\n                }\n\n                // Fix #161: undefined or null string sort bug.\n                if (aa === undefined || aa === null) {\n                    aa = '';\n                }\n                if (bb === undefined || bb === null) {\n                    bb = '';\n                }\n\n                if (that.options.sortStable && aa === bb) {\n                    aa = a._position;\n                    bb = b._position;\n                }\n\n                // IF both values are numeric, do a numeric comparison\n                if ($.isNumeric(aa) && $.isNumeric(bb)) {\n                    // Convert numerical values form string to float.\n                    aa = parseFloat(aa);\n                    bb = parseFloat(bb);\n                    if (aa < bb) {\n                        return order * -1;\n                    }\n                    return order;\n                }\n\n                if (aa === bb) {\n                    return 0;\n                }\n\n                // If value is not a string, convert to string\n                if (typeof aa !== 'string') {\n                    aa = aa.toString();\n                }\n\n                if (aa.localeCompare(bb) === -1) {\n                    return order * -1;\n                }\n\n                return order;\n            });\n\n            if (this.options.sortClass !== undefined) {\n                clearTimeout(timeoutId);\n                timeoutId = setTimeout(function () {\n                    that.$el.removeClass(that.options.sortClass);\n                    var index = that.$header.find(sprintf('[data-field=\"%s\"]',\n                        that.options.sortName).index() + 1);\n                    that.$el.find(sprintf('tr td:nth-child(%s)', index))\n                        .addClass(that.options.sortClass);\n                }, 250);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSort = function (event) {\n        var $this = event.type === \"keypress\" ? $(event.currentTarget) : $(event.currentTarget).parent(),\n            $this_ = this.$header.find('th').eq($this.index());\n\n        this.$header.add(this.$header_).find('span.order').remove();\n\n        if (this.options.sortName === $this.data('field')) {\n            this.options.sortOrder = this.options.sortOrder === 'asc' ? 'desc' : 'asc';\n        } else {\n            this.options.sortName = $this.data('field');\n            this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc';\n        }\n        this.trigger('sort', this.options.sortName, this.options.sortOrder);\n\n        $this.add($this_).data('order', this.options.sortOrder);\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n\n        if (this.options.sidePagination === 'server') {\n            this.initServer(this.options.silentSort);\n            return;\n        }\n\n        this.initSort();\n        this.initBody();\n    };\n\n    BootstrapTable.prototype.initToolbar = function () {\n        var that = this,\n            html = [],\n            timeoutId = 0,\n            $keepOpen,\n            $search,\n            switchableCount = 0;\n\n        if (this.$toolbar.find('.bs-bars').children().length) {\n            $('body').append($(this.options.toolbar));\n        }\n        this.$toolbar.html('');\n\n        if (typeof this.options.toolbar === 'string' || typeof this.options.toolbar === 'object') {\n            $(sprintf('<div class=\"bs-bars pull-%s\"></div>', this.options.toolbarAlign))\n                .appendTo(this.$toolbar)\n                .append($(this.options.toolbar));\n        }\n\n        // showColumns, showToggle, showRefresh\n        html = [sprintf('<div class=\"columns columns-%s btn-group pull-%s\">',\n            this.options.buttonsAlign, this.options.buttonsAlign)];\n\n        if (typeof this.options.icons === 'string') {\n            this.options.icons = calculateObjectValue(null, this.options.icons);\n        }\n\n        if (this.options.showPaginationSwitch) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"paginationSwitch\" aria-label=\"pagination Switch\" title=\"%s\">',\n                    this.options.formatPaginationSwitch()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.paginationSwitchDown),\n                '</button>');\n        }\n\n        if (this.options.showRefresh) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"refresh\" aria-label=\"refresh\" title=\"%s\">',\n                    this.options.formatRefresh()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.refresh),\n                '</button>');\n        }\n\n        if (this.options.showToggle) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"toggle\" aria-label=\"toggle\" title=\"%s\">',\n                    this.options.formatToggle()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.toggle),\n                '</button>');\n        }\n\n        if (this.options.showColumns) {\n            html.push(sprintf('<div class=\"keep-open btn-group\" title=\"%s\">',\n                    this.options.formatColumns()),\n                '<button type=\"button\" aria-label=\"columns\" class=\"btn' +\n                sprintf(' btn-%s', this.options.buttonsClass) +\n                sprintf(' btn-%s', this.options.iconSize) +\n                ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.columns),\n                ' <span class=\"caret\"></span>',\n                '</button>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">');\n\n            $.each(this.columns, function (i, column) {\n                if (column.radio || column.checkbox) {\n                    return;\n                }\n\n                if (that.options.cardView && !column.cardVisible) {\n                    return;\n                }\n\n                var checked = column.visible ? ' checked=\"checked\"' : '';\n\n                if (column.switchable) {\n                    html.push(sprintf('<li role=\"menuitem\">' +\n                        '<label><input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s> %s</label>' +\n                        '</li>', column.field, i, checked, column.title));\n                    switchableCount++;\n                }\n            });\n            html.push('</ul>',\n                '</div>');\n        }\n\n        html.push('</div>');\n\n        // Fix #188: this.showToolbar is for extensions\n        if (this.showToolbar || html.length > 2) {\n            this.$toolbar.append(html.join(''));\n        }\n\n        if (this.options.showPaginationSwitch) {\n            this.$toolbar.find('button[name=\"paginationSwitch\"]')\n                .off('click').on('click', $.proxy(this.togglePagination, this));\n        }\n\n        if (this.options.showRefresh) {\n            this.$toolbar.find('button[name=\"refresh\"]')\n                .off('click').on('click', $.proxy(this.refresh, this));\n        }\n\n        if (this.options.showToggle) {\n            this.$toolbar.find('button[name=\"toggle\"]')\n                .off('click').on('click', function () {\n                    that.toggleView();\n                });\n        }\n\n        if (this.options.showColumns) {\n            $keepOpen = this.$toolbar.find('.keep-open');\n\n            if (switchableCount <= this.options.minimumCountColumns) {\n                $keepOpen.find('input').prop('disabled', true);\n            }\n\n            $keepOpen.find('li').off('click').on('click', function (event) {\n                event.stopImmediatePropagation();\n            });\n            $keepOpen.find('input').off('click').on('click', function () {\n                var $this = $(this);\n\n                that.toggleColumn($(this).val(), $this.prop('checked'), false);\n                that.trigger('column-switch', $(this).data('field'), $this.prop('checked'));\n            });\n        }\n\n        if (this.options.search) {\n            html = [];\n            html.push(\n                '<div class=\"pull-' + this.options.searchAlign + ' search\">',\n                sprintf('<input class=\"form-control' +\n                    sprintf(' input-%s', this.options.iconSize) +\n                    '\" type=\"text\" placeholder=\"%s\">',\n                    this.options.formatSearch()),\n                '</div>');\n\n            this.$toolbar.append(html.join(''));\n            $search = this.$toolbar.find('.search input');\n            $search.off('keyup drop blur').on('keyup drop blur', function (event) {\n                if (that.options.searchOnEnterKey && event.keyCode !== 13) {\n                    return;\n                }\n\n                if ($.inArray(event.keyCode, [37, 38, 39, 40]) > -1) {\n                    return;\n                }\n\n                clearTimeout(timeoutId); // doesn't matter if it's 0\n                timeoutId = setTimeout(function () {\n                    that.onSearch(event);\n                }, that.options.searchTimeOut);\n            });\n\n            if (isIEBrowser()) {\n                $search.off('mouseup').on('mouseup', function (event) {\n                    clearTimeout(timeoutId); // doesn't matter if it's 0\n                    timeoutId = setTimeout(function () {\n                        that.onSearch(event);\n                    }, that.options.searchTimeOut);\n                });\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSearch = function (event) {\n        var text = $.trim($(event.currentTarget).val());\n\n        // trim search input\n        if (this.options.trimOnSearch && $(event.currentTarget).val() !== text) {\n            $(event.currentTarget).val(text);\n        }\n\n        if (text === this.searchText) {\n            return;\n        }\n        this.searchText = text;\n        this.options.searchText = text;\n\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n        this.trigger('search', text);\n    };\n\n    BootstrapTable.prototype.initSearch = function () {\n        var that = this;\n\n        if (this.options.sidePagination !== 'server') {\n            if (this.options.customSearch !== $.noop) {\n                this.options.customSearch.apply(this, [this.searchText]);\n                return;\n            }\n\n            var s = this.searchText && (this.options.escape ?\n                escapeHTML(this.searchText) : this.searchText).toLowerCase();\n            var f = $.isEmptyObject(this.filterColumns) ? null : this.filterColumns;\n\n            // Check filter\n            this.data = f ? $.grep(this.options.data, function (item, i) {\n                for (var key in f) {\n                    if ($.isArray(f[key]) && $.inArray(item[key], f[key]) === -1 ||\n                            !$.isArray(f[key]) && item[key] !== f[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }) : this.options.data;\n\n            this.data = s ? $.grep(this.data, function (item, i) {\n                for (var j = 0; j < that.header.fields.length; j++) {\n\n                    if (!that.header.searchables[j]) {\n                        continue;\n                    }\n\n                    var key = $.isNumeric(that.header.fields[j]) ? parseInt(that.header.fields[j], 10) : that.header.fields[j];\n                    var column = that.columns[getFieldIndex(that.columns, key)];\n                    var value;\n\n                    if (typeof key === 'string') {\n                        value = item;\n                        var props = key.split('.');\n                        for (var prop_index = 0; prop_index < props.length; prop_index++) {\n                            value = value[props[prop_index]];\n                        }\n\n                        // Fix #142: respect searchForamtter boolean\n                        if (column && column.searchFormatter) {\n                            value = calculateObjectValue(column,\n                                that.header.formatters[j], [value, item, i], value);\n                        }\n                    } else {\n                        value = item[key];\n                    }\n\n                    if (typeof value === 'string' || typeof value === 'number') {\n                        if (that.options.strictSearch) {\n                            if ((value + '').toLowerCase() === s) {\n                                return true;\n                            }\n                        } else {\n                            if ((value + '').toLowerCase().indexOf(s) !== -1) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }) : this.data;\n        }\n    };\n\n    BootstrapTable.prototype.initPagination = function () {\n        if (!this.options.pagination) {\n            this.$pagination.hide();\n            return;\n        } else {\n            this.$pagination.show();\n        }\n\n        var that = this,\n            html = [],\n            $allSelected = false,\n            i, from, to,\n            $pageList,\n            $first, $pre,\n            $next, $last,\n            $number,\n            data = this.getData(),\n            pageList = this.options.pageList;\n\n        if (this.options.sidePagination !== 'server') {\n            this.options.totalRows = data.length;\n        }\n\n        this.totalPages = 0;\n        if (this.options.totalRows) {\n            if (this.options.pageSize === this.options.formatAllRows()) {\n                this.options.pageSize = this.options.totalRows;\n                $allSelected = true;\n            } else if (this.options.pageSize === this.options.totalRows) {\n                // Fix #667 Table with pagination,\n                // multiple pages and a search that matches to one page throws exception\n                var pageLst = typeof this.options.pageList === 'string' ?\n                    this.options.pageList.replace('[', '').replace(']', '')\n                        .replace(/ /g, '').toLowerCase().split(',') : this.options.pageList;\n                if ($.inArray(this.options.formatAllRows().toLowerCase(), pageLst)  > -1) {\n                    $allSelected = true;\n                }\n            }\n\n            this.totalPages = ~~((this.options.totalRows - 1) / this.options.pageSize) + 1;\n\n            this.options.totalPages = this.totalPages;\n        }\n        if (this.totalPages > 0 && this.options.pageNumber > this.totalPages) {\n            this.options.pageNumber = this.totalPages;\n        }\n\n        this.pageFrom = (this.options.pageNumber - 1) * this.options.pageSize + 1;\n        this.pageTo = this.options.pageNumber * this.options.pageSize;\n        if (this.pageTo > this.options.totalRows) {\n            this.pageTo = this.options.totalRows;\n        }\n\n        html.push(\n            '<div class=\"pull-' + this.options.paginationDetailHAlign + ' pagination-detail\">',\n            '<span class=\"pagination-info\">',\n            this.options.onlyInfoPagination ? this.options.formatDetailPagination(this.options.totalRows) :\n            this.options.formatShowingRows(this.pageFrom, this.pageTo, this.options.totalRows),\n            '</span>');\n\n        if (!this.options.onlyInfoPagination) {\n            html.push('<span class=\"page-list\">');\n\n            var pageNumber = [\n                    sprintf('<span class=\"btn-group %s\">',\n                        this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                            'dropdown' : 'dropup'),\n                    '<button type=\"button\" class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                    '<span class=\"page-size\">',\n                    $allSelected ? this.options.formatAllRows() : this.options.pageSize,\n                    '</span>',\n                    ' <span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu\" role=\"menu\">'\n                ];\n\n            if (typeof this.options.pageList === 'string') {\n                var list = this.options.pageList.replace('[', '').replace(']', '')\n                    .replace(/ /g, '').split(',');\n\n                pageList = [];\n                $.each(list, function (i, value) {\n                    pageList.push(value.toUpperCase() === that.options.formatAllRows().toUpperCase() ?\n                        that.options.formatAllRows() : +value);\n                });\n            }\n\n            $.each(pageList, function (i, page) {\n                if (!that.options.smartDisplay || i === 0 || pageList[i - 1] < that.options.totalRows) {\n                    var active;\n                    if ($allSelected) {\n                        active = page === that.options.formatAllRows() ? ' class=\"active\"' : '';\n                    } else {\n                        active = page === that.options.pageSize ? ' class=\"active\"' : '';\n                    }\n                    pageNumber.push(sprintf('<li role=\"menuitem\"%s><a href=\"#\">%s</a></li>', active, page));\n                }\n            });\n            pageNumber.push('</ul></span>');\n\n            html.push(this.options.formatRecordsPerPage(pageNumber.join('')));\n            html.push('</span>');\n\n            html.push('</div>',\n                '<div class=\"pull-' + this.options.paginationHAlign + ' pagination\">',\n                '<ul class=\"pagination' + sprintf(' pagination-%s', this.options.iconSize) + '\">',\n                '<li class=\"page-pre\"><a href=\"#\">' + this.options.paginationPreText + '</a></li>');\n\n            if (this.totalPages < 5) {\n                from = 1;\n                to = this.totalPages;\n            } else {\n                from = this.options.pageNumber - 2;\n                to = from + 4;\n                if (from < 1) {\n                    from = 1;\n                    to = 5;\n                }\n                if (to > this.totalPages) {\n                    to = this.totalPages;\n                    from = to - 4;\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber >= 3) {\n                    html.push('<li class=\"page-first' + (1 === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', 1, '</a>',\n                        '</li>');\n\n                    from++;\n                }\n\n                if (this.options.pageNumber >= 4) {\n                    if (this.options.pageNumber == 4 || this.totalPages == 6 || this.totalPages == 7) {\n                        from--;\n                    } else {\n                        html.push('<li class=\"page-first-separator disabled\">',\n                            '<a href=\"#\">...</a>',\n                            '</li>');\n                    }\n\n                    to--;\n                }\n            }\n\n            if (this.totalPages >= 7) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    from--;\n                }\n            }\n\n            if (this.totalPages == 6) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    to++;\n                }\n            } else if (this.totalPages >= 7) {\n                if (this.totalPages == 7 || this.options.pageNumber >= (this.totalPages - 3)) {\n                    to++;\n                }\n            }\n\n            for (i = from; i <= to; i++) {\n                html.push('<li class=\"page-number' + (i === this.options.pageNumber ? ' active' : '') + '\">',\n                    '<a href=\"#\">', i, '</a>',\n                    '</li>');\n            }\n\n            if (this.totalPages >= 8) {\n                if (this.options.pageNumber <= (this.totalPages - 4)) {\n                    html.push('<li class=\"page-last-separator disabled\">',\n                        '<a href=\"#\">...</a>',\n                        '</li>');\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber <= (this.totalPages - 3)) {\n                    html.push('<li class=\"page-last' + (this.totalPages === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', this.totalPages, '</a>',\n                        '</li>');\n                }\n            }\n\n            html.push(\n                '<li class=\"page-next\"><a href=\"#\">' + this.options.paginationNextText + '</a></li>',\n                '</ul>',\n                '</div>');\n        }\n        this.$pagination.html(html.join(''));\n\n        if (!this.options.onlyInfoPagination) {\n            $pageList = this.$pagination.find('.page-list a');\n            $first = this.$pagination.find('.page-first');\n            $pre = this.$pagination.find('.page-pre');\n            $next = this.$pagination.find('.page-next');\n            $last = this.$pagination.find('.page-last');\n            $number = this.$pagination.find('.page-number');\n\n            if (this.options.smartDisplay) {\n                if (this.totalPages <= 1) {\n                    this.$pagination.find('div.pagination').hide();\n                }\n                if (pageList.length < 2 || this.options.totalRows <= pageList[0]) {\n                    this.$pagination.find('span.page-list').hide();\n                }\n\n                // when data is empty, hide the pagination\n                this.$pagination[this.getData().length ? 'show' : 'hide']();\n            }\n\n            if (!this.options.paginationLoop) {\n                if (this.options.pageNumber === 1) {\n                    $pre.addClass('disabled');\n                }\n                if (this.options.pageNumber === this.totalPages) {\n                    $next.addClass('disabled');\n                }\n            }\n\n            if ($allSelected) {\n                this.options.pageSize = this.options.formatAllRows();\n            }\n            $pageList.off('click').on('click', $.proxy(this.onPageListChange, this));\n            $first.off('click').on('click', $.proxy(this.onPageFirst, this));\n            $pre.off('click').on('click', $.proxy(this.onPagePre, this));\n            $next.off('click').on('click', $.proxy(this.onPageNext, this));\n            $last.off('click').on('click', $.proxy(this.onPageLast, this));\n            $number.off('click').on('click', $.proxy(this.onPageNumber, this));\n        }\n    };\n\n    BootstrapTable.prototype.updatePagination = function (event) {\n        // Fix #171: IE disabled button can be clicked bug.\n        if (event && $(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        if (!this.options.maintainSelected) {\n            this.resetRows();\n        }\n\n        this.initPagination();\n        if (this.options.sidePagination === 'server') {\n            this.initServer();\n        } else {\n            this.initBody();\n        }\n\n        this.trigger('page-change', this.options.pageNumber, this.options.pageSize);\n    };\n\n    BootstrapTable.prototype.onPageListChange = function (event) {\n        var $this = $(event.currentTarget);\n\n        $this.parent().addClass('active').siblings().removeClass('active');\n        this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n            this.options.formatAllRows() : +$this.text();\n        this.$toolbar.find('.page-size').text(this.options.pageSize);\n\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageFirst = function (event) {\n        this.options.pageNumber = 1;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPagePre = function (event) {\n        if ((this.options.pageNumber - 1) === 0) {\n            this.options.pageNumber = this.options.totalPages;\n        } else {\n            this.options.pageNumber--;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNext = function (event) {\n        if ((this.options.pageNumber + 1) > this.options.totalPages) {\n            this.options.pageNumber = 1;\n        } else {\n            this.options.pageNumber++;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageLast = function (event) {\n        this.options.pageNumber = this.totalPages;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNumber = function (event) {\n        if (this.options.pageNumber === +$(event.currentTarget).text()) {\n            return;\n        }\n        this.options.pageNumber = +$(event.currentTarget).text();\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.initRow = function(item, i, data, parentDom) {\n        var that=this,\n            key,\n            html = [],\n            style = {},\n            csses = [],\n            data_ = '',\n            attributes = {},\n            htmlAttributes = [];\n\n        if ($.inArray(item, this.hiddenRows) > -1) {\n            return;\n        }\n\n        style = calculateObjectValue(this.options, this.options.rowStyle, [item, i], style);\n\n        if (style && style.css) {\n            for (key in style.css) {\n                csses.push(key + ': ' + style.css[key]);\n            }\n        }\n\n        attributes = calculateObjectValue(this.options,\n            this.options.rowAttributes, [item, i], attributes);\n\n        if (attributes) {\n            for (key in attributes) {\n                htmlAttributes.push(sprintf('%s=\"%s\"', key, escapeHTML(attributes[key])));\n            }\n        }\n\n        if (item._data && !$.isEmptyObject(item._data)) {\n            $.each(item._data, function(k, v) {\n                // ignore data-index\n                if (k === 'index') {\n                    return;\n                }\n                data_ += sprintf(' data-%s=\"%s\"', k, v);\n            });\n        }\n\n        html.push('<tr',\n            sprintf(' %s', htmlAttributes.join(' ')),\n            sprintf(' id=\"%s\"', $.isArray(item) ? undefined : item._id),\n            sprintf(' class=\"%s\"', style.classes || ($.isArray(item) ? undefined : item._class)),\n            sprintf(' data-index=\"%s\"', i),\n            sprintf(' data-uniqueid=\"%s\"', item[this.options.uniqueId]),\n            sprintf('%s', data_),\n            '>'\n        );\n\n        if (this.options.cardView) {\n            html.push(sprintf('<td colspan=\"%s\"><div class=\"card-views\">', this.header.fields.length));\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td>',\n                '<a class=\"detail-icon\" href=\"#\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.detailOpen),\n                '</a>',\n                '</td>');\n        }\n\n        $.each(this.header.fields, function(j, field) {\n            var text = '',\n                value_ = getItemField(item, field, that.options.escape),\n                value = '',\n                type = '',\n                cellStyle = {},\n                id_ = '',\n                class_ = that.header.classes[j],\n                data_ = '',\n                rowspan_ = '',\n                colspan_ = '',\n                title_ = '',\n                column = that.columns[j];\n\n            if (that.fromHtml && typeof value_ === 'undefined') {\n                return;\n            }\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            if (column.escape) {\n                value_ = escapeHTML(value_);\n            }\n\n            style = sprintf('style=\"%s\"', csses.concat(that.header.styles[j]).join('; '));\n\n            // handle td's id and class\n            if (item['_' + field + '_id']) {\n                id_ = sprintf(' id=\"%s\"', item['_' + field + '_id']);\n            }\n            if (item['_' + field + '_class']) {\n                class_ = sprintf(' class=\"%s\"', item['_' + field + '_class']);\n            }\n            if (item['_' + field + '_rowspan']) {\n                rowspan_ = sprintf(' rowspan=\"%s\"', item['_' + field + '_rowspan']);\n            }\n            if (item['_' + field + '_colspan']) {\n                colspan_ = sprintf(' colspan=\"%s\"', item['_' + field + '_colspan']);\n            }\n            if (item['_' + field + '_title']) {\n                title_ = sprintf(' title=\"%s\"', item['_' + field + '_title']);\n            }\n            cellStyle = calculateObjectValue(that.header,\n                that.header.cellStyles[j], [value_, item, i, field], cellStyle);\n            if (cellStyle.classes) {\n                class_ = sprintf(' class=\"%s\"', cellStyle.classes);\n            }\n            if (cellStyle.css) {\n                var csses_ = [];\n                for (var key in cellStyle.css) {\n                    csses_.push(key + ': ' + cellStyle.css[key]);\n                }\n                style = sprintf('style=\"%s\"', csses_.concat(that.header.styles[j]).join('; '));\n            }\n\n            value = calculateObjectValue(column,\n                that.header.formatters[j], [value_, item, i], value_);\n\n            if (item['_' + field + '_data'] && !$.isEmptyObject(item['_' + field + '_data'])) {\n                $.each(item['_' + field + '_data'], function(k, v) {\n                    // ignore data-index\n                    if (k === 'index') {\n                        return;\n                    }\n                    data_ += sprintf(' data-%s=\"%s\"', k, v);\n                });\n            }\n\n            if (column.checkbox || column.radio) {\n                type = column.checkbox ? 'checkbox' : type;\n                type = column.radio ? 'radio' : type;\n\n                text = [sprintf(that.options.cardView ?\n                        '<div class=\"card-view %s\">' : '<td class=\"bs-checkbox %s\">', column['class'] || ''),\n                    '<input' +\n                    sprintf(' data-index=\"%s\"', i) +\n                    sprintf(' name=\"%s\"', that.options.selectItemName) +\n                    sprintf(' type=\"%s\"', type) +\n                    sprintf(' value=\"%s\"', item[that.options.idField]) +\n                    sprintf(' checked=\"%s\"', value === true ||\n                        (value_ || value && value.checked) ? 'checked' : undefined) +\n                    sprintf(' disabled=\"%s\"', !column.checkboxEnabled ||\n                        (value && value.disabled) ? 'disabled' : undefined) +\n                    ' />',\n                    that.header.formatters[j] && typeof value === 'string' ? value : '',\n                    that.options.cardView ? '</div>' : '</td>'\n                ].join('');\n\n                item[that.header.stateField] = value === true || (value && value.checked);\n            } else {\n                value = typeof value === 'undefined' || value === null ?\n                    that.options.undefinedText : value;\n\n                text = that.options.cardView ? ['<div class=\"card-view\">',\n                    that.options.showHeader ? sprintf('<span class=\"title\" %s>%s</span>', style,\n                        getPropertyFromOther(that.columns, 'field', 'title', field)) : '',\n                    sprintf('<span class=\"value\">%s</span>', value),\n                    '</div>'\n                ].join('') : [sprintf('<td%s %s %s %s %s %s %s>',\n                        id_, class_, style, data_, rowspan_, colspan_, title_),\n                    value,\n                    '</td>'\n                ].join('');\n\n                // Hide empty data on Card view when smartDisplay is set to true.\n                if (that.options.cardView && that.options.smartDisplay && value === '') {\n                    // Should set a placeholder for event binding correct fieldIndex\n                    text = '<div class=\"card-view\"></div>';\n                }\n            }\n\n            html.push(text);\n        });\n\n        if (this.options.cardView) {\n            html.push('</div></td>');\n        }\n        html.push('</tr>');\n\n        return html.join(' ');\n    };\n\n    BootstrapTable.prototype.initBody = function (fixedScroll) {\n        var that = this,\n            html = [],\n            data = this.getData();\n\n        this.trigger('pre-body', data);\n\n        this.$body = this.$el.find('>tbody');\n        if (!this.$body.length) {\n            this.$body = $('<tbody></tbody>').appendTo(this.$el);\n        }\n\n        //Fix #389 Bootstrap-table-flatJSON is not working\n\n        if (!this.options.pagination || this.options.sidePagination === 'server') {\n            this.pageFrom = 1;\n            this.pageTo = data.length;\n        }\n\n        var trFragments = $(document.createDocumentFragment());\n        var hasTr;\n\n        for (var i = this.pageFrom - 1; i < this.pageTo; i++) {\n            var item = data[i];\n            var tr = this.initRow(item, i, data, trFragments);\n            hasTr = hasTr || !!tr;\n            if (tr&&tr!==true) {\n                trFragments.append(tr);\n            }\n        }\n\n        // show no records\n        if (!hasTr) {\n            trFragments.append('<tr class=\"no-records-found\">' +\n                sprintf('<td colspan=\"%s\">%s</td>',\n                this.$header.find('th').length,\n                this.options.formatNoMatches()) +\n                '</tr>');\n        }\n\n        this.$body.html(trFragments);\n\n        if (!fixedScroll) {\n            this.scrollTo(0);\n        }\n\n        // click to select by column\n        this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', function (e) {\n            var $td = $(this),\n                $tr = $td.parent(),\n                item = that.data[$tr.data('index')],\n                index = $td[0].cellIndex,\n                fields = that.getVisibleFields(),\n                field = fields[that.options.detailView && !that.options.cardView ? index - 1 : index],\n                column = that.columns[getFieldIndex(that.columns, field)],\n                value = getItemField(item, field, that.options.escape);\n\n            if ($td.find('.detail-icon').length) {\n                return;\n            }\n\n            that.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td);\n            that.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field);\n\n            // if click to select - then trigger the checkbox/radio click\n            if (e.type === 'click' && that.options.clickToSelect && column.clickToSelect) {\n                var $selectItem = $tr.find(sprintf('[name=\"%s\"]', that.options.selectItemName));\n                if ($selectItem.length) {\n                    $selectItem[0].click(); // #144: .trigger('click') bug\n                }\n            }\n        });\n\n        this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', function () {\n            var $this = $(this),\n                $tr = $this.parent().parent(),\n                index = $tr.data('index'),\n                row = data[index]; // Fix #980 Detail view, when searching, returns wrong row\n\n            // remove and update\n            if ($tr.next().is('tr.detail-view')) {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailOpen));\n                that.trigger('collapse-row', index, row);\n                $tr.next().remove();\n            } else {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailClose));\n                $tr.after(sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.find('td').length));\n                var $element = $tr.next().find('td');\n                var content = calculateObjectValue(that.options, that.options.detailFormatter, [index, row, $element], '');\n                if($element.length === 1) {\n                    $element.append(content);\n                }\n                that.trigger('expand-row', index, row, $element);\n            }\n            that.resetView();\n            return false;\n        });\n\n        this.$selectItem = this.$body.find(sprintf('[name=\"%s\"]', this.options.selectItemName));\n        this.$selectItem.off('click').on('click', function (event) {\n            event.stopImmediatePropagation();\n\n            var $this = $(this),\n                checked = $this.prop('checked'),\n                row = that.data[$this.data('index')];\n\n            if (that.options.maintainSelected && $(this).is(':radio')) {\n                $.each(that.options.data, function (i, row) {\n                    row[that.header.stateField] = false;\n                });\n            }\n\n            row[that.header.stateField] = checked;\n\n            if (that.options.singleSelect) {\n                that.$selectItem.not(this).each(function () {\n                    that.data[$(this).data('index')][that.header.stateField] = false;\n                });\n                that.$selectItem.filter(':checked').not(this).prop('checked', false);\n            }\n\n            that.updateSelected();\n            that.trigger(checked ? 'check' : 'uncheck', row, $this);\n        });\n\n        $.each(this.header.events, function (i, events) {\n            if (!events) {\n                return;\n            }\n            // fix bug, if events is defined with namespace\n            if (typeof events === 'string') {\n                events = calculateObjectValue(null, events);\n            }\n\n            var field = that.header.fields[i],\n                fieldIndex = $.inArray(field, that.getVisibleFields());\n\n            if (that.options.detailView && !that.options.cardView) {\n                fieldIndex += 1;\n            }\n\n            for (var key in events) {\n                that.$body.find('>tr:not(.no-records-found)').each(function () {\n                    var $tr = $(this),\n                        $td = $tr.find(that.options.cardView ? '.card-view' : 'td').eq(fieldIndex),\n                        index = key.indexOf(' '),\n                        name = key.substring(0, index),\n                        el = key.substring(index + 1),\n                        func = events[key];\n\n                    $td.find(el).off(name).on(name, function (e) {\n                        var index = $tr.data('index'),\n                            row = that.data[index],\n                            value = row[field];\n\n                        func.apply(this, [e, value, row, index]);\n                    });\n                });\n            }\n        });\n\n        this.updateSelected();\n        this.resetView();\n\n        this.trigger('post-body', data);\n    };\n\n    BootstrapTable.prototype.initServer = function (silent, query, url) {\n        var that = this,\n            data = {},\n            params = {\n                searchText: this.searchText,\n                sortName: this.options.sortName,\n                sortOrder: this.options.sortOrder\n            },\n            request;\n\n        if (this.options.pagination) {\n            params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n                this.options.totalRows : this.options.pageSize;\n            params.pageNumber = this.options.pageNumber;\n        }\n\n        if (!(url || this.options.url) && !this.options.ajax) {\n            return;\n        }\n\n        if (this.options.queryParamsType === 'limit') {\n            params = {\n                search: params.searchText,\n                sort: params.sortName,\n                order: params.sortOrder\n            };\n\n            if (this.options.pagination) {\n                params.offset = this.options.pageSize === this.options.formatAllRows() ?\n                    0 : this.options.pageSize * (this.options.pageNumber - 1);\n                params.limit = this.options.pageSize === this.options.formatAllRows() ?\n                    this.options.totalRows : this.options.pageSize;\n            }\n        }\n\n        if (!($.isEmptyObject(this.filterColumnsPartial))) {\n            params.filter = JSON.stringify(this.filterColumnsPartial, null);\n        }\n\n        data = calculateObjectValue(this.options, this.options.queryParams, [params], data);\n\n        $.extend(data, query || {});\n\n        // false to stop request\n        if (data === false) {\n            return;\n        }\n\n        if (!silent) {\n            this.$tableLoading.show();\n        }\n        request = $.extend({}, calculateObjectValue(null, this.options.ajaxOptions), {\n            type: this.options.method,\n            url:  url || this.options.url,\n            data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n                JSON.stringify(data) : data,\n            cache: this.options.cache,\n            contentType: this.options.contentType,\n            dataType: this.options.dataType,\n            success: function (res) {\n                res = calculateObjectValue(that.options, that.options.responseHandler, [res], res);\n\n                that.load(res);\n                that.trigger('load-success', res);\n                if (!silent) that.$tableLoading.hide();\n            },\n            error: function (res) {\n                that.trigger('load-error', res.status, res);\n                if (!silent) that.$tableLoading.hide();\n            }\n        });\n\n        if (this.options.ajax) {\n            calculateObjectValue(this, this.options.ajax, [request], null);\n        } else {\n            if (this._xhr && this._xhr.readyState !== 4) {\n                this._xhr.abort();\n            }\n            this._xhr = $.ajax(request);\n        }\n    };\n\n    BootstrapTable.prototype.initSearchText = function () {\n        if (this.options.search) {\n            if (this.options.searchText !== '') {\n                var $search = this.$toolbar.find('.search input');\n                $search.val(this.options.searchText);\n                this.onSearch({currentTarget: $search});\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getCaret = function () {\n        var that = this;\n\n        $.each(this.$header.find('th'), function (i, th) {\n            $(th).find('.sortable').removeClass('desc asc').addClass($(th).data('field') === that.options.sortName ? that.options.sortOrder : 'both');\n        });\n    };\n\n    BootstrapTable.prototype.updateSelected = function () {\n        var checkAll = this.$selectItem.filter(':enabled').length &&\n            this.$selectItem.filter(':enabled').length ===\n            this.$selectItem.filter(':enabled').filter(':checked').length;\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checkAll);\n\n        this.$selectItem.each(function () {\n            $(this).closest('tr')[$(this).prop('checked') ? 'addClass' : 'removeClass']('selected');\n        });\n    };\n\n    BootstrapTable.prototype.updateRows = function () {\n        var that = this;\n\n        this.$selectItem.each(function () {\n            that.data[$(this).data('index')][that.header.stateField] = $(this).prop('checked');\n        });\n    };\n\n    BootstrapTable.prototype.resetRows = function () {\n        var that = this;\n\n        $.each(this.data, function (i, row) {\n            that.$selectAll.prop('checked', false);\n            that.$selectItem.prop('checked', false);\n            if (that.header.stateField) {\n                row[that.header.stateField] = false;\n            }\n        });\n        this.initHiddenRows();\n    };\n\n    BootstrapTable.prototype.trigger = function (name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        name += '.bs.table';\n        this.options[BootstrapTable.EVENTS[name]].apply(this.options, args);\n        this.$el.trigger($.Event(name), args);\n\n        this.options.onAll(name, args);\n        this.$el.trigger($.Event('all.bs.table'), [name, args]);\n    };\n\n    BootstrapTable.prototype.resetHeader = function () {\n        // fix #61: the hidden table reset header bug.\n        // fix bug: get $el.css('width') error sometime (height = 500)\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout($.proxy(this.fitHeader, this), this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitHeader = function () {\n        var that = this,\n            fixedBody,\n            scrollWidth,\n            focused,\n            focusedTemp;\n\n        if (that.$el.is(':hidden')) {\n            that.timeoutId_ = setTimeout($.proxy(that.fitHeader, that), 100);\n            return;\n        }\n        fixedBody = this.$tableBody.get(0);\n\n        scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n        fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            getScrollBarWidth() : 0;\n\n        this.$el.css('margin-top', -this.$header.outerHeight());\n\n        focused = $(':focus');\n        if (focused.length > 0) {\n            var $th = focused.parents('th');\n            if ($th.length > 0) {\n                var dataField = $th.attr('data-field');\n                if (dataField !== undefined) {\n                    var $headerTh = this.$header.find(\"[data-field='\" + dataField + \"']\");\n                    if ($headerTh.length > 0) {\n                        $headerTh.find(\":input\").addClass(\"focus-temp\");\n                    }\n                }\n            }\n        }\n\n        this.$header_ = this.$header.clone(true, true);\n        this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]');\n        this.$tableHeader.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', this.$el.outerWidth())\n            .html('').attr('class', this.$el.attr('class'))\n            .append(this.$header_);\n\n\n        focusedTemp = $('.focus-temp:visible:eq(0)');\n        if (focusedTemp.length > 0) {\n            focusedTemp.focus();\n            this.$header.find('.focus-temp').removeClass('focus-temp');\n        }\n\n        // fix bug: $.data() is not working as expected after $.append()\n        this.$header.find('th[data-field]').each(function (i) {\n            that.$header_.find(sprintf('th[data-field=\"%s\"]', $(this).data('field'))).data($(this).data());\n        });\n\n        var visibleFields = this.getVisibleFields(),\n            $ths = this.$header_.find('th');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this),\n                index = i;\n\n            if (that.options.detailView && !that.options.cardView) {\n                if (i === 0) {\n                    that.$header_.find('th.detail').find('.fht-cell').width($this.innerWidth());\n                }\n                index = i - 1;\n            }\n\n            var $th = that.$header_.find(sprintf('th[data-field=\"%s\"]', visibleFields[index]));\n            if ($th.length > 1) {\n                $th = $($ths[$this[0].cellIndex]);\n            }\n\n            $th.find('.fht-cell').width($this.innerWidth());\n        });\n        // horizontal scroll event\n        // TODO: it's probably better improving the layout than binding to scroll event\n        this.$tableBody.off('scroll').on('scroll', function () {\n            that.$tableHeader.scrollLeft($(this).scrollLeft());\n\n            if (that.options.showFooter && !that.options.cardView) {\n                that.$tableFooter.scrollLeft($(this).scrollLeft());\n            }\n        });\n        that.trigger('post-header');\n    };\n\n    BootstrapTable.prototype.resetFooter = function () {\n        var that = this,\n            data = that.getData(),\n            html = [];\n\n        if (!this.options.showFooter || this.options.cardView) { //do nothing\n            return;\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td><div class=\"th-inner\">&nbsp;</div><div class=\"fht-cell\"></div></td>');\n        }\n\n        $.each(this.columns, function (i, column) {\n            var key,\n                falign = '', // footer align style\n                valign = '',\n                csses = [],\n                style = {},\n                class_ = sprintf(' class=\"%s\"', column['class']);\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            falign = sprintf('text-align: %s; ', column.falign ? column.falign : column.align);\n            valign = sprintf('vertical-align: %s; ', column.valign);\n\n            style = calculateObjectValue(null, that.options.footerStyle);\n\n            if (style && style.css) {\n                for (key in style.css) {\n                    csses.push(key + ': ' + style.css[key]);\n                }\n            }\n\n            html.push('<td', class_, sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')), '>');\n            html.push('<div class=\"th-inner\">');\n\n            html.push(calculateObjectValue(column, column.footerFormatter, [data], '&nbsp;') || '&nbsp;');\n\n            html.push('</div>');\n            html.push('<div class=\"fht-cell\"></div>');\n            html.push('</div>');\n            html.push('</td>');\n        });\n\n        this.$tableFooter.find('tr').html(html.join(''));\n        this.$tableFooter.show();\n        clearTimeout(this.timeoutFooter_);\n        this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this),\n            this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitFooter = function () {\n        var that = this,\n            $footerTd,\n            elWidth,\n            scrollWidth;\n\n        clearTimeout(this.timeoutFooter_);\n        if (this.$el.is(':hidden')) {\n            this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this), 100);\n            return;\n        }\n\n        elWidth = this.$el.css('width');\n        scrollWidth = elWidth > this.$tableBody.width() ? getScrollBarWidth() : 0;\n\n        this.$tableFooter.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', elWidth)\n            .attr('class', this.$el.attr('class'));\n\n        $footerTd = this.$tableFooter.find('td');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this);\n\n            $footerTd.eq(i).find('.fht-cell').width($this.innerWidth());\n        });\n    };\n\n    BootstrapTable.prototype.toggleColumn = function (index, checked, needUpdate) {\n        if (index === -1) {\n            return;\n        }\n        this.columns[index].visible = checked;\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if (needUpdate) {\n                $items.filter(sprintf('[value=\"%s\"]', index)).prop('checked', checked);\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getVisibleFields = function () {\n        var that = this,\n            visibleFields = [];\n\n        $.each(this.header.fields, function (j, field) {\n            var column = that.columns[getFieldIndex(that.columns, field)];\n\n            if (!column.visible) {\n                return;\n            }\n            visibleFields.push(field);\n        });\n        return visibleFields;\n    };\n\n    // PUBLIC FUNCTION DEFINITION\n    // =======================\n\n    BootstrapTable.prototype.resetView = function (params) {\n        var padding = 0;\n\n        if (params && params.height) {\n            this.options.height = params.height;\n        }\n\n        this.$selectAll.prop('checked', this.$selectItem.length > 0 &&\n            this.$selectItem.length === this.$selectItem.filter(':checked').length);\n\n        if (this.options.height) {\n            var toolbarHeight = this.$toolbar.outerHeight(true),\n                paginationHeight = this.$pagination.outerHeight(true),\n                height = this.options.height - toolbarHeight - paginationHeight;\n\n            this.$tableContainer.css('height', height + 'px');\n        }\n\n        if (this.options.cardView) {\n            // remove the element css\n            this.$el.css('margin-top', '0');\n            this.$tableContainer.css('padding-bottom', '0');\n            this.$tableFooter.hide();\n            return;\n        }\n\n        if (this.options.showHeader && this.options.height) {\n            this.$tableHeader.show();\n            this.resetHeader();\n            padding += this.$header.outerHeight();\n        } else {\n            this.$tableHeader.hide();\n            this.trigger('post-header');\n        }\n\n        if (this.options.showFooter) {\n            this.resetFooter();\n            if (this.options.height) {\n                padding += this.$tableFooter.outerHeight() + 1;\n            }\n        }\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n        this.$tableContainer.css('padding-bottom', padding + 'px');\n        this.trigger('reset-view');\n    };\n\n    BootstrapTable.prototype.getData = function (useCurrentPage) {\n        return (this.searchText || !$.isEmptyObject(this.filterColumns) || !$.isEmptyObject(this.filterColumnsPartial)) ?\n            (useCurrentPage ? this.data.slice(this.pageFrom - 1, this.pageTo) : this.data) :\n            (useCurrentPage ? this.options.data.slice(this.pageFrom - 1, this.pageTo) : this.options.data);\n    };\n\n    BootstrapTable.prototype.load = function (data) {\n        var fixedScroll = false;\n\n        // #431: support pagination\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows = data[this.options.totalField];\n            fixedScroll = data.fixedScroll;\n            data = data[this.options.dataField];\n        } else if (!$.isArray(data)) { // support fixedScroll\n            fixedScroll = data.fixedScroll;\n            data = data.data;\n        }\n\n        this.initData(data);\n        this.initSearch();\n        this.initPagination();\n        this.initBody(fixedScroll);\n    };\n\n    BootstrapTable.prototype.append = function (data) {\n        this.initData(data, 'append');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.prepend = function (data) {\n        this.initData(data, 'prepend');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.remove = function (params) {\n        var len = this.options.data.length,\n            i, row;\n\n        if (!params.hasOwnProperty('field') || !params.hasOwnProperty('values')) {\n            return;\n        }\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (!row.hasOwnProperty(params.field)) {\n                continue;\n            }\n            if ($.inArray(row[params.field], params.values) !== -1) {\n                this.options.data.splice(i, 1);\n                if (this.options.sidePagination === 'server') {\n                    this.options.totalRows -= 1;\n                }\n            }\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.removeAll = function () {\n        if (this.options.data.length > 0) {\n            this.options.data.splice(0, this.options.data.length);\n            this.initSearch();\n            this.initPagination();\n            this.initBody(true);\n        }\n    };\n\n    BootstrapTable.prototype.getRowByUniqueId = function (id) {\n        var uniqueId = this.options.uniqueId,\n            len = this.options.data.length,\n            dataRow = null,\n            i, row, rowUniqueId;\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (row.hasOwnProperty(uniqueId)) { // uniqueId is a column\n                rowUniqueId = row[uniqueId];\n            } else if(row._data.hasOwnProperty(uniqueId)) { // uniqueId is a row data property\n                rowUniqueId = row._data[uniqueId];\n            } else {\n                continue;\n            }\n\n            if (typeof rowUniqueId === 'string') {\n                id = id.toString();\n            } else if (typeof rowUniqueId === 'number') {\n                if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n                    id = parseInt(id);\n                } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n                    id = parseFloat(id);\n                }\n            }\n\n            if (rowUniqueId === id) {\n                dataRow = row;\n                break;\n            }\n        }\n\n        return dataRow;\n    };\n\n    BootstrapTable.prototype.removeByUniqueId = function (id) {\n        var len = this.options.data.length,\n            row = this.getRowByUniqueId(id);\n\n        if (row) {\n            this.options.data.splice(this.options.data.indexOf(row), 1);\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateByUniqueId = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            var rowId;\n\n            if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n                return;\n            }\n\n            rowId = $.inArray(that.getRowByUniqueId(params.id), that.options.data);\n\n            if (rowId === -1) {\n                return;\n            }\n            $.extend(that.options.data[rowId], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.insertRow = function (params) {\n        if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n            return;\n        }\n        this.data.splice(params.index, 0, params.row);\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateRow = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n                return;\n            }\n            $.extend(that.options.data[params.index], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.initHiddenRows = function () {\n        this.hiddenRows = [];\n    };\n\n    BootstrapTable.prototype.showRow = function (params) {\n        this.toggleRow(params, true);\n    };\n\n    BootstrapTable.prototype.hideRow = function (params) {\n        this.toggleRow(params, false);\n    };\n\n    BootstrapTable.prototype.toggleRow = function (params, visible) {\n        var row, index;\n\n        if (params.hasOwnProperty('index')) {\n            row = this.getData()[params.index];\n        } else if (params.hasOwnProperty('uniqueId')) {\n            row = this.getRowByUniqueId(params.uniqueId);\n        }\n\n        if (!row) {\n            return;\n        }\n\n        index = $.inArray(row, this.hiddenRows);\n\n        if (!visible && index === -1) {\n            this.hiddenRows.push(row);\n        } else if (visible && index > -1) {\n            this.hiddenRows.splice(index, 1);\n        }\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getHiddenRows = function (show) {\n        var that = this,\n            data = this.getData(),\n            rows = [];\n\n        $.each(data, function (i, row) {\n            if ($.inArray(row, that.hiddenRows) > -1) {\n                rows.push(row);\n            }\n        });\n        this.hiddenRows = rows;\n        return rows;\n    };\n\n    BootstrapTable.prototype.mergeCells = function (options) {\n        var row = options.index,\n            col = $.inArray(options.field, this.getVisibleFields()),\n            rowspan = options.rowspan || 1,\n            colspan = options.colspan || 1,\n            i, j,\n            $tr = this.$body.find('>tr'),\n            $td;\n\n        if (this.options.detailView && !this.options.cardView) {\n            col += 1;\n        }\n\n        $td = $tr.eq(row).find('>td').eq(col);\n\n        if (row < 0 || col < 0 || row >= this.data.length) {\n            return;\n        }\n\n        for (i = row; i < row + rowspan; i++) {\n            for (j = col; j < col + colspan; j++) {\n                $tr.eq(i).find('>td').eq(j).hide();\n            }\n        }\n\n        $td.attr('rowspan', rowspan).attr('colspan', colspan).show();\n    };\n\n    BootstrapTable.prototype.updateCell = function (params) {\n        if (!params.hasOwnProperty('index') ||\n            !params.hasOwnProperty('field') ||\n            !params.hasOwnProperty('value')) {\n            return;\n        }\n        this.data[params.index][params.field] = params.value;\n\n        if (params.reinit === false) {\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getOptions = function () {\n        return this.options;\n    };\n\n    BootstrapTable.prototype.getSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            // fix #2424: from html with checkbox\n            return row[that.header.stateField] === true;\n        });\n    };\n\n    BootstrapTable.prototype.getAllSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            return row[that.header.stateField];\n        });\n    };\n\n    BootstrapTable.prototype.checkAll = function () {\n        this.checkAll_(true);\n    };\n\n    BootstrapTable.prototype.uncheckAll = function () {\n        this.checkAll_(false);\n    };\n\n    BootstrapTable.prototype.checkInvert = function () {\n        var that = this;\n        var rows = that.$selectItem.filter(':enabled');\n        var checked = rows.filter(':checked');\n        rows.each(function() {\n            $(this).prop('checked', !$(this).prop('checked'));\n        });\n        that.updateRows();\n        that.updateSelected();\n        that.trigger('uncheck-some', checked);\n        checked = that.getSelections();\n        that.trigger('check-some', checked);\n    };\n\n    BootstrapTable.prototype.checkAll_ = function (checked) {\n        var rows;\n        if (!checked) {\n            rows = this.getSelections();\n        }\n        this.$selectAll.add(this.$selectAll_).prop('checked', checked);\n        this.$selectItem.filter(':enabled').prop('checked', checked);\n        this.updateRows();\n        if (checked) {\n            rows = this.getSelections();\n        }\n        this.trigger(checked ? 'check-all' : 'uncheck-all', rows);\n    };\n\n    BootstrapTable.prototype.check = function (index) {\n        this.check_(true, index);\n    };\n\n    BootstrapTable.prototype.uncheck = function (index) {\n        this.check_(false, index);\n    };\n\n    BootstrapTable.prototype.check_ = function (checked, index) {\n        var $el = this.$selectItem.filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n        this.data[index][this.header.stateField] = checked;\n        this.updateSelected();\n        this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el);\n    };\n\n    BootstrapTable.prototype.checkBy = function (obj) {\n        this.checkBy_(true, obj);\n    };\n\n    BootstrapTable.prototype.uncheckBy = function (obj) {\n        this.checkBy_(false, obj);\n    };\n\n    BootstrapTable.prototype.checkBy_ = function (checked, obj) {\n        if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n            return;\n        }\n\n        var that = this,\n            rows = [];\n        $.each(this.options.data, function (index, row) {\n            if (!row.hasOwnProperty(obj.field)) {\n                return false;\n            }\n            if ($.inArray(row[obj.field], obj.values) !== -1) {\n                var $el = that.$selectItem.filter(':enabled')\n                    .filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n                row[that.header.stateField] = checked;\n                rows.push(row);\n                that.trigger(checked ? 'check' : 'uncheck', row, $el);\n            }\n        });\n        this.updateSelected();\n        this.trigger(checked ? 'check-some' : 'uncheck-some', rows);\n    };\n\n    BootstrapTable.prototype.destroy = function () {\n        this.$el.insertBefore(this.$container);\n        $(this.options.toolbar).insertBefore(this.$el);\n        this.$container.next().remove();\n        this.$container.remove();\n        this.$el.html(this.$el_.html())\n            .css('margin-top', '0')\n            .attr('class', this.$el_.attr('class') || ''); // reset the class\n    };\n\n    BootstrapTable.prototype.showLoading = function () {\n        this.$tableLoading.show();\n    };\n\n    BootstrapTable.prototype.hideLoading = function () {\n        this.$tableLoading.hide();\n    };\n\n    BootstrapTable.prototype.togglePagination = function () {\n        this.options.pagination = !this.options.pagination;\n        var button = this.$toolbar.find('button[name=\"paginationSwitch\"] i');\n        if (this.options.pagination) {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchDown);\n        } else {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchUp);\n        }\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.refresh = function (params) {\n        if (params && params.url) {\n            this.options.url = params.url;\n        }\n        if (params && params.pageNumber) {\n            this.options.pageNumber = params.pageNumber;\n        }\n        if (params && params.pageSize) {\n            this.options.pageSize = params.pageSize;\n        }\n        this.initServer(params && params.silent,\n            params && params.query, params && params.url);\n        this.trigger('refresh', params);\n    };\n\n    BootstrapTable.prototype.resetWidth = function () {\n        if (this.options.showHeader && this.options.height) {\n            this.fitHeader();\n        }\n        if (this.options.showFooter) {\n            this.fitFooter();\n        }\n    };\n\n    BootstrapTable.prototype.showColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), true, true);\n    };\n\n    BootstrapTable.prototype.hideColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), false, true);\n    };\n\n    BootstrapTable.prototype.getHiddenColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return !column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.getVisibleColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.toggleAllColumns = function (visible) {\n        $.each(this.columns, function (i, column) {\n            this.columns[i].visible = visible;\n        });\n\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.showAllColumns = function () {\n        this.toggleAllColumns(true);\n    };\n\n    BootstrapTable.prototype.hideAllColumns = function () {\n        this.toggleAllColumns(false);\n    };\n\n    BootstrapTable.prototype.filterBy = function (columns) {\n        this.filterColumns = $.isEmptyObject(columns) ? {} : columns;\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.scrollTo = function (value) {\n        if (typeof value === 'string') {\n            value = value === 'bottom' ? this.$tableBody[0].scrollHeight : 0;\n        }\n        if (typeof value === 'number') {\n            this.$tableBody.scrollTop(value);\n        }\n        if (typeof value === 'undefined') {\n            return this.$tableBody.scrollTop();\n        }\n    };\n\n    BootstrapTable.prototype.getScrollPosition = function () {\n        return this.scrollTo();\n    };\n\n    BootstrapTable.prototype.selectPage = function (page) {\n        if (page > 0 && page <= this.options.totalPages) {\n            this.options.pageNumber = page;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.prevPage = function () {\n        if (this.options.pageNumber > 1) {\n            this.options.pageNumber--;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.nextPage = function () {\n        if (this.options.pageNumber < this.options.totalPages) {\n            this.options.pageNumber++;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.toggleView = function () {\n        this.options.cardView = !this.options.cardView;\n        this.initHeader();\n        // Fixed remove toolbar when click cardView button.\n        //that.initToolbar();\n        this.initBody();\n        this.trigger('toggle', this.options.cardView);\n    };\n\n    BootstrapTable.prototype.refreshOptions = function (options) {\n        //If the objects are equivalent then avoid the call of destroy / init methods\n        if (compareObjects(this.options, options, true)) {\n            return;\n        }\n        this.options = $.extend(this.options, options);\n        this.trigger('refresh-options', this.options);\n        this.destroy();\n        this.init();\n    };\n\n    BootstrapTable.prototype.resetSearch = function (text) {\n        var $search = this.$toolbar.find('.search input');\n        $search.val(text || '');\n        this.onSearch({currentTarget: $search});\n    };\n\n    BootstrapTable.prototype.expandRow_ = function (expand, index) {\n        var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', index));\n        if ($tr.next().is('tr.detail-view') === (expand ? false : true)) {\n            $tr.find('> td > .detail-icon').click();\n        }\n    };\n\n    BootstrapTable.prototype.expandRow = function (index) {\n        this.expandRow_(true, index);\n    };\n\n    BootstrapTable.prototype.collapseRow = function (index) {\n        this.expandRow_(false, index);\n    };\n\n    BootstrapTable.prototype.expandAllRows = function (isSubTable) {\n        if (isSubTable) {\n            var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', 0)),\n                that = this,\n                detailIcon = null,\n                executeInterval = false,\n                idInterval = -1;\n\n            if (!$tr.next().is('tr.detail-view')) {\n                $tr.find('> td > .detail-icon').click();\n                executeInterval = true;\n            } else if (!$tr.next().next().is('tr.detail-view')) {\n                $tr.next().find(\".detail-icon\").click();\n                executeInterval = true;\n            }\n\n            if (executeInterval) {\n                try {\n                    idInterval = setInterval(function () {\n                        detailIcon = that.$body.find(\"tr.detail-view\").last().find(\".detail-icon\");\n                        if (detailIcon.length > 0) {\n                            detailIcon.click();\n                        } else {\n                            clearInterval(idInterval);\n                        }\n                    }, 1);\n                } catch (ex) {\n                    clearInterval(idInterval);\n                }\n            }\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(true, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.collapseAllRows = function (isSubTable) {\n        if (isSubTable) {\n            this.expandRow_(false, 0);\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(false, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.updateFormatText = function (name, text) {\n        if (this.options[sprintf('format%s', name)]) {\n            if (typeof text === 'string') {\n                this.options[sprintf('format%s', name)] = function () {\n                    return text;\n                };\n            } else if (typeof text === 'function') {\n                this.options[sprintf('format%s', name)] = text;\n            }\n        }\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n    };\n\n    // BOOTSTRAP TABLE PLUGIN DEFINITION\n    // =======================\n\n    var allowedMethods = [\n        'getOptions',\n        'getSelections', 'getAllSelections', 'getData',\n        'load', 'append', 'prepend', 'remove', 'removeAll',\n        'insertRow', 'updateRow', 'updateCell', 'updateByUniqueId', 'removeByUniqueId',\n        'getRowByUniqueId', 'showRow', 'hideRow', 'getHiddenRows',\n        'mergeCells',\n        'checkAll', 'uncheckAll', 'checkInvert',\n        'check', 'uncheck',\n        'checkBy', 'uncheckBy',\n        'refresh',\n        'resetView',\n        'resetWidth',\n        'destroy',\n        'showLoading', 'hideLoading',\n        'showColumn', 'hideColumn', 'getHiddenColumns', 'getVisibleColumns',\n        'showAllColumns', 'hideAllColumns',\n        'filterBy',\n        'scrollTo',\n        'getScrollPosition',\n        'selectPage', 'prevPage', 'nextPage',\n        'togglePagination',\n        'toggleView',\n        'refreshOptions',\n        'resetSearch',\n        'expandRow', 'collapseRow', 'expandAllRows', 'collapseAllRows',\n        'updateFormatText'\n    ];\n\n    $.fn.bootstrapTable = function (option) {\n        var value,\n            args = Array.prototype.slice.call(arguments, 1);\n\n        this.each(function () {\n            var $this = $(this),\n                data = $this.data('bootstrap.table'),\n                options = $.extend({}, BootstrapTable.DEFAULTS, $this.data(),\n                    typeof option === 'object' && option);\n\n            if (typeof option === 'string') {\n                if ($.inArray(option, allowedMethods) < 0) {\n                    throw new Error(\"Unknown method: \" + option);\n                }\n\n                if (!data) {\n                    return;\n                }\n\n                value = data[option].apply(data, args);\n\n                if (option === 'destroy') {\n                    $this.removeData('bootstrap.table');\n                }\n            }\n\n            if (!data) {\n                $this.data('bootstrap.table', (data = new BootstrapTable(this, options)));\n            }\n        });\n\n        return typeof value === 'undefined' ? this : value;\n    };\n\n    $.fn.bootstrapTable.Constructor = BootstrapTable;\n    $.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS;\n    $.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS;\n    $.fn.bootstrapTable.locales = BootstrapTable.LOCALES;\n    $.fn.bootstrapTable.methods = allowedMethods;\n    $.fn.bootstrapTable.utils = {\n        sprintf: sprintf,\n        getFieldIndex: getFieldIndex,\n        compareObjects: compareObjects,\n        calculateObjectValue: calculateObjectValue,\n        getItemField: getItemField,\n        objectKeys: objectKeys,\n        isIEBrowser: isIEBrowser\n    };\n\n    // BOOTSTRAP TABLE INIT\n    // =======================\n\n    $(function () {\n        $('[data-toggle=\"table\"]').bootstrapTable();\n    });\n})(jQuery));\n\n\n/***/ }),\n\n/***/ 87:\n/***/ (function(module, exports) {\n\n/**\n * Bootstrap Table Spanish (España) translation\n * Author: Antonio Pérez <anpegar@gmail.com>\n */\n (function ($) {\n    'use strict';\n    \n    $.fn.bootstrapTable.locales['es-SP'] = {\n        formatLoadingMessage: function () {\n            return 'Cargando, por favor espera...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return pageNumber + ' registros por p&#225;gina.';\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return pageFrom + ' - ' + pageTo + ' de ' + totalRows + ' registros.';\n        },\n        formatSearch: function () {\n            return 'Buscar';\n        },\n        formatNoMatches: function () {\n            return 'No se han encontrado registros.';\n        },\n        formatRefresh: function () {\n            return 'Actualizar';\n        },\n        formatToggle: function () {\n            return 'Alternar';\n        },\n        formatColumns: function () {\n            return 'Columnas';\n        },\n        formatAllRows: function () {\n            return 'Todo';\n        }\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales['es-SP']);\n\n})(jQuery);\n\n/***/ }),\n\n/***/ 88:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"display\",attrs:{\"id\":_vm.ids,\"cellspacing\":\"0\",\"width\":\"100%\"}},[_c('thead'),_c('tbody')])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ 94:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ClientStore = function () {\n  function ClientStore() {\n    _classCallCheck(this, ClientStore);\n\n    this.columns = [{\n      field: 'orden',\n      title: 'No.',\n      align: 'center',\n      valign: 'middle'\n    }, {\n      field: 'checkbox',\n      checkbox: true,\n      class: 'hide'\n    }, {\n      field: 'id',\n      title: 'id',\n      class: 'hide'\n    }, {\n      field: 'nombres',\n      title: 'Nombres',\n      align: 'center',\n      valign: 'middle'\n    }, {\n      field: 'apellidos',\n      title: 'Apellidos',\n      align: 'center',\n      valign: 'middle'\n    }, {\n      field: 'cedula',\n      title: 'Cedula',\n      align: 'center',\n      valign: 'middle'\n    }, {\n      field: 'celular',\n      title: 'Celular',\n      align: 'center',\n      valign: 'middle'\n    }, {\n      field: 'estado',\n      title: 'Estado',\n      align: 'center',\n      valign: 'middle'\n    }, {\n      field: 'estadoreal',\n      title: 'Estado Real',\n      class: 'hide',\n      align: 'center',\n      valign: 'middle'\n    }, {\n      field: 'nombre_completo',\n      title: 'Nombre Completo',\n      class: 'hide'\n    }];\n    this.clientMode = 'add';\n    this.client = {\n      nombres: '',\n      apellidos: '',\n      cedula: '',\n      celular: '',\n      provincia: '',\n      sector: '',\n      calle: '',\n      casa: '',\n      detalles_direccion: '',\n      telefono: '',\n      lugar_trabajo: '',\n      tel_trabajo: '',\n      ingresos: 0\n    };\n  }\n\n  _createClass(ClientStore, [{\n    key: 'setClientMode',\n    value: function setClientMode(mode) {\n      this.clientMode = mode;\n    }\n  }, {\n    key: 'setClient',\n    value: function setClient(client) {\n      this.client = client;\n    }\n  }, {\n    key: 'clientEmpty',\n    value: function clientEmpty() {\n      this.client = {\n        nombres: '',\n        apellidos: '',\n        cedula: '',\n        celular: '',\n        provincia: '',\n        sector: '',\n        calle: '',\n        casa: '',\n        detalles_direccion: '',\n        telefono: '',\n        lugarTrabajo: '',\n        telTrabajo: '',\n        ingresos: 0\n      };\n    }\n  }]);\n\n  return ClientStore;\n}();\n\nexports.default = ClientStore;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// assets/js/2.js","<template lang=\"pug\">\n  section#home-section\n    .row.welcome-screen\n      .col-md-8.col-xs-12.main-card\n          .row\n              .company-data\n                  img.company-logo(:src=\"logo\", alt=\"company-logo\", style=\"width: 170px\")\n              .welcome-data\n                  .row\n                      .col-md-6.without-padding\n                          h4 {{ store.company.nombre }}\n                          h4 Bienvenido {{ store.currentUser.name }}\n\n                      .col-md-5.col-xs-6.date-container\n                          p.day {{ date.day }}\n                          p.month-year {{ date.monthYear }}\n                          span.dayweek {{ date.dayWeek }}\n\n      DetailCards(:store=\"store\")\n\n    .row.home-options-container\n      .col-md-8.hidden-xs.shortcuts-container\n          .col-md-4.shortcut#caller-new-client(data-toggle=\"modal\", data-target=\"#new-client-modal\")\n              i.material-icons person_add\n              p.section-title Nuevo Cliente\n\n          .col-md-4.shortcut(data-toggle=\"modal\", data-target=\"#search-client-modal\")\n              i.material-icons library_books\n              p.section-title Nuevo Contrato\n\n          .col-md-4.shortcut(data-toggle=\"modal\", data-target=\"#search-client-modal\")\n              i.material-icons monetization_on\n              p.section-title Registrar Pago\n\n          .col-md-4.shortcut#caller-new-client(data-toggle=\"modal\", data-target=\"#add-extra-modal\")\n              i.material-icons more\n              p.section-title Servicio Extra\n\n      .col-md-4.clock-card\n          h3.card-title.t-center Hora\n          h4.hour.h3-4.t-center {{ date.hour }}\n    SearchClientModal\n</template>\n\n<script>\nimport DetailCards from './components/DetailCards.vue';\nimport SearchClientModal from './components/SearchClientModal.vue';\n\nconst store = window.appStore;\n\n\nexport default {\n  name: 'home-section',\n  components: {\n    DetailCards,\n    SearchClientModal\n  },\n  mounted() {\n    this.getDate();\n  },\n  data() {\n    return {\n      store,\n      date: {\n        day: '',\n        monthYear: '',\n        dayWeek: '',\n        hour: ''\n      }\n    };\n  },\n\n  methods: {\n    getDate() {\n      const self = this;\n      const days = ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado'];\n      const months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n\n      function updateHour() {\n        const date = new Date();\n        self.date.day = date.getDate();\n        self.date.monthYear = `De ${months[date.getMonth()]} de ${date.getFullYear()}`;\n        self.date.dayWeek = days[date.getDay()];\n        self.date.hour = date.toLocaleTimeString();\n      }\n\n      setInterval(updateHour, 1000);\n    },\n\n  },\n\n  computed: {\n    logo() {\n      const logo = this.store.company.logo || 'company/default.png';\n      return `${baseURL}assets/uploads/${logo}`;\n    }\n  },\n};\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/modules/home/HomeSection.vue","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DetailCards.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7a82caf3\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DetailCards.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/home/components/DetailCards.vue\n// module id = 104\n// module chunks = 2","<template lang=\"pug\">\n   .col-md-4.col-xs-12.details-card\n      .layout-container\n          .pagos-layer\n              h3.card-title(data-toggle=\"modal\", data-target=\"#notification-view\") Proximos Pagos\n              .placeholder-icon: i.material-icons.icon-placeholder notifications_active\n              .list-nextpayments\n\n          .averias-layer\n              h3.card-title(data-toggle=\"modal\", data-target=\"#notification-view\") Caja Chica\n              .placeholder-icon: i.material-icons.icon-placeholder money\n              .list-repair.centered-container\n                h2.current-saldo {{ store.pettyCashBalance | currencyFormat }}\n\n          .deudores-layer\n              h3.card-title(data-toggle=\"modal\", data-target=\"#notification-view\") Lista de Deudores\n              .placeholder-icon: i.material-icons.icon-placeholder money_off\n              .list-nextpayments\n\n          .day-income-layer\n              h3.card-title(data-toggle=\"modal\", data-target=\"#notification-view\") Ganancias del dia\n              .list-repair.centered-container\n                  a(target=\"_blank\" href=\"base_url('process/getreport/payment/today\")\n                  h2.current-saldo day_income\n\n      .details-control-container\n        button.detail-control(@click=\"moveControls(0)\") Pagos\n        button.detail-control(@click=\"moveControls(-100)\") Caja Chica\n        button.detail-control(@click=\"moveControls(-200)\") Deudores\n        button.detail-control(@click=\"moveControls(-300)\") Ganancias\n</template>\n\n\n<script>\n  export default {\n    props: {\n      store: {\n        type: Object,\n        required: true\n      }\n    },\n    data() {\n      return {\n        mode: ''\n      };\n    },\n    mounted() {\n      this.moveControls();\n    },\n\n    methods: {\n      moveControls(position) {\n        const layoutContainer = $('.layout-container');\n        layoutContainer.animate({\n          left: `${position}%`\n        }, 200);\n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/modules/home/components/DetailCards.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-4 col-xs-12 details-card\"},[_c('div',{staticClass:\"layout-container\"},[_vm._m(0,false,false),_c('div',{staticClass:\"averias-layer\"},[_c('h3',{staticClass:\"card-title\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#notification-view\"}},[_vm._v(\"Caja Chica\")]),_vm._m(1,false,false),_c('div',{staticClass:\"list-repair centered-container\"},[_c('h2',{staticClass:\"current-saldo\"},[_vm._v(_vm._s(_vm._f(\"currencyFormat\")(_vm.store.pettyCashBalance)))])])]),_vm._m(2,false,false),_vm._m(3,false,false)]),_c('div',{staticClass:\"details-control-container\"},[_c('button',{staticClass:\"detail-control\",on:{\"click\":function($event){_vm.moveControls(0)}}},[_vm._v(\"Pagos\")]),_c('button',{staticClass:\"detail-control\",on:{\"click\":function($event){_vm.moveControls(-100)}}},[_vm._v(\"Caja Chica\")]),_c('button',{staticClass:\"detail-control\",on:{\"click\":function($event){_vm.moveControls(-200)}}},[_vm._v(\"Deudores\")]),_c('button',{staticClass:\"detail-control\",on:{\"click\":function($event){_vm.moveControls(-300)}}},[_vm._v(\"Ganancias\")])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pagos-layer\"},[_c('h3',{staticClass:\"card-title\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#notification-view\"}},[_vm._v(\"Proximos Pagos\")]),_c('div',{staticClass:\"placeholder-icon\"},[_c('i',{staticClass:\"material-icons icon-placeholder\"},[_vm._v(\"notifications_active\")])]),_c('div',{staticClass:\"list-nextpayments\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"placeholder-icon\"},[_c('i',{staticClass:\"material-icons icon-placeholder\"},[_vm._v(\"money\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"deudores-layer\"},[_c('h3',{staticClass:\"card-title\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#notification-view\"}},[_vm._v(\"Lista de Deudores\")]),_c('div',{staticClass:\"placeholder-icon\"},[_c('i',{staticClass:\"material-icons icon-placeholder\"},[_vm._v(\"money_off\")])]),_c('div',{staticClass:\"list-nextpayments\"})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"day-income-layer\"},[_c('h3',{staticClass:\"card-title\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#notification-view\"}},[_vm._v(\"Ganancias del dia\")]),_c('div',{staticClass:\"list-repair centered-container\"},[_c('a',{attrs:{\"target\":\"_blank\",\"href\":\"base_url('process/getreport/payment/today\"}}),_c('h2',{staticClass:\"current-saldo\"},[_vm._v(\"day_income\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7a82caf3\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/modules/home/components/DetailCards.vue\n// module id = 106\n// module chunks = 2","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SearchClientModal.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-78913874\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SearchClientModal.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/home/components/SearchClientModal.vue\n// module id = 107\n// module chunks = 2","<template lang=\"pug\">\n  .modal.fade(tabindex=\"-1\", role=\"dialog\", id=\"search-client-modal\")\n    .modal-dialog.modal-lg(role=\"document\")\n      .modal-content\n        .modal-header\n          button(type=\"button\", class=\"close\", data-dismiss=\"modal\", aria-label=\"Close\"): span(aria-hidden=\"true\") &times;\n          h4.modal-title Nuevo Contrato\n        .modal-body\n            #search-client-container\n              .searcher-container.main-toolbar#search-client-toolbar(style=\"margin-bottom: 0\")\n                .input-group.search(style=\"width: 100%; margin-bottom: 5px\")\n                  .input-group-addon: i.material-icons search\n                  input.form-control.searcher#client-searcher(type=\"text\",v-model=\"search\", @keyup=\"getClients\", :placeholder=\"placeholder\")\n\n              DataTable(ids=\"search-client-table\", :parentId=\"parentId\", :data=\"clients\", :cols=\"cols\", :toolbar=\"toolbar\", :options=\"tableOptions\")\n        .modal-footer\n          button(type=\"button\", class=\"btn\", data-dismiss=\"modal\") Cancelar\n          button(type=\"button\", class=\"btn save\", id=\"btn-send-message\", @click.stop.prevent='sendMessage') enviar\n\n</template>\n\n<script>\n  import DataTable from './../../sharedComponents/DataTable.vue';\n  import ClientStore from './../../clientes/store/clientStore';\n\n  export default {\n    components: {\n      DataTable\n    },\n\n    data() {\n      const clientStore = new ClientStore();\n\n      return {\n        parentId: '#search-client-container',\n        toolbar: '#search-client-toolbar',\n        clients: '',\n        tableOptions: {\n          pageSize: 5\n        },\n        clientStore,\n        search: '',\n        placeholder: 'Busque cliente por cedula, nombre, apellidos o id',\n\n        cols: clientStore.columns\n      };\n    },\n\n    methods: {\n      getClients() {\n        const data = { word: this.search };\n        this.$http.post('clients/get_clients/search', this.getDataForm(data))\n          .then((res) => {\n            this.clients = res.data.clients;\n          })\n          .catch((err) => {\n            this.$toasted.error(err);\n          });\n      }\n    }\n  };\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/modules/home/components/SearchClientModal.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal fade\",attrs:{\"tabindex\":\"-1\",\"role\":\"dialog\",\"id\":\"search-client-modal\"}},[_c('div',{staticClass:\"modal-dialog modal-lg\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_vm._m(0,false,false),_c('div',{staticClass:\"modal-body\"},[_c('div',{attrs:{\"id\":\"search-client-container\"}},[_c('div',{staticClass:\"searcher-container main-toolbar\",staticStyle:{\"margin-bottom\":\"0\"},attrs:{\"id\":\"search-client-toolbar\"}},[_c('div',{staticClass:\"input-group search\",staticStyle:{\"width\":\"100%\",\"margin-bottom\":\"5px\"}},[_vm._m(1,false,false),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search),expression:\"search\"}],staticClass:\"form-control searcher\",attrs:{\"id\":\"client-searcher\",\"type\":\"text\",\"placeholder\":_vm.placeholder},domProps:{\"value\":(_vm.search)},on:{\"keyup\":_vm.getClients,\"input\":function($event){if($event.target.composing){ return; }_vm.search=$event.target.value}}})])]),_c('DataTable',{attrs:{\"ids\":\"search-client-table\",\"parentId\":_vm.parentId,\"data\":_vm.clients,\"cols\":_vm.cols,\"toolbar\":_vm.toolbar,\"options\":_vm.tableOptions}})],1)]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"Cancelar\")]),_c('button',{staticClass:\"btn save\",attrs:{\"type\":\"button\",\"id\":\"btn-send-message\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();_vm.sendMessage($event)}}},[_vm._v(\"enviar\")])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal-header\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]),_c('h4',{staticClass:\"modal-title\"},[_vm._v(\"Nuevo Contrato\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-addon\"},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"search\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-78913874\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/modules/home/components/SearchClientModal.vue\n// module id = 109\n// module chunks = 2","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{attrs:{\"id\":\"home-section\"}},[_c('div',{staticClass:\"row welcome-screen\"},[_c('div',{staticClass:\"col-md-8 col-xs-12 main-card\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"company-data\"},[_c('img',{staticClass:\"company-logo\",staticStyle:{\"width\":\"170px\"},attrs:{\"src\":_vm.logo,\"alt\":\"company-logo\"}})]),_c('div',{staticClass:\"welcome-data\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6 without-padding\"},[_c('h4',[_vm._v(_vm._s(_vm.store.company.nombre))]),_c('h4',[_vm._v(\"Bienvenido \"+_vm._s(_vm.store.currentUser.name))])]),_c('div',{staticClass:\"col-md-5 col-xs-6 date-container\"},[_c('p',{staticClass:\"day\"},[_vm._v(_vm._s(_vm.date.day))]),_c('p',{staticClass:\"month-year\"},[_vm._v(_vm._s(_vm.date.monthYear))]),_c('span',{staticClass:\"dayweek\"},[_vm._v(_vm._s(_vm.date.dayWeek))])])])])])]),_c('DetailCards',{attrs:{\"store\":_vm.store}})],1),_c('div',{staticClass:\"row home-options-container\"},[_vm._m(0,false,false),_c('div',{staticClass:\"col-md-4 clock-card\"},[_c('h3',{staticClass:\"card-title t-center\"},[_vm._v(\"Hora\")]),_c('h4',{staticClass:\"hour h3-4 t-center\"},[_vm._v(_vm._s(_vm.date.hour))])])]),_c('SearchClientModal')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-md-8 hidden-xs shortcuts-container\"},[_c('div',{staticClass:\"col-md-4 shortcut\",attrs:{\"id\":\"caller-new-client\",\"data-toggle\":\"modal\",\"data-target\":\"#new-client-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"person_add\")]),_c('p',{staticClass:\"section-title\"},[_vm._v(\"Nuevo Cliente\")])]),_c('div',{staticClass:\"col-md-4 shortcut\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#search-client-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"library_books\")]),_c('p',{staticClass:\"section-title\"},[_vm._v(\"Nuevo Contrato\")])]),_c('div',{staticClass:\"col-md-4 shortcut\",attrs:{\"data-toggle\":\"modal\",\"data-target\":\"#search-client-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"monetization_on\")]),_c('p',{staticClass:\"section-title\"},[_vm._v(\"Registrar Pago\")])]),_c('div',{staticClass:\"col-md-4 shortcut\",attrs:{\"id\":\"caller-new-client\",\"data-toggle\":\"modal\",\"data-target\":\"#add-extra-modal\"}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"more\")]),_c('p',{staticClass:\"section-title\"},[_vm._v(\"Servicio Extra\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1cbcb835\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/modules/home/HomeSection.vue\n// module id = 110\n// module chunks = 2","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./HomeSection.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1cbcb835\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./HomeSection.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/home/HomeSection.vue\n// module id = 76\n// module chunks = 2","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./DataTable.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-357e043f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/template-compiler/preprocessor?engine=pug!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./DataTable.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/sharedComponents/DataTable.vue\n// module id = 84\n// module chunks = 0 1 2 3 5 6","<template lang=\"pug\">\n\n  table(:id=\"ids\", class=\"display\", cellspacing=\"0\", width=\"100%\")\n    thead\n    tbody\n</template>\n\n<script>\n  import 'bootstrap-table';\n  import '../../../node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP';\n\n  export default {\n    props: {\n      cols: {\n        type: Array\n      },\n      data: {\n        type: String\n      },\n      options: {\n        type: Object\n      },\n      ids: {\n        type: String\n      },\n      endpoint: {\n        type: String\n      },\n      parentId: {\n        type: String\n      },\n      toolbar: {\n        type: String\n      }\n    },\n    mounted() {\n      this.init();\n      this.refresh(this.data);\n    },\n    watch: {\n      data() {\n        this.refresh(this.data);\n        this.intialized = false;\n      }\n    },\n\n    methods: {\n\n      init() {\n        this.table = $(`#${this.ids}`);\n        this.$filter = $(`${this.parentId} .filter`);\n        this.activate();\n        this.listen();\n      },\n\n      activate(page) {\n        const self = this;\n        this.table.bootstrapTable({\n          columns: self.cols,\n          sortOrder: 'asc',\n          search: 'true',\n          toolbar: self.toolbar,\n          showRefresh: false,\n          showColumns: false,\n          showExport: false,\n          minimumCountColumns: 2,\n          showPaginationSwitch: false,\n          pagination: true,\n          idField: 'id',\n          pageSize: self.options.pageSize || 50,\n          pageList: self.options.pageList || [10, 20, 50, 100, 2000],\n          showFooter: false,\n          clickToSelect: true,\n          singleSelect: true,\n          striped: false,\n          fixed: true,\n          footer: false\n        });\n        this.table.find('tbody').css({ display: 'table-row-group' });\n        this.table.addClass('innertable');\n        this.$filter.change();\n        if (!this.intialized) {\n          this.initialized = true;\n          this.customSearch();\n          this.listen();\n        }\n        if (page) {\n          this.table.bootstrapTable('selectPage', page);\n        }\n      },\n\n      getSelectedRow(emit = true) {\n        const row = this.table.bootstrapTable('getSelections')[0];\n        if (emit) {\n          this.$emit('selected-row', row);\n        }\n        return row;\n      },\n\n      getId(emit = true) {\n        const self = this;\n        const id = $.map(this.table.bootstrapTable('getSelections'), row => row[self.idField]);\n        if (emit) {\n          this.$emit('id', id);\n        }\n        return id;\n      },\n\n      refresh(content) {\n        const options = this.table.bootstrapTable('getOptions');\n        this.table.bootstrapTable('destroy');\n        this.table.find('tbody').html(content);\n        this.activate(options.pageNumber);\n      },\n\n      listen() {\n        const self = this;\n        this.table.on('all.bs.table', (e, name, args) => {\n          if (name === 'check.bs.table' || name === 'uncheck.bs.table') {\n            const row = this.getSelectedRow();\n            self.$emit('check-uncheck', name, row, args);\n          } else if (name === 'click-cell.bs.table' && args[0] === 'estado') {\n            self.$emit('cell-clicked', name, args);\n          }\n        });\n\n        $(window).resize(() => {\n          self.table.bootstrapTable('resetView');\n        });\n      },\n\n      customSearch() {\n        $(`${this.parentId} .pull-right.search`).addClass('hide');\n        const $inputSearch = $(`${this.parentId} .search input`);\n\n        const self = this;\n        // eslint-disable-next-line\n        $inputSearch.on('click', function () {\n          const $this = $(this).parent();\n          $this.addClass('focus');\n        });\n        // eslint-disable-next-line\n        $inputSearch.on('blur', function () {\n          const $this = $(this).parent();\n          $this.removeClass('focus');\n        });\n        // eslint-disable-next-line\n        this.$filter.on('change', function () {\n          let filterWord = $(this).val();\n          if (filterWord === 'todo') {\n            filterWord = self.options.states;\n          }\n          self.applyFilter(filterWord);\n        });\n      },\n\n      applyFilter(filter) {\n        const self = this;\n        this.table.bootstrapTable('filterBy', {\n          [self.options.stateField]: filter\n        });\n        self.$emit('filter.bs');\n      }\n    }\n  };\n\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/modules/sharedComponents/DataTable.vue","/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.11.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\nexport default (function ($) {\n    'use strict';\n\n    // TOOLS DEFINITION\n    // ======================\n\n    var cachedWidth = null;\n\n    // it only does '%s', and return '' when arguments are undefined\n    var sprintf = function (str) {\n        var args = arguments,\n            flag = true,\n            i = 1;\n\n        str = str.replace(/%s/g, function () {\n            var arg = args[i++];\n\n            if (typeof arg === 'undefined') {\n                flag = false;\n                return '';\n            }\n            return arg;\n        });\n        return flag ? str : '';\n    };\n\n    var getPropertyFromOther = function (list, from, to, value) {\n        var result = '';\n        $.each(list, function (i, item) {\n            if (item[from] === value) {\n                result = item[to];\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n\n    var getFieldIndex = function (columns, field) {\n        var index = -1;\n\n        $.each(columns, function (i, column) {\n            if (column.field === field) {\n                index = i;\n                return false;\n            }\n            return true;\n        });\n        return index;\n    };\n\n    // http://jsfiddle.net/wenyi/47nz7ez9/3/\n    var setFieldIndex = function (columns) {\n        var i, j, k,\n            totalCol = 0,\n            flag = [];\n\n        for (i = 0; i < columns[0].length; i++) {\n            totalCol += columns[0][i].colspan || 1;\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            flag[i] = [];\n            for (j = 0; j < totalCol; j++) {\n                flag[i][j] = false;\n            }\n        }\n\n        for (i = 0; i < columns.length; i++) {\n            for (j = 0; j < columns[i].length; j++) {\n                var r = columns[i][j],\n                    rowspan = r.rowspan || 1,\n                    colspan = r.colspan || 1,\n                    index = $.inArray(false, flag[i]);\n\n                if (colspan === 1) {\n                    r.fieldIndex = index;\n                    // when field is undefined, use index instead\n                    if (typeof r.field === 'undefined') {\n                        r.field = index;\n                    }\n                }\n\n                for (k = 0; k < rowspan; k++) {\n                    flag[i + k][index] = true;\n                }\n                for (k = 0; k < colspan; k++) {\n                    flag[i][index + k] = true;\n                }\n            }\n        }\n    };\n\n    var getScrollBarWidth = function () {\n        if (cachedWidth === null) {\n            var inner = $('<p/>').addClass('fixed-table-scroll-inner'),\n                outer = $('<div/>').addClass('fixed-table-scroll-outer'),\n                w1, w2;\n\n            outer.append(inner);\n            $('body').append(outer);\n\n            w1 = inner[0].offsetWidth;\n            outer.css('overflow', 'scroll');\n            w2 = inner[0].offsetWidth;\n\n            if (w1 === w2) {\n                w2 = outer[0].clientWidth;\n            }\n\n            outer.remove();\n            cachedWidth = w1 - w2;\n        }\n        return cachedWidth;\n    };\n\n    var calculateObjectValue = function (self, name, args, defaultValue) {\n        var func = name;\n\n        if (typeof name === 'string') {\n            // support obj.func1.func2\n            var names = name.split('.');\n\n            if (names.length > 1) {\n                func = window;\n                $.each(names, function (i, f) {\n                    func = func[f];\n                });\n            } else {\n                func = window[name];\n            }\n        }\n        if (typeof func === 'object') {\n            return func;\n        }\n        if (typeof func === 'function') {\n            return func.apply(self, args || []);\n        }\n        if (!func && typeof name === 'string' && sprintf.apply(this, [name].concat(args))) {\n            return sprintf.apply(this, [name].concat(args));\n        }\n        return defaultValue;\n    };\n\n    var compareObjects = function (objectA, objectB, compareLength) {\n        // Create arrays of property names\n        var objectAProperties = Object.getOwnPropertyNames(objectA),\n            objectBProperties = Object.getOwnPropertyNames(objectB),\n            propName = '';\n\n        if (compareLength) {\n            // If number of properties is different, objects are not equivalent\n            if (objectAProperties.length !== objectBProperties.length) {\n                return false;\n            }\n        }\n\n        for (var i = 0; i < objectAProperties.length; i++) {\n            propName = objectAProperties[i];\n\n            // If the property is not in the object B properties, continue with the next property\n            if ($.inArray(propName, objectBProperties) > -1) {\n                // If values of same property are not equal, objects are not equivalent\n                if (objectA[propName] !== objectB[propName]) {\n                    return false;\n                }\n            }\n        }\n\n        // If we made it this far, objects are considered equivalent\n        return true;\n    };\n\n    var escapeHTML = function (text) {\n        if (typeof text === 'string') {\n            return text\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#039;')\n                .replace(/`/g, '&#x60;');\n        }\n        return text;\n    };\n\n    var getRealDataAttr = function (dataAttr) {\n        for (var attr in dataAttr) {\n            var auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase();\n            if (auxAttr !== attr) {\n                dataAttr[auxAttr] = dataAttr[attr];\n                delete dataAttr[attr];\n            }\n        }\n\n        return dataAttr;\n    };\n\n    var getItemField = function (item, field, escape) {\n        var value = item;\n\n        if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n            return escape ? escapeHTML(item[field]) : item[field];\n        }\n        var props = field.split('.');\n        for (var p in props) {\n            if (props.hasOwnProperty(p)) {\n                value = value && value[props[p]];\n            }\n        }\n        return escape ? escapeHTML(value) : value;\n    };\n\n    var isIEBrowser = function () {\n        return !!(navigator.userAgent.indexOf(\"MSIE \") > 0 || !!navigator.userAgent.match(/Trident.*rv\\:11\\./));\n    };\n\n    var objectKeys = function () {\n        // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n                    dontEnums = [\n                        'toString',\n                        'toLocaleString',\n                        'valueOf',\n                        'hasOwnProperty',\n                        'isPrototypeOf',\n                        'propertyIsEnumerable',\n                        'constructor'\n                    ],\n                    dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    var result = [], prop, i;\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n                    return result;\n                };\n            }());\n        }\n    };\n\n    // BOOTSTRAP TABLE CLASS DEFINITION\n    // ======================\n\n    var BootstrapTable = function (el, options) {\n        this.options = options;\n        this.$el = $(el);\n        this.$el_ = this.$el.clone();\n        this.timeoutId_ = 0;\n        this.timeoutFooter_ = 0;\n\n        this.init();\n    };\n\n    BootstrapTable.DEFAULTS = {\n        classes: 'table table-hover',\n        sortClass: undefined,\n        locale: undefined,\n        height: undefined,\n        undefinedText: '-',\n        sortName: undefined,\n        sortOrder: 'asc',\n        sortStable: false,\n        striped: false,\n        columns: [[]],\n        data: [],\n        totalField: 'total',\n        dataField: 'rows',\n        method: 'get',\n        url: undefined,\n        ajax: undefined,\n        cache: true,\n        contentType: 'application/json',\n        dataType: 'json',\n        ajaxOptions: {},\n        queryParams: function (params) {\n            return params;\n        },\n        queryParamsType: 'limit', // undefined\n        responseHandler: function (res) {\n            return res;\n        },\n        pagination: false,\n        onlyInfoPagination: false,\n        paginationLoop: true,\n        sidePagination: 'client', // client or server\n        totalRows: 0, // server side need to set\n        pageNumber: 1,\n        pageSize: 10,\n        pageList: [10, 25, 50, 100],\n        paginationHAlign: 'right', //right, left\n        paginationVAlign: 'bottom', //bottom, top, both\n        paginationDetailHAlign: 'left', //right, left\n        paginationPreText: '&lsaquo;',\n        paginationNextText: '&rsaquo;',\n        search: false,\n        searchOnEnterKey: false,\n        strictSearch: false,\n        searchAlign: 'right',\n        selectItemName: 'btSelectItem',\n        showHeader: true,\n        showFooter: false,\n        showColumns: false,\n        showPaginationSwitch: false,\n        showRefresh: false,\n        showToggle: false,\n        buttonsAlign: 'right',\n        smartDisplay: true,\n        escape: false,\n        minimumCountColumns: 1,\n        idField: undefined,\n        uniqueId: undefined,\n        cardView: false,\n        detailView: false,\n        detailFormatter: function (index, row) {\n            return '';\n        },\n        trimOnSearch: true,\n        clickToSelect: false,\n        singleSelect: false,\n        toolbar: undefined,\n        toolbarAlign: 'left',\n        checkboxHeader: true,\n        sortable: true,\n        silentSort: true,\n        maintainSelected: false,\n        searchTimeOut: 500,\n        searchText: '',\n        iconSize: undefined,\n        buttonsClass: 'default',\n        iconsPrefix: 'glyphicon', // glyphicon of fa (font awesome)\n        icons: {\n            paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n            paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n            refresh: 'glyphicon-refresh icon-refresh',\n            toggle: 'glyphicon-list-alt icon-list-alt',\n            columns: 'glyphicon-th icon-th',\n            detailOpen: 'glyphicon-plus icon-plus',\n            detailClose: 'glyphicon-minus icon-minus'\n        },\n\n        customSearch: $.noop,\n\n        customSort: $.noop,\n\n        rowStyle: function (row, index) {\n            return {};\n        },\n\n        rowAttributes: function (row, index) {\n            return {};\n        },\n\n        footerStyle: function (row, index) {\n            return {};\n        },\n\n        onAll: function (name, args) {\n            return false;\n        },\n        onClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onDblClickCell: function (field, value, row, $element) {\n            return false;\n        },\n        onClickRow: function (item, $element) {\n            return false;\n        },\n        onDblClickRow: function (item, $element) {\n            return false;\n        },\n        onSort: function (name, order) {\n            return false;\n        },\n        onCheck: function (row) {\n            return false;\n        },\n        onUncheck: function (row) {\n            return false;\n        },\n        onCheckAll: function (rows) {\n            return false;\n        },\n        onUncheckAll: function (rows) {\n            return false;\n        },\n        onCheckSome: function (rows) {\n            return false;\n        },\n        onUncheckSome: function (rows) {\n            return false;\n        },\n        onLoadSuccess: function (data) {\n            return false;\n        },\n        onLoadError: function (status) {\n            return false;\n        },\n        onColumnSwitch: function (field, checked) {\n            return false;\n        },\n        onPageChange: function (number, size) {\n            return false;\n        },\n        onSearch: function (text) {\n            return false;\n        },\n        onToggle: function (cardView) {\n            return false;\n        },\n        onPreBody: function (data) {\n            return false;\n        },\n        onPostBody: function () {\n            return false;\n        },\n        onPostHeader: function () {\n            return false;\n        },\n        onExpandRow: function (index, row, $detail) {\n            return false;\n        },\n        onCollapseRow: function (index, row) {\n            return false;\n        },\n        onRefreshOptions: function (options) {\n            return false;\n        },\n        onRefresh: function (params) {\n          return false;\n        },\n        onResetView: function () {\n            return false;\n        }\n    };\n\n    BootstrapTable.LOCALES = {};\n\n    BootstrapTable.LOCALES['en-US'] = BootstrapTable.LOCALES.en = {\n        formatLoadingMessage: function () {\n            return 'Loading, please wait...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return sprintf('%s rows per page', pageNumber);\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return sprintf('Showing %s to %s of %s rows', pageFrom, pageTo, totalRows);\n        },\n        formatDetailPagination: function (totalRows) {\n            return sprintf('Showing %s rows', totalRows);\n        },\n        formatSearch: function () {\n            return 'Search';\n        },\n        formatNoMatches: function () {\n            return 'No matching records found';\n        },\n        formatPaginationSwitch: function () {\n            return 'Hide/Show pagination';\n        },\n        formatRefresh: function () {\n            return 'Refresh';\n        },\n        formatToggle: function () {\n            return 'Toggle';\n        },\n        formatColumns: function () {\n            return 'Columns';\n        },\n        formatAllRows: function () {\n            return 'All';\n        }\n    };\n\n    $.extend(BootstrapTable.DEFAULTS, BootstrapTable.LOCALES['en-US']);\n\n    BootstrapTable.COLUMN_DEFAULTS = {\n        radio: false,\n        checkbox: false,\n        checkboxEnabled: true,\n        field: undefined,\n        title: undefined,\n        titleTooltip: undefined,\n        'class': undefined,\n        align: undefined, // left, right, center\n        halign: undefined, // left, right, center\n        falign: undefined, // left, right, center\n        valign: undefined, // top, middle, bottom\n        width: undefined,\n        sortable: false,\n        order: 'asc', // asc, desc\n        visible: true,\n        switchable: true,\n        clickToSelect: true,\n        formatter: undefined,\n        footerFormatter: undefined,\n        events: undefined,\n        sorter: undefined,\n        sortName: undefined,\n        cellStyle: undefined,\n        searchable: true,\n        searchFormatter: true,\n        cardVisible: true,\n        escape : false\n    };\n\n    BootstrapTable.EVENTS = {\n        'all.bs.table': 'onAll',\n        'click-cell.bs.table': 'onClickCell',\n        'dbl-click-cell.bs.table': 'onDblClickCell',\n        'click-row.bs.table': 'onClickRow',\n        'dbl-click-row.bs.table': 'onDblClickRow',\n        'sort.bs.table': 'onSort',\n        'check.bs.table': 'onCheck',\n        'uncheck.bs.table': 'onUncheck',\n        'check-all.bs.table': 'onCheckAll',\n        'uncheck-all.bs.table': 'onUncheckAll',\n        'check-some.bs.table': 'onCheckSome',\n        'uncheck-some.bs.table': 'onUncheckSome',\n        'load-success.bs.table': 'onLoadSuccess',\n        'load-error.bs.table': 'onLoadError',\n        'column-switch.bs.table': 'onColumnSwitch',\n        'page-change.bs.table': 'onPageChange',\n        'search.bs.table': 'onSearch',\n        'toggle.bs.table': 'onToggle',\n        'pre-body.bs.table': 'onPreBody',\n        'post-body.bs.table': 'onPostBody',\n        'post-header.bs.table': 'onPostHeader',\n        'expand-row.bs.table': 'onExpandRow',\n        'collapse-row.bs.table': 'onCollapseRow',\n        'refresh-options.bs.table': 'onRefreshOptions',\n        'reset-view.bs.table': 'onResetView',\n        'refresh.bs.table': 'onRefresh'\n    };\n\n    BootstrapTable.prototype.init = function () {\n        this.initLocale();\n        this.initContainer();\n        this.initTable();\n        this.initHeader();\n        this.initData();\n        this.initHiddenRows();\n        this.initFooter();\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n        this.initSearchText();\n        this.initServer();\n    };\n\n    BootstrapTable.prototype.initLocale = function () {\n        if (this.options.locale) {\n            var parts = this.options.locale.split(/-|_/);\n            parts[0].toLowerCase();\n            if (parts[1]) parts[1].toUpperCase();\n            if ($.fn.bootstrapTable.locales[this.options.locale]) {\n                // locale as requested\n                $.extend(this.options, $.fn.bootstrapTable.locales[this.options.locale]);\n            } else if ($.fn.bootstrapTable.locales[parts.join('-')]) {\n                // locale with sep set to - (in case original was specified with _)\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts.join('-')]);\n            } else if ($.fn.bootstrapTable.locales[parts[0]]) {\n                // short locale language code (i.e. 'en')\n                $.extend(this.options, $.fn.bootstrapTable.locales[parts[0]]);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.initContainer = function () {\n        this.$container = $([\n            '<div class=\"bootstrap-table\">',\n            '<div class=\"fixed-table-toolbar\"></div>',\n            this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\" style=\"clear: both;\"></div>' :\n                '',\n            '<div class=\"fixed-table-container\">',\n            '<div class=\"fixed-table-header\"><table></table></div>',\n            '<div class=\"fixed-table-body\">',\n            '<div class=\"fixed-table-loading\">',\n            this.options.formatLoadingMessage(),\n            '</div>',\n            '</div>',\n            '<div class=\"fixed-table-footer\"><table><tr></tr></table></div>',\n            this.options.paginationVAlign === 'bottom' || this.options.paginationVAlign === 'both' ?\n                '<div class=\"fixed-table-pagination\"></div>' :\n                '',\n            '</div>',\n            '</div>'\n        ].join(''));\n\n        this.$container.insertAfter(this.$el);\n        this.$tableContainer = this.$container.find('.fixed-table-container');\n        this.$tableHeader = this.$container.find('.fixed-table-header');\n        this.$tableBody = this.$container.find('.fixed-table-body');\n        this.$tableLoading = this.$container.find('.fixed-table-loading');\n        this.$tableFooter = this.$container.find('.fixed-table-footer');\n        this.$toolbar = this.$container.find('.fixed-table-toolbar');\n        this.$pagination = this.$container.find('.fixed-table-pagination');\n\n        this.$tableBody.append(this.$el);\n        this.$container.after('<div class=\"clearfix\"></div>');\n\n        this.$el.addClass(this.options.classes);\n        if (this.options.striped) {\n            this.$el.addClass('table-striped');\n        }\n        if ($.inArray('table-no-bordered', this.options.classes.split(' ')) !== -1) {\n            this.$tableContainer.addClass('table-no-bordered');\n        }\n    };\n\n    BootstrapTable.prototype.initTable = function () {\n        var that = this,\n            columns = [],\n            data = [];\n\n        this.$header = this.$el.find('>thead');\n        if (!this.$header.length) {\n            this.$header = $('<thead></thead>').appendTo(this.$el);\n        }\n        this.$header.find('tr').each(function () {\n            var column = [];\n\n            $(this).find('th').each(function () {\n                // Fix #2014 - getFieldIndex and elsewhere assume this is string, causes issues if not\n                if (typeof $(this).data('field') !== 'undefined') {\n                    $(this).data('field', $(this).data('field') + '');\n                }\n                column.push($.extend({}, {\n                    title: $(this).html(),\n                    'class': $(this).attr('class'),\n                    titleTooltip: $(this).attr('title'),\n                    rowspan: $(this).attr('rowspan') ? +$(this).attr('rowspan') : undefined,\n                    colspan: $(this).attr('colspan') ? +$(this).attr('colspan') : undefined\n                }, $(this).data()));\n            });\n            columns.push(column);\n        });\n        if (!$.isArray(this.options.columns[0])) {\n            this.options.columns = [this.options.columns];\n        }\n        this.options.columns = $.extend(true, [], columns, this.options.columns);\n        this.columns = [];\n\n        setFieldIndex(this.options.columns);\n        $.each(this.options.columns, function (i, columns) {\n            $.each(columns, function (j, column) {\n                column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, column);\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.columns[column.fieldIndex] = column;\n                }\n\n                that.options.columns[i][j] = column;\n            });\n        });\n\n        // if options.data is setting, do not process tbody data\n        if (this.options.data.length) {\n            return;\n        }\n\n        var m = [];\n        this.$el.find('>tbody>tr').each(function (y) {\n            var row = {};\n\n            // save tr's id, class and data-* attributes\n            row._id = $(this).attr('id');\n            row._class = $(this).attr('class');\n            row._data = getRealDataAttr($(this).data());\n\n            $(this).find('>td').each(function (x) {\n                var $this = $(this),\n                    cspan = +$this.attr('colspan') || 1,\n                    rspan = +$this.attr('rowspan') || 1,\n                    tx, ty;\n\n                for (; m[y] && m[y][x]; x++); //skip already occupied cells in current row\n\n                for (tx = x; tx < x + cspan; tx++) { //mark matrix elements occupied by current cell with true\n                    for (ty = y; ty < y + rspan; ty++) {\n                        if (!m[ty]) { //fill missing rows\n                            m[ty] = [];\n                        }\n                        m[ty][tx] = true;\n                    }\n                }\n\n                var field = that.columns[x].field;\n\n                row[field] = $(this).html();\n                // save td's id, class and data-* attributes\n                row['_' + field + '_id'] = $(this).attr('id');\n                row['_' + field + '_class'] = $(this).attr('class');\n                row['_' + field + '_rowspan'] = $(this).attr('rowspan');\n                row['_' + field + '_colspan'] = $(this).attr('colspan');\n                row['_' + field + '_title'] = $(this).attr('title');\n                row['_' + field + '_data'] = getRealDataAttr($(this).data());\n            });\n            data.push(row);\n        });\n        this.options.data = data;\n        if (data.length) this.fromHtml = true;\n    };\n\n    BootstrapTable.prototype.initHeader = function () {\n        var that = this,\n            visibleColumns = {},\n            html = [];\n\n        this.header = {\n            fields: [],\n            styles: [],\n            classes: [],\n            formatters: [],\n            events: [],\n            sorters: [],\n            sortNames: [],\n            cellStyles: [],\n            searchables: []\n        };\n\n        $.each(this.options.columns, function (i, columns) {\n            html.push('<tr>');\n\n            if (i === 0 && !that.options.cardView && that.options.detailView) {\n                html.push(sprintf('<th class=\"detail\" rowspan=\"%s\"><div class=\"fht-cell\"></div></th>',\n                    that.options.columns.length));\n            }\n\n            $.each(columns, function (j, column) {\n                var text = '',\n                    halign = '', // header align style\n                    align = '', // body align style\n                    style = '',\n                    class_ = sprintf(' class=\"%s\"', column['class']),\n                    order = that.options.sortOrder || column.order,\n                    unitWidth = 'px',\n                    width = column.width;\n\n                if (column.width !== undefined && (!that.options.cardView)) {\n                    if (typeof column.width === 'string') {\n                        if (column.width.indexOf('%') !== -1) {\n                            unitWidth = '%';\n                        }\n                    }\n                }\n                if (column.width && typeof column.width === 'string') {\n                    width = column.width.replace('%', '').replace('px', '');\n                }\n\n                halign = sprintf('text-align: %s; ', column.halign ? column.halign : column.align);\n                align = sprintf('text-align: %s; ', column.align);\n                style = sprintf('vertical-align: %s; ', column.valign);\n                style += sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n                    '36px' : (width ? width + unitWidth : undefined));\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    that.header.fields[column.fieldIndex] = column.field;\n                    that.header.styles[column.fieldIndex] = align + style;\n                    that.header.classes[column.fieldIndex] = class_;\n                    that.header.formatters[column.fieldIndex] = column.formatter;\n                    that.header.events[column.fieldIndex] = column.events;\n                    that.header.sorters[column.fieldIndex] = column.sorter;\n                    that.header.sortNames[column.fieldIndex] = column.sortName;\n                    that.header.cellStyles[column.fieldIndex] = column.cellStyle;\n                    that.header.searchables[column.fieldIndex] = column.searchable;\n\n                    if (!column.visible) {\n                        return;\n                    }\n\n                    if (that.options.cardView && (!column.cardVisible)) {\n                        return;\n                    }\n\n                    visibleColumns[column.field] = column;\n                }\n\n                html.push('<th' + sprintf(' title=\"%s\"', column.titleTooltip),\n                    column.checkbox || column.radio ?\n                        sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n                        class_,\n                    sprintf(' style=\"%s\"', halign + style),\n                    sprintf(' rowspan=\"%s\"', column.rowspan),\n                    sprintf(' colspan=\"%s\"', column.colspan),\n                    sprintf(' data-field=\"%s\"', column.field),\n                    '>');\n\n                html.push(sprintf('<div class=\"th-inner %s\">', that.options.sortable && column.sortable ?\n                    'sortable both' : ''));\n\n                text = that.options.escape ? escapeHTML(column.title) : column.title;\n\n                if (column.checkbox) {\n                    if (!that.options.singleSelect && that.options.checkboxHeader) {\n                        text = '<input name=\"btSelectAll\" type=\"checkbox\" />';\n                    }\n                    that.header.stateField = column.field;\n                }\n                if (column.radio) {\n                    text = '';\n                    that.header.stateField = column.field;\n                    that.options.singleSelect = true;\n                }\n\n                html.push(text);\n                html.push('</div>');\n                html.push('<div class=\"fht-cell\"></div>');\n                html.push('</div>');\n                html.push('</th>');\n            });\n            html.push('</tr>');\n        });\n\n        this.$header.html(html.join(''));\n        this.$header.find('th[data-field]').each(function (i) {\n            $(this).data(visibleColumns[$(this).data('field')]);\n        });\n        this.$container.off('click', '.th-inner').on('click', '.th-inner', function (event) {\n            var target = $(this);\n\n            if (that.options.detailView) {\n                if (target.closest('.bootstrap-table')[0] !== that.$container[0])\n                    return false;\n            }\n\n            if (that.options.sortable && target.parent().data().sortable) {\n                that.onSort(event);\n            }\n        });\n\n        this.$header.children().children().off('keypress').on('keypress', function (event) {\n            if (that.options.sortable && $(this).data().sortable) {\n                var code = event.keyCode || event.which;\n                if (code == 13) { //Enter keycode\n                    that.onSort(event);\n                }\n            }\n        });\n\n        $(window).off('resize.bootstrap-table');\n        if (!this.options.showHeader || this.options.cardView) {\n            this.$header.hide();\n            this.$tableHeader.hide();\n            this.$tableLoading.css('top', 0);\n        } else {\n            this.$header.show();\n            this.$tableHeader.show();\n            this.$tableLoading.css('top', this.$header.outerHeight() + 1);\n            // Assign the correct sortable arrow\n            this.getCaret();\n            $(window).on('resize.bootstrap-table', $.proxy(this.resetWidth, this));\n        }\n\n        this.$selectAll = this.$header.find('[name=\"btSelectAll\"]');\n        this.$selectAll.off('click').on('click', function () {\n                var checked = $(this).prop('checked');\n                that[checked ? 'checkAll' : 'uncheckAll']();\n                that.updateSelected();\n            });\n    };\n\n    BootstrapTable.prototype.initFooter = function () {\n        if (!this.options.showFooter || this.options.cardView) {\n            this.$tableFooter.hide();\n        } else {\n            this.$tableFooter.show();\n        }\n    };\n\n    /**\n     * @param data\n     * @param type: append / prepend\n     */\n    BootstrapTable.prototype.initData = function (data, type) {\n        if (type === 'append') {\n            this.data = this.data.concat(data);\n        } else if (type === 'prepend') {\n            this.data = [].concat(data).concat(this.data);\n        } else {\n            this.data = data || this.options.data;\n        }\n\n        // Fix #839 Records deleted when adding new row on filtered table\n        if (type === 'append') {\n            this.options.data = this.options.data.concat(data);\n        } else if (type === 'prepend') {\n            this.options.data = [].concat(data).concat(this.options.data);\n        } else {\n            this.options.data = this.data;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            return;\n        }\n        this.initSort();\n    };\n\n    BootstrapTable.prototype.initSort = function () {\n        var that = this,\n            name = this.options.sortName,\n            order = this.options.sortOrder === 'desc' ? -1 : 1,\n            index = $.inArray(this.options.sortName, this.header.fields),\n            timeoutId = 0;\n\n        if (this.options.customSort !== $.noop) {\n            this.options.customSort.apply(this, [this.options.sortName, this.options.sortOrder]);\n            return;\n        }\n\n        if (index !== -1) {\n            if (this.options.sortStable) {\n                $.each(this.data, function (i, row) {\n                    if (!row.hasOwnProperty('_position')) row._position = i;\n                });\n            }\n\n            this.data.sort(function (a, b) {\n                if (that.header.sortNames[index]) {\n                    name = that.header.sortNames[index];\n                }\n                var aa = getItemField(a, name, that.options.escape),\n                    bb = getItemField(b, name, that.options.escape),\n                    value = calculateObjectValue(that.header, that.header.sorters[index], [aa, bb]);\n\n                if (value !== undefined) {\n                    return order * value;\n                }\n\n                // Fix #161: undefined or null string sort bug.\n                if (aa === undefined || aa === null) {\n                    aa = '';\n                }\n                if (bb === undefined || bb === null) {\n                    bb = '';\n                }\n\n                if (that.options.sortStable && aa === bb) {\n                    aa = a._position;\n                    bb = b._position;\n                }\n\n                // IF both values are numeric, do a numeric comparison\n                if ($.isNumeric(aa) && $.isNumeric(bb)) {\n                    // Convert numerical values form string to float.\n                    aa = parseFloat(aa);\n                    bb = parseFloat(bb);\n                    if (aa < bb) {\n                        return order * -1;\n                    }\n                    return order;\n                }\n\n                if (aa === bb) {\n                    return 0;\n                }\n\n                // If value is not a string, convert to string\n                if (typeof aa !== 'string') {\n                    aa = aa.toString();\n                }\n\n                if (aa.localeCompare(bb) === -1) {\n                    return order * -1;\n                }\n\n                return order;\n            });\n\n            if (this.options.sortClass !== undefined) {\n                clearTimeout(timeoutId);\n                timeoutId = setTimeout(function () {\n                    that.$el.removeClass(that.options.sortClass);\n                    var index = that.$header.find(sprintf('[data-field=\"%s\"]',\n                        that.options.sortName).index() + 1);\n                    that.$el.find(sprintf('tr td:nth-child(%s)', index))\n                        .addClass(that.options.sortClass);\n                }, 250);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSort = function (event) {\n        var $this = event.type === \"keypress\" ? $(event.currentTarget) : $(event.currentTarget).parent(),\n            $this_ = this.$header.find('th').eq($this.index());\n\n        this.$header.add(this.$header_).find('span.order').remove();\n\n        if (this.options.sortName === $this.data('field')) {\n            this.options.sortOrder = this.options.sortOrder === 'asc' ? 'desc' : 'asc';\n        } else {\n            this.options.sortName = $this.data('field');\n            this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc';\n        }\n        this.trigger('sort', this.options.sortName, this.options.sortOrder);\n\n        $this.add($this_).data('order', this.options.sortOrder);\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n\n        if (this.options.sidePagination === 'server') {\n            this.initServer(this.options.silentSort);\n            return;\n        }\n\n        this.initSort();\n        this.initBody();\n    };\n\n    BootstrapTable.prototype.initToolbar = function () {\n        var that = this,\n            html = [],\n            timeoutId = 0,\n            $keepOpen,\n            $search,\n            switchableCount = 0;\n\n        if (this.$toolbar.find('.bs-bars').children().length) {\n            $('body').append($(this.options.toolbar));\n        }\n        this.$toolbar.html('');\n\n        if (typeof this.options.toolbar === 'string' || typeof this.options.toolbar === 'object') {\n            $(sprintf('<div class=\"bs-bars pull-%s\"></div>', this.options.toolbarAlign))\n                .appendTo(this.$toolbar)\n                .append($(this.options.toolbar));\n        }\n\n        // showColumns, showToggle, showRefresh\n        html = [sprintf('<div class=\"columns columns-%s btn-group pull-%s\">',\n            this.options.buttonsAlign, this.options.buttonsAlign)];\n\n        if (typeof this.options.icons === 'string') {\n            this.options.icons = calculateObjectValue(null, this.options.icons);\n        }\n\n        if (this.options.showPaginationSwitch) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"paginationSwitch\" aria-label=\"pagination Switch\" title=\"%s\">',\n                    this.options.formatPaginationSwitch()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.paginationSwitchDown),\n                '</button>');\n        }\n\n        if (this.options.showRefresh) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"refresh\" aria-label=\"refresh\" title=\"%s\">',\n                    this.options.formatRefresh()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.refresh),\n                '</button>');\n        }\n\n        if (this.options.showToggle) {\n            html.push(sprintf('<button class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    '\" type=\"button\" name=\"toggle\" aria-label=\"toggle\" title=\"%s\">',\n                    this.options.formatToggle()),\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.toggle),\n                '</button>');\n        }\n\n        if (this.options.showColumns) {\n            html.push(sprintf('<div class=\"keep-open btn-group\" title=\"%s\">',\n                    this.options.formatColumns()),\n                '<button type=\"button\" aria-label=\"columns\" class=\"btn' +\n                sprintf(' btn-%s', this.options.buttonsClass) +\n                sprintf(' btn-%s', this.options.iconSize) +\n                ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.columns),\n                ' <span class=\"caret\"></span>',\n                '</button>',\n                '<ul class=\"dropdown-menu\" role=\"menu\">');\n\n            $.each(this.columns, function (i, column) {\n                if (column.radio || column.checkbox) {\n                    return;\n                }\n\n                if (that.options.cardView && !column.cardVisible) {\n                    return;\n                }\n\n                var checked = column.visible ? ' checked=\"checked\"' : '';\n\n                if (column.switchable) {\n                    html.push(sprintf('<li role=\"menuitem\">' +\n                        '<label><input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s> %s</label>' +\n                        '</li>', column.field, i, checked, column.title));\n                    switchableCount++;\n                }\n            });\n            html.push('</ul>',\n                '</div>');\n        }\n\n        html.push('</div>');\n\n        // Fix #188: this.showToolbar is for extensions\n        if (this.showToolbar || html.length > 2) {\n            this.$toolbar.append(html.join(''));\n        }\n\n        if (this.options.showPaginationSwitch) {\n            this.$toolbar.find('button[name=\"paginationSwitch\"]')\n                .off('click').on('click', $.proxy(this.togglePagination, this));\n        }\n\n        if (this.options.showRefresh) {\n            this.$toolbar.find('button[name=\"refresh\"]')\n                .off('click').on('click', $.proxy(this.refresh, this));\n        }\n\n        if (this.options.showToggle) {\n            this.$toolbar.find('button[name=\"toggle\"]')\n                .off('click').on('click', function () {\n                    that.toggleView();\n                });\n        }\n\n        if (this.options.showColumns) {\n            $keepOpen = this.$toolbar.find('.keep-open');\n\n            if (switchableCount <= this.options.minimumCountColumns) {\n                $keepOpen.find('input').prop('disabled', true);\n            }\n\n            $keepOpen.find('li').off('click').on('click', function (event) {\n                event.stopImmediatePropagation();\n            });\n            $keepOpen.find('input').off('click').on('click', function () {\n                var $this = $(this);\n\n                that.toggleColumn($(this).val(), $this.prop('checked'), false);\n                that.trigger('column-switch', $(this).data('field'), $this.prop('checked'));\n            });\n        }\n\n        if (this.options.search) {\n            html = [];\n            html.push(\n                '<div class=\"pull-' + this.options.searchAlign + ' search\">',\n                sprintf('<input class=\"form-control' +\n                    sprintf(' input-%s', this.options.iconSize) +\n                    '\" type=\"text\" placeholder=\"%s\">',\n                    this.options.formatSearch()),\n                '</div>');\n\n            this.$toolbar.append(html.join(''));\n            $search = this.$toolbar.find('.search input');\n            $search.off('keyup drop blur').on('keyup drop blur', function (event) {\n                if (that.options.searchOnEnterKey && event.keyCode !== 13) {\n                    return;\n                }\n\n                if ($.inArray(event.keyCode, [37, 38, 39, 40]) > -1) {\n                    return;\n                }\n\n                clearTimeout(timeoutId); // doesn't matter if it's 0\n                timeoutId = setTimeout(function () {\n                    that.onSearch(event);\n                }, that.options.searchTimeOut);\n            });\n\n            if (isIEBrowser()) {\n                $search.off('mouseup').on('mouseup', function (event) {\n                    clearTimeout(timeoutId); // doesn't matter if it's 0\n                    timeoutId = setTimeout(function () {\n                        that.onSearch(event);\n                    }, that.options.searchTimeOut);\n                });\n            }\n        }\n    };\n\n    BootstrapTable.prototype.onSearch = function (event) {\n        var text = $.trim($(event.currentTarget).val());\n\n        // trim search input\n        if (this.options.trimOnSearch && $(event.currentTarget).val() !== text) {\n            $(event.currentTarget).val(text);\n        }\n\n        if (text === this.searchText) {\n            return;\n        }\n        this.searchText = text;\n        this.options.searchText = text;\n\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n        this.trigger('search', text);\n    };\n\n    BootstrapTable.prototype.initSearch = function () {\n        var that = this;\n\n        if (this.options.sidePagination !== 'server') {\n            if (this.options.customSearch !== $.noop) {\n                this.options.customSearch.apply(this, [this.searchText]);\n                return;\n            }\n\n            var s = this.searchText && (this.options.escape ?\n                escapeHTML(this.searchText) : this.searchText).toLowerCase();\n            var f = $.isEmptyObject(this.filterColumns) ? null : this.filterColumns;\n\n            // Check filter\n            this.data = f ? $.grep(this.options.data, function (item, i) {\n                for (var key in f) {\n                    if ($.isArray(f[key]) && $.inArray(item[key], f[key]) === -1 ||\n                            !$.isArray(f[key]) && item[key] !== f[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            }) : this.options.data;\n\n            this.data = s ? $.grep(this.data, function (item, i) {\n                for (var j = 0; j < that.header.fields.length; j++) {\n\n                    if (!that.header.searchables[j]) {\n                        continue;\n                    }\n\n                    var key = $.isNumeric(that.header.fields[j]) ? parseInt(that.header.fields[j], 10) : that.header.fields[j];\n                    var column = that.columns[getFieldIndex(that.columns, key)];\n                    var value;\n\n                    if (typeof key === 'string') {\n                        value = item;\n                        var props = key.split('.');\n                        for (var prop_index = 0; prop_index < props.length; prop_index++) {\n                            value = value[props[prop_index]];\n                        }\n\n                        // Fix #142: respect searchForamtter boolean\n                        if (column && column.searchFormatter) {\n                            value = calculateObjectValue(column,\n                                that.header.formatters[j], [value, item, i], value);\n                        }\n                    } else {\n                        value = item[key];\n                    }\n\n                    if (typeof value === 'string' || typeof value === 'number') {\n                        if (that.options.strictSearch) {\n                            if ((value + '').toLowerCase() === s) {\n                                return true;\n                            }\n                        } else {\n                            if ((value + '').toLowerCase().indexOf(s) !== -1) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n                return false;\n            }) : this.data;\n        }\n    };\n\n    BootstrapTable.prototype.initPagination = function () {\n        if (!this.options.pagination) {\n            this.$pagination.hide();\n            return;\n        } else {\n            this.$pagination.show();\n        }\n\n        var that = this,\n            html = [],\n            $allSelected = false,\n            i, from, to,\n            $pageList,\n            $first, $pre,\n            $next, $last,\n            $number,\n            data = this.getData(),\n            pageList = this.options.pageList;\n\n        if (this.options.sidePagination !== 'server') {\n            this.options.totalRows = data.length;\n        }\n\n        this.totalPages = 0;\n        if (this.options.totalRows) {\n            if (this.options.pageSize === this.options.formatAllRows()) {\n                this.options.pageSize = this.options.totalRows;\n                $allSelected = true;\n            } else if (this.options.pageSize === this.options.totalRows) {\n                // Fix #667 Table with pagination,\n                // multiple pages and a search that matches to one page throws exception\n                var pageLst = typeof this.options.pageList === 'string' ?\n                    this.options.pageList.replace('[', '').replace(']', '')\n                        .replace(/ /g, '').toLowerCase().split(',') : this.options.pageList;\n                if ($.inArray(this.options.formatAllRows().toLowerCase(), pageLst)  > -1) {\n                    $allSelected = true;\n                }\n            }\n\n            this.totalPages = ~~((this.options.totalRows - 1) / this.options.pageSize) + 1;\n\n            this.options.totalPages = this.totalPages;\n        }\n        if (this.totalPages > 0 && this.options.pageNumber > this.totalPages) {\n            this.options.pageNumber = this.totalPages;\n        }\n\n        this.pageFrom = (this.options.pageNumber - 1) * this.options.pageSize + 1;\n        this.pageTo = this.options.pageNumber * this.options.pageSize;\n        if (this.pageTo > this.options.totalRows) {\n            this.pageTo = this.options.totalRows;\n        }\n\n        html.push(\n            '<div class=\"pull-' + this.options.paginationDetailHAlign + ' pagination-detail\">',\n            '<span class=\"pagination-info\">',\n            this.options.onlyInfoPagination ? this.options.formatDetailPagination(this.options.totalRows) :\n            this.options.formatShowingRows(this.pageFrom, this.pageTo, this.options.totalRows),\n            '</span>');\n\n        if (!this.options.onlyInfoPagination) {\n            html.push('<span class=\"page-list\">');\n\n            var pageNumber = [\n                    sprintf('<span class=\"btn-group %s\">',\n                        this.options.paginationVAlign === 'top' || this.options.paginationVAlign === 'both' ?\n                            'dropdown' : 'dropup'),\n                    '<button type=\"button\" class=\"btn' +\n                    sprintf(' btn-%s', this.options.buttonsClass) +\n                    sprintf(' btn-%s', this.options.iconSize) +\n                    ' dropdown-toggle\" data-toggle=\"dropdown\">',\n                    '<span class=\"page-size\">',\n                    $allSelected ? this.options.formatAllRows() : this.options.pageSize,\n                    '</span>',\n                    ' <span class=\"caret\"></span>',\n                    '</button>',\n                    '<ul class=\"dropdown-menu\" role=\"menu\">'\n                ];\n\n            if (typeof this.options.pageList === 'string') {\n                var list = this.options.pageList.replace('[', '').replace(']', '')\n                    .replace(/ /g, '').split(',');\n\n                pageList = [];\n                $.each(list, function (i, value) {\n                    pageList.push(value.toUpperCase() === that.options.formatAllRows().toUpperCase() ?\n                        that.options.formatAllRows() : +value);\n                });\n            }\n\n            $.each(pageList, function (i, page) {\n                if (!that.options.smartDisplay || i === 0 || pageList[i - 1] < that.options.totalRows) {\n                    var active;\n                    if ($allSelected) {\n                        active = page === that.options.formatAllRows() ? ' class=\"active\"' : '';\n                    } else {\n                        active = page === that.options.pageSize ? ' class=\"active\"' : '';\n                    }\n                    pageNumber.push(sprintf('<li role=\"menuitem\"%s><a href=\"#\">%s</a></li>', active, page));\n                }\n            });\n            pageNumber.push('</ul></span>');\n\n            html.push(this.options.formatRecordsPerPage(pageNumber.join('')));\n            html.push('</span>');\n\n            html.push('</div>',\n                '<div class=\"pull-' + this.options.paginationHAlign + ' pagination\">',\n                '<ul class=\"pagination' + sprintf(' pagination-%s', this.options.iconSize) + '\">',\n                '<li class=\"page-pre\"><a href=\"#\">' + this.options.paginationPreText + '</a></li>');\n\n            if (this.totalPages < 5) {\n                from = 1;\n                to = this.totalPages;\n            } else {\n                from = this.options.pageNumber - 2;\n                to = from + 4;\n                if (from < 1) {\n                    from = 1;\n                    to = 5;\n                }\n                if (to > this.totalPages) {\n                    to = this.totalPages;\n                    from = to - 4;\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber >= 3) {\n                    html.push('<li class=\"page-first' + (1 === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', 1, '</a>',\n                        '</li>');\n\n                    from++;\n                }\n\n                if (this.options.pageNumber >= 4) {\n                    if (this.options.pageNumber == 4 || this.totalPages == 6 || this.totalPages == 7) {\n                        from--;\n                    } else {\n                        html.push('<li class=\"page-first-separator disabled\">',\n                            '<a href=\"#\">...</a>',\n                            '</li>');\n                    }\n\n                    to--;\n                }\n            }\n\n            if (this.totalPages >= 7) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    from--;\n                }\n            }\n\n            if (this.totalPages == 6) {\n                if (this.options.pageNumber >= (this.totalPages - 2)) {\n                    to++;\n                }\n            } else if (this.totalPages >= 7) {\n                if (this.totalPages == 7 || this.options.pageNumber >= (this.totalPages - 3)) {\n                    to++;\n                }\n            }\n\n            for (i = from; i <= to; i++) {\n                html.push('<li class=\"page-number' + (i === this.options.pageNumber ? ' active' : '') + '\">',\n                    '<a href=\"#\">', i, '</a>',\n                    '</li>');\n            }\n\n            if (this.totalPages >= 8) {\n                if (this.options.pageNumber <= (this.totalPages - 4)) {\n                    html.push('<li class=\"page-last-separator disabled\">',\n                        '<a href=\"#\">...</a>',\n                        '</li>');\n                }\n            }\n\n            if (this.totalPages >= 6) {\n                if (this.options.pageNumber <= (this.totalPages - 3)) {\n                    html.push('<li class=\"page-last' + (this.totalPages === this.options.pageNumber ? ' active' : '') + '\">',\n                        '<a href=\"#\">', this.totalPages, '</a>',\n                        '</li>');\n                }\n            }\n\n            html.push(\n                '<li class=\"page-next\"><a href=\"#\">' + this.options.paginationNextText + '</a></li>',\n                '</ul>',\n                '</div>');\n        }\n        this.$pagination.html(html.join(''));\n\n        if (!this.options.onlyInfoPagination) {\n            $pageList = this.$pagination.find('.page-list a');\n            $first = this.$pagination.find('.page-first');\n            $pre = this.$pagination.find('.page-pre');\n            $next = this.$pagination.find('.page-next');\n            $last = this.$pagination.find('.page-last');\n            $number = this.$pagination.find('.page-number');\n\n            if (this.options.smartDisplay) {\n                if (this.totalPages <= 1) {\n                    this.$pagination.find('div.pagination').hide();\n                }\n                if (pageList.length < 2 || this.options.totalRows <= pageList[0]) {\n                    this.$pagination.find('span.page-list').hide();\n                }\n\n                // when data is empty, hide the pagination\n                this.$pagination[this.getData().length ? 'show' : 'hide']();\n            }\n\n            if (!this.options.paginationLoop) {\n                if (this.options.pageNumber === 1) {\n                    $pre.addClass('disabled');\n                }\n                if (this.options.pageNumber === this.totalPages) {\n                    $next.addClass('disabled');\n                }\n            }\n\n            if ($allSelected) {\n                this.options.pageSize = this.options.formatAllRows();\n            }\n            $pageList.off('click').on('click', $.proxy(this.onPageListChange, this));\n            $first.off('click').on('click', $.proxy(this.onPageFirst, this));\n            $pre.off('click').on('click', $.proxy(this.onPagePre, this));\n            $next.off('click').on('click', $.proxy(this.onPageNext, this));\n            $last.off('click').on('click', $.proxy(this.onPageLast, this));\n            $number.off('click').on('click', $.proxy(this.onPageNumber, this));\n        }\n    };\n\n    BootstrapTable.prototype.updatePagination = function (event) {\n        // Fix #171: IE disabled button can be clicked bug.\n        if (event && $(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        if (!this.options.maintainSelected) {\n            this.resetRows();\n        }\n\n        this.initPagination();\n        if (this.options.sidePagination === 'server') {\n            this.initServer();\n        } else {\n            this.initBody();\n        }\n\n        this.trigger('page-change', this.options.pageNumber, this.options.pageSize);\n    };\n\n    BootstrapTable.prototype.onPageListChange = function (event) {\n        var $this = $(event.currentTarget);\n\n        $this.parent().addClass('active').siblings().removeClass('active');\n        this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n            this.options.formatAllRows() : +$this.text();\n        this.$toolbar.find('.page-size').text(this.options.pageSize);\n\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageFirst = function (event) {\n        this.options.pageNumber = 1;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPagePre = function (event) {\n        if ((this.options.pageNumber - 1) === 0) {\n            this.options.pageNumber = this.options.totalPages;\n        } else {\n            this.options.pageNumber--;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNext = function (event) {\n        if ((this.options.pageNumber + 1) > this.options.totalPages) {\n            this.options.pageNumber = 1;\n        } else {\n            this.options.pageNumber++;\n        }\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageLast = function (event) {\n        this.options.pageNumber = this.totalPages;\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.onPageNumber = function (event) {\n        if (this.options.pageNumber === +$(event.currentTarget).text()) {\n            return;\n        }\n        this.options.pageNumber = +$(event.currentTarget).text();\n        this.updatePagination(event);\n        return false;\n    };\n\n    BootstrapTable.prototype.initRow = function(item, i, data, parentDom) {\n        var that=this,\n            key,\n            html = [],\n            style = {},\n            csses = [],\n            data_ = '',\n            attributes = {},\n            htmlAttributes = [];\n\n        if ($.inArray(item, this.hiddenRows) > -1) {\n            return;\n        }\n\n        style = calculateObjectValue(this.options, this.options.rowStyle, [item, i], style);\n\n        if (style && style.css) {\n            for (key in style.css) {\n                csses.push(key + ': ' + style.css[key]);\n            }\n        }\n\n        attributes = calculateObjectValue(this.options,\n            this.options.rowAttributes, [item, i], attributes);\n\n        if (attributes) {\n            for (key in attributes) {\n                htmlAttributes.push(sprintf('%s=\"%s\"', key, escapeHTML(attributes[key])));\n            }\n        }\n\n        if (item._data && !$.isEmptyObject(item._data)) {\n            $.each(item._data, function(k, v) {\n                // ignore data-index\n                if (k === 'index') {\n                    return;\n                }\n                data_ += sprintf(' data-%s=\"%s\"', k, v);\n            });\n        }\n\n        html.push('<tr',\n            sprintf(' %s', htmlAttributes.join(' ')),\n            sprintf(' id=\"%s\"', $.isArray(item) ? undefined : item._id),\n            sprintf(' class=\"%s\"', style.classes || ($.isArray(item) ? undefined : item._class)),\n            sprintf(' data-index=\"%s\"', i),\n            sprintf(' data-uniqueid=\"%s\"', item[this.options.uniqueId]),\n            sprintf('%s', data_),\n            '>'\n        );\n\n        if (this.options.cardView) {\n            html.push(sprintf('<td colspan=\"%s\"><div class=\"card-views\">', this.header.fields.length));\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td>',\n                '<a class=\"detail-icon\" href=\"#\">',\n                sprintf('<i class=\"%s %s\"></i>', this.options.iconsPrefix, this.options.icons.detailOpen),\n                '</a>',\n                '</td>');\n        }\n\n        $.each(this.header.fields, function(j, field) {\n            var text = '',\n                value_ = getItemField(item, field, that.options.escape),\n                value = '',\n                type = '',\n                cellStyle = {},\n                id_ = '',\n                class_ = that.header.classes[j],\n                data_ = '',\n                rowspan_ = '',\n                colspan_ = '',\n                title_ = '',\n                column = that.columns[j];\n\n            if (that.fromHtml && typeof value_ === 'undefined') {\n                return;\n            }\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            if (column.escape) {\n                value_ = escapeHTML(value_);\n            }\n\n            style = sprintf('style=\"%s\"', csses.concat(that.header.styles[j]).join('; '));\n\n            // handle td's id and class\n            if (item['_' + field + '_id']) {\n                id_ = sprintf(' id=\"%s\"', item['_' + field + '_id']);\n            }\n            if (item['_' + field + '_class']) {\n                class_ = sprintf(' class=\"%s\"', item['_' + field + '_class']);\n            }\n            if (item['_' + field + '_rowspan']) {\n                rowspan_ = sprintf(' rowspan=\"%s\"', item['_' + field + '_rowspan']);\n            }\n            if (item['_' + field + '_colspan']) {\n                colspan_ = sprintf(' colspan=\"%s\"', item['_' + field + '_colspan']);\n            }\n            if (item['_' + field + '_title']) {\n                title_ = sprintf(' title=\"%s\"', item['_' + field + '_title']);\n            }\n            cellStyle = calculateObjectValue(that.header,\n                that.header.cellStyles[j], [value_, item, i, field], cellStyle);\n            if (cellStyle.classes) {\n                class_ = sprintf(' class=\"%s\"', cellStyle.classes);\n            }\n            if (cellStyle.css) {\n                var csses_ = [];\n                for (var key in cellStyle.css) {\n                    csses_.push(key + ': ' + cellStyle.css[key]);\n                }\n                style = sprintf('style=\"%s\"', csses_.concat(that.header.styles[j]).join('; '));\n            }\n\n            value = calculateObjectValue(column,\n                that.header.formatters[j], [value_, item, i], value_);\n\n            if (item['_' + field + '_data'] && !$.isEmptyObject(item['_' + field + '_data'])) {\n                $.each(item['_' + field + '_data'], function(k, v) {\n                    // ignore data-index\n                    if (k === 'index') {\n                        return;\n                    }\n                    data_ += sprintf(' data-%s=\"%s\"', k, v);\n                });\n            }\n\n            if (column.checkbox || column.radio) {\n                type = column.checkbox ? 'checkbox' : type;\n                type = column.radio ? 'radio' : type;\n\n                text = [sprintf(that.options.cardView ?\n                        '<div class=\"card-view %s\">' : '<td class=\"bs-checkbox %s\">', column['class'] || ''),\n                    '<input' +\n                    sprintf(' data-index=\"%s\"', i) +\n                    sprintf(' name=\"%s\"', that.options.selectItemName) +\n                    sprintf(' type=\"%s\"', type) +\n                    sprintf(' value=\"%s\"', item[that.options.idField]) +\n                    sprintf(' checked=\"%s\"', value === true ||\n                        (value_ || value && value.checked) ? 'checked' : undefined) +\n                    sprintf(' disabled=\"%s\"', !column.checkboxEnabled ||\n                        (value && value.disabled) ? 'disabled' : undefined) +\n                    ' />',\n                    that.header.formatters[j] && typeof value === 'string' ? value : '',\n                    that.options.cardView ? '</div>' : '</td>'\n                ].join('');\n\n                item[that.header.stateField] = value === true || (value && value.checked);\n            } else {\n                value = typeof value === 'undefined' || value === null ?\n                    that.options.undefinedText : value;\n\n                text = that.options.cardView ? ['<div class=\"card-view\">',\n                    that.options.showHeader ? sprintf('<span class=\"title\" %s>%s</span>', style,\n                        getPropertyFromOther(that.columns, 'field', 'title', field)) : '',\n                    sprintf('<span class=\"value\">%s</span>', value),\n                    '</div>'\n                ].join('') : [sprintf('<td%s %s %s %s %s %s %s>',\n                        id_, class_, style, data_, rowspan_, colspan_, title_),\n                    value,\n                    '</td>'\n                ].join('');\n\n                // Hide empty data on Card view when smartDisplay is set to true.\n                if (that.options.cardView && that.options.smartDisplay && value === '') {\n                    // Should set a placeholder for event binding correct fieldIndex\n                    text = '<div class=\"card-view\"></div>';\n                }\n            }\n\n            html.push(text);\n        });\n\n        if (this.options.cardView) {\n            html.push('</div></td>');\n        }\n        html.push('</tr>');\n\n        return html.join(' ');\n    };\n\n    BootstrapTable.prototype.initBody = function (fixedScroll) {\n        var that = this,\n            html = [],\n            data = this.getData();\n\n        this.trigger('pre-body', data);\n\n        this.$body = this.$el.find('>tbody');\n        if (!this.$body.length) {\n            this.$body = $('<tbody></tbody>').appendTo(this.$el);\n        }\n\n        //Fix #389 Bootstrap-table-flatJSON is not working\n\n        if (!this.options.pagination || this.options.sidePagination === 'server') {\n            this.pageFrom = 1;\n            this.pageTo = data.length;\n        }\n\n        var trFragments = $(document.createDocumentFragment());\n        var hasTr;\n\n        for (var i = this.pageFrom - 1; i < this.pageTo; i++) {\n            var item = data[i];\n            var tr = this.initRow(item, i, data, trFragments);\n            hasTr = hasTr || !!tr;\n            if (tr&&tr!==true) {\n                trFragments.append(tr);\n            }\n        }\n\n        // show no records\n        if (!hasTr) {\n            trFragments.append('<tr class=\"no-records-found\">' +\n                sprintf('<td colspan=\"%s\">%s</td>',\n                this.$header.find('th').length,\n                this.options.formatNoMatches()) +\n                '</tr>');\n        }\n\n        this.$body.html(trFragments);\n\n        if (!fixedScroll) {\n            this.scrollTo(0);\n        }\n\n        // click to select by column\n        this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', function (e) {\n            var $td = $(this),\n                $tr = $td.parent(),\n                item = that.data[$tr.data('index')],\n                index = $td[0].cellIndex,\n                fields = that.getVisibleFields(),\n                field = fields[that.options.detailView && !that.options.cardView ? index - 1 : index],\n                column = that.columns[getFieldIndex(that.columns, field)],\n                value = getItemField(item, field, that.options.escape);\n\n            if ($td.find('.detail-icon').length) {\n                return;\n            }\n\n            that.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td);\n            that.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field);\n\n            // if click to select - then trigger the checkbox/radio click\n            if (e.type === 'click' && that.options.clickToSelect && column.clickToSelect) {\n                var $selectItem = $tr.find(sprintf('[name=\"%s\"]', that.options.selectItemName));\n                if ($selectItem.length) {\n                    $selectItem[0].click(); // #144: .trigger('click') bug\n                }\n            }\n        });\n\n        this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', function () {\n            var $this = $(this),\n                $tr = $this.parent().parent(),\n                index = $tr.data('index'),\n                row = data[index]; // Fix #980 Detail view, when searching, returns wrong row\n\n            // remove and update\n            if ($tr.next().is('tr.detail-view')) {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailOpen));\n                that.trigger('collapse-row', index, row);\n                $tr.next().remove();\n            } else {\n                $this.find('i').attr('class', sprintf('%s %s', that.options.iconsPrefix, that.options.icons.detailClose));\n                $tr.after(sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.find('td').length));\n                var $element = $tr.next().find('td');\n                var content = calculateObjectValue(that.options, that.options.detailFormatter, [index, row, $element], '');\n                if($element.length === 1) {\n                    $element.append(content);\n                }\n                that.trigger('expand-row', index, row, $element);\n            }\n            that.resetView();\n            return false;\n        });\n\n        this.$selectItem = this.$body.find(sprintf('[name=\"%s\"]', this.options.selectItemName));\n        this.$selectItem.off('click').on('click', function (event) {\n            event.stopImmediatePropagation();\n\n            var $this = $(this),\n                checked = $this.prop('checked'),\n                row = that.data[$this.data('index')];\n\n            if (that.options.maintainSelected && $(this).is(':radio')) {\n                $.each(that.options.data, function (i, row) {\n                    row[that.header.stateField] = false;\n                });\n            }\n\n            row[that.header.stateField] = checked;\n\n            if (that.options.singleSelect) {\n                that.$selectItem.not(this).each(function () {\n                    that.data[$(this).data('index')][that.header.stateField] = false;\n                });\n                that.$selectItem.filter(':checked').not(this).prop('checked', false);\n            }\n\n            that.updateSelected();\n            that.trigger(checked ? 'check' : 'uncheck', row, $this);\n        });\n\n        $.each(this.header.events, function (i, events) {\n            if (!events) {\n                return;\n            }\n            // fix bug, if events is defined with namespace\n            if (typeof events === 'string') {\n                events = calculateObjectValue(null, events);\n            }\n\n            var field = that.header.fields[i],\n                fieldIndex = $.inArray(field, that.getVisibleFields());\n\n            if (that.options.detailView && !that.options.cardView) {\n                fieldIndex += 1;\n            }\n\n            for (var key in events) {\n                that.$body.find('>tr:not(.no-records-found)').each(function () {\n                    var $tr = $(this),\n                        $td = $tr.find(that.options.cardView ? '.card-view' : 'td').eq(fieldIndex),\n                        index = key.indexOf(' '),\n                        name = key.substring(0, index),\n                        el = key.substring(index + 1),\n                        func = events[key];\n\n                    $td.find(el).off(name).on(name, function (e) {\n                        var index = $tr.data('index'),\n                            row = that.data[index],\n                            value = row[field];\n\n                        func.apply(this, [e, value, row, index]);\n                    });\n                });\n            }\n        });\n\n        this.updateSelected();\n        this.resetView();\n\n        this.trigger('post-body', data);\n    };\n\n    BootstrapTable.prototype.initServer = function (silent, query, url) {\n        var that = this,\n            data = {},\n            params = {\n                searchText: this.searchText,\n                sortName: this.options.sortName,\n                sortOrder: this.options.sortOrder\n            },\n            request;\n\n        if (this.options.pagination) {\n            params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n                this.options.totalRows : this.options.pageSize;\n            params.pageNumber = this.options.pageNumber;\n        }\n\n        if (!(url || this.options.url) && !this.options.ajax) {\n            return;\n        }\n\n        if (this.options.queryParamsType === 'limit') {\n            params = {\n                search: params.searchText,\n                sort: params.sortName,\n                order: params.sortOrder\n            };\n\n            if (this.options.pagination) {\n                params.offset = this.options.pageSize === this.options.formatAllRows() ?\n                    0 : this.options.pageSize * (this.options.pageNumber - 1);\n                params.limit = this.options.pageSize === this.options.formatAllRows() ?\n                    this.options.totalRows : this.options.pageSize;\n            }\n        }\n\n        if (!($.isEmptyObject(this.filterColumnsPartial))) {\n            params.filter = JSON.stringify(this.filterColumnsPartial, null);\n        }\n\n        data = calculateObjectValue(this.options, this.options.queryParams, [params], data);\n\n        $.extend(data, query || {});\n\n        // false to stop request\n        if (data === false) {\n            return;\n        }\n\n        if (!silent) {\n            this.$tableLoading.show();\n        }\n        request = $.extend({}, calculateObjectValue(null, this.options.ajaxOptions), {\n            type: this.options.method,\n            url:  url || this.options.url,\n            data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n                JSON.stringify(data) : data,\n            cache: this.options.cache,\n            contentType: this.options.contentType,\n            dataType: this.options.dataType,\n            success: function (res) {\n                res = calculateObjectValue(that.options, that.options.responseHandler, [res], res);\n\n                that.load(res);\n                that.trigger('load-success', res);\n                if (!silent) that.$tableLoading.hide();\n            },\n            error: function (res) {\n                that.trigger('load-error', res.status, res);\n                if (!silent) that.$tableLoading.hide();\n            }\n        });\n\n        if (this.options.ajax) {\n            calculateObjectValue(this, this.options.ajax, [request], null);\n        } else {\n            if (this._xhr && this._xhr.readyState !== 4) {\n                this._xhr.abort();\n            }\n            this._xhr = $.ajax(request);\n        }\n    };\n\n    BootstrapTable.prototype.initSearchText = function () {\n        if (this.options.search) {\n            if (this.options.searchText !== '') {\n                var $search = this.$toolbar.find('.search input');\n                $search.val(this.options.searchText);\n                this.onSearch({currentTarget: $search});\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getCaret = function () {\n        var that = this;\n\n        $.each(this.$header.find('th'), function (i, th) {\n            $(th).find('.sortable').removeClass('desc asc').addClass($(th).data('field') === that.options.sortName ? that.options.sortOrder : 'both');\n        });\n    };\n\n    BootstrapTable.prototype.updateSelected = function () {\n        var checkAll = this.$selectItem.filter(':enabled').length &&\n            this.$selectItem.filter(':enabled').length ===\n            this.$selectItem.filter(':enabled').filter(':checked').length;\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checkAll);\n\n        this.$selectItem.each(function () {\n            $(this).closest('tr')[$(this).prop('checked') ? 'addClass' : 'removeClass']('selected');\n        });\n    };\n\n    BootstrapTable.prototype.updateRows = function () {\n        var that = this;\n\n        this.$selectItem.each(function () {\n            that.data[$(this).data('index')][that.header.stateField] = $(this).prop('checked');\n        });\n    };\n\n    BootstrapTable.prototype.resetRows = function () {\n        var that = this;\n\n        $.each(this.data, function (i, row) {\n            that.$selectAll.prop('checked', false);\n            that.$selectItem.prop('checked', false);\n            if (that.header.stateField) {\n                row[that.header.stateField] = false;\n            }\n        });\n        this.initHiddenRows();\n    };\n\n    BootstrapTable.prototype.trigger = function (name) {\n        var args = Array.prototype.slice.call(arguments, 1);\n\n        name += '.bs.table';\n        this.options[BootstrapTable.EVENTS[name]].apply(this.options, args);\n        this.$el.trigger($.Event(name), args);\n\n        this.options.onAll(name, args);\n        this.$el.trigger($.Event('all.bs.table'), [name, args]);\n    };\n\n    BootstrapTable.prototype.resetHeader = function () {\n        // fix #61: the hidden table reset header bug.\n        // fix bug: get $el.css('width') error sometime (height = 500)\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout($.proxy(this.fitHeader, this), this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitHeader = function () {\n        var that = this,\n            fixedBody,\n            scrollWidth,\n            focused,\n            focusedTemp;\n\n        if (that.$el.is(':hidden')) {\n            that.timeoutId_ = setTimeout($.proxy(that.fitHeader, that), 100);\n            return;\n        }\n        fixedBody = this.$tableBody.get(0);\n\n        scrollWidth = fixedBody.scrollWidth > fixedBody.clientWidth &&\n        fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            getScrollBarWidth() : 0;\n\n        this.$el.css('margin-top', -this.$header.outerHeight());\n\n        focused = $(':focus');\n        if (focused.length > 0) {\n            var $th = focused.parents('th');\n            if ($th.length > 0) {\n                var dataField = $th.attr('data-field');\n                if (dataField !== undefined) {\n                    var $headerTh = this.$header.find(\"[data-field='\" + dataField + \"']\");\n                    if ($headerTh.length > 0) {\n                        $headerTh.find(\":input\").addClass(\"focus-temp\");\n                    }\n                }\n            }\n        }\n\n        this.$header_ = this.$header.clone(true, true);\n        this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]');\n        this.$tableHeader.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', this.$el.outerWidth())\n            .html('').attr('class', this.$el.attr('class'))\n            .append(this.$header_);\n\n\n        focusedTemp = $('.focus-temp:visible:eq(0)');\n        if (focusedTemp.length > 0) {\n            focusedTemp.focus();\n            this.$header.find('.focus-temp').removeClass('focus-temp');\n        }\n\n        // fix bug: $.data() is not working as expected after $.append()\n        this.$header.find('th[data-field]').each(function (i) {\n            that.$header_.find(sprintf('th[data-field=\"%s\"]', $(this).data('field'))).data($(this).data());\n        });\n\n        var visibleFields = this.getVisibleFields(),\n            $ths = this.$header_.find('th');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this),\n                index = i;\n\n            if (that.options.detailView && !that.options.cardView) {\n                if (i === 0) {\n                    that.$header_.find('th.detail').find('.fht-cell').width($this.innerWidth());\n                }\n                index = i - 1;\n            }\n\n            var $th = that.$header_.find(sprintf('th[data-field=\"%s\"]', visibleFields[index]));\n            if ($th.length > 1) {\n                $th = $($ths[$this[0].cellIndex]);\n            }\n\n            $th.find('.fht-cell').width($this.innerWidth());\n        });\n        // horizontal scroll event\n        // TODO: it's probably better improving the layout than binding to scroll event\n        this.$tableBody.off('scroll').on('scroll', function () {\n            that.$tableHeader.scrollLeft($(this).scrollLeft());\n\n            if (that.options.showFooter && !that.options.cardView) {\n                that.$tableFooter.scrollLeft($(this).scrollLeft());\n            }\n        });\n        that.trigger('post-header');\n    };\n\n    BootstrapTable.prototype.resetFooter = function () {\n        var that = this,\n            data = that.getData(),\n            html = [];\n\n        if (!this.options.showFooter || this.options.cardView) { //do nothing\n            return;\n        }\n\n        if (!this.options.cardView && this.options.detailView) {\n            html.push('<td><div class=\"th-inner\">&nbsp;</div><div class=\"fht-cell\"></div></td>');\n        }\n\n        $.each(this.columns, function (i, column) {\n            var key,\n                falign = '', // footer align style\n                valign = '',\n                csses = [],\n                style = {},\n                class_ = sprintf(' class=\"%s\"', column['class']);\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (that.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            falign = sprintf('text-align: %s; ', column.falign ? column.falign : column.align);\n            valign = sprintf('vertical-align: %s; ', column.valign);\n\n            style = calculateObjectValue(null, that.options.footerStyle);\n\n            if (style && style.css) {\n                for (key in style.css) {\n                    csses.push(key + ': ' + style.css[key]);\n                }\n            }\n\n            html.push('<td', class_, sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')), '>');\n            html.push('<div class=\"th-inner\">');\n\n            html.push(calculateObjectValue(column, column.footerFormatter, [data], '&nbsp;') || '&nbsp;');\n\n            html.push('</div>');\n            html.push('<div class=\"fht-cell\"></div>');\n            html.push('</div>');\n            html.push('</td>');\n        });\n\n        this.$tableFooter.find('tr').html(html.join(''));\n        this.$tableFooter.show();\n        clearTimeout(this.timeoutFooter_);\n        this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this),\n            this.$el.is(':hidden') ? 100 : 0);\n    };\n\n    BootstrapTable.prototype.fitFooter = function () {\n        var that = this,\n            $footerTd,\n            elWidth,\n            scrollWidth;\n\n        clearTimeout(this.timeoutFooter_);\n        if (this.$el.is(':hidden')) {\n            this.timeoutFooter_ = setTimeout($.proxy(this.fitFooter, this), 100);\n            return;\n        }\n\n        elWidth = this.$el.css('width');\n        scrollWidth = elWidth > this.$tableBody.width() ? getScrollBarWidth() : 0;\n\n        this.$tableFooter.css({\n            'margin-right': scrollWidth\n        }).find('table').css('width', elWidth)\n            .attr('class', this.$el.attr('class'));\n\n        $footerTd = this.$tableFooter.find('td');\n\n        this.$body.find('>tr:first-child:not(.no-records-found) > *').each(function (i) {\n            var $this = $(this);\n\n            $footerTd.eq(i).find('.fht-cell').width($this.innerWidth());\n        });\n    };\n\n    BootstrapTable.prototype.toggleColumn = function (index, checked, needUpdate) {\n        if (index === -1) {\n            return;\n        }\n        this.columns[index].visible = checked;\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if (needUpdate) {\n                $items.filter(sprintf('[value=\"%s\"]', index)).prop('checked', checked);\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.getVisibleFields = function () {\n        var that = this,\n            visibleFields = [];\n\n        $.each(this.header.fields, function (j, field) {\n            var column = that.columns[getFieldIndex(that.columns, field)];\n\n            if (!column.visible) {\n                return;\n            }\n            visibleFields.push(field);\n        });\n        return visibleFields;\n    };\n\n    // PUBLIC FUNCTION DEFINITION\n    // =======================\n\n    BootstrapTable.prototype.resetView = function (params) {\n        var padding = 0;\n\n        if (params && params.height) {\n            this.options.height = params.height;\n        }\n\n        this.$selectAll.prop('checked', this.$selectItem.length > 0 &&\n            this.$selectItem.length === this.$selectItem.filter(':checked').length);\n\n        if (this.options.height) {\n            var toolbarHeight = this.$toolbar.outerHeight(true),\n                paginationHeight = this.$pagination.outerHeight(true),\n                height = this.options.height - toolbarHeight - paginationHeight;\n\n            this.$tableContainer.css('height', height + 'px');\n        }\n\n        if (this.options.cardView) {\n            // remove the element css\n            this.$el.css('margin-top', '0');\n            this.$tableContainer.css('padding-bottom', '0');\n            this.$tableFooter.hide();\n            return;\n        }\n\n        if (this.options.showHeader && this.options.height) {\n            this.$tableHeader.show();\n            this.resetHeader();\n            padding += this.$header.outerHeight();\n        } else {\n            this.$tableHeader.hide();\n            this.trigger('post-header');\n        }\n\n        if (this.options.showFooter) {\n            this.resetFooter();\n            if (this.options.height) {\n                padding += this.$tableFooter.outerHeight() + 1;\n            }\n        }\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n        this.$tableContainer.css('padding-bottom', padding + 'px');\n        this.trigger('reset-view');\n    };\n\n    BootstrapTable.prototype.getData = function (useCurrentPage) {\n        return (this.searchText || !$.isEmptyObject(this.filterColumns) || !$.isEmptyObject(this.filterColumnsPartial)) ?\n            (useCurrentPage ? this.data.slice(this.pageFrom - 1, this.pageTo) : this.data) :\n            (useCurrentPage ? this.options.data.slice(this.pageFrom - 1, this.pageTo) : this.options.data);\n    };\n\n    BootstrapTable.prototype.load = function (data) {\n        var fixedScroll = false;\n\n        // #431: support pagination\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows = data[this.options.totalField];\n            fixedScroll = data.fixedScroll;\n            data = data[this.options.dataField];\n        } else if (!$.isArray(data)) { // support fixedScroll\n            fixedScroll = data.fixedScroll;\n            data = data.data;\n        }\n\n        this.initData(data);\n        this.initSearch();\n        this.initPagination();\n        this.initBody(fixedScroll);\n    };\n\n    BootstrapTable.prototype.append = function (data) {\n        this.initData(data, 'append');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.prepend = function (data) {\n        this.initData(data, 'prepend');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.remove = function (params) {\n        var len = this.options.data.length,\n            i, row;\n\n        if (!params.hasOwnProperty('field') || !params.hasOwnProperty('values')) {\n            return;\n        }\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (!row.hasOwnProperty(params.field)) {\n                continue;\n            }\n            if ($.inArray(row[params.field], params.values) !== -1) {\n                this.options.data.splice(i, 1);\n                if (this.options.sidePagination === 'server') {\n                    this.options.totalRows -= 1;\n                }\n            }\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.removeAll = function () {\n        if (this.options.data.length > 0) {\n            this.options.data.splice(0, this.options.data.length);\n            this.initSearch();\n            this.initPagination();\n            this.initBody(true);\n        }\n    };\n\n    BootstrapTable.prototype.getRowByUniqueId = function (id) {\n        var uniqueId = this.options.uniqueId,\n            len = this.options.data.length,\n            dataRow = null,\n            i, row, rowUniqueId;\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n\n            if (row.hasOwnProperty(uniqueId)) { // uniqueId is a column\n                rowUniqueId = row[uniqueId];\n            } else if(row._data.hasOwnProperty(uniqueId)) { // uniqueId is a row data property\n                rowUniqueId = row._data[uniqueId];\n            } else {\n                continue;\n            }\n\n            if (typeof rowUniqueId === 'string') {\n                id = id.toString();\n            } else if (typeof rowUniqueId === 'number') {\n                if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n                    id = parseInt(id);\n                } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n                    id = parseFloat(id);\n                }\n            }\n\n            if (rowUniqueId === id) {\n                dataRow = row;\n                break;\n            }\n        }\n\n        return dataRow;\n    };\n\n    BootstrapTable.prototype.removeByUniqueId = function (id) {\n        var len = this.options.data.length,\n            row = this.getRowByUniqueId(id);\n\n        if (row) {\n            this.options.data.splice(this.options.data.indexOf(row), 1);\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateByUniqueId = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            var rowId;\n\n            if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n                return;\n            }\n\n            rowId = $.inArray(that.getRowByUniqueId(params.id), that.options.data);\n\n            if (rowId === -1) {\n                return;\n            }\n            $.extend(that.options.data[rowId], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.insertRow = function (params) {\n        if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n            return;\n        }\n        this.data.splice(params.index, 0, params.row);\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.updateRow = function (params) {\n        var that = this;\n        var allParams = $.isArray(params) ? params : [ params ];\n\n        $.each(allParams, function(i, params) {\n            if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n                return;\n            }\n            $.extend(that.options.data[params.index], params.row);\n        });\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.initHiddenRows = function () {\n        this.hiddenRows = [];\n    };\n\n    BootstrapTable.prototype.showRow = function (params) {\n        this.toggleRow(params, true);\n    };\n\n    BootstrapTable.prototype.hideRow = function (params) {\n        this.toggleRow(params, false);\n    };\n\n    BootstrapTable.prototype.toggleRow = function (params, visible) {\n        var row, index;\n\n        if (params.hasOwnProperty('index')) {\n            row = this.getData()[params.index];\n        } else if (params.hasOwnProperty('uniqueId')) {\n            row = this.getRowByUniqueId(params.uniqueId);\n        }\n\n        if (!row) {\n            return;\n        }\n\n        index = $.inArray(row, this.hiddenRows);\n\n        if (!visible && index === -1) {\n            this.hiddenRows.push(row);\n        } else if (visible && index > -1) {\n            this.hiddenRows.splice(index, 1);\n        }\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getHiddenRows = function (show) {\n        var that = this,\n            data = this.getData(),\n            rows = [];\n\n        $.each(data, function (i, row) {\n            if ($.inArray(row, that.hiddenRows) > -1) {\n                rows.push(row);\n            }\n        });\n        this.hiddenRows = rows;\n        return rows;\n    };\n\n    BootstrapTable.prototype.mergeCells = function (options) {\n        var row = options.index,\n            col = $.inArray(options.field, this.getVisibleFields()),\n            rowspan = options.rowspan || 1,\n            colspan = options.colspan || 1,\n            i, j,\n            $tr = this.$body.find('>tr'),\n            $td;\n\n        if (this.options.detailView && !this.options.cardView) {\n            col += 1;\n        }\n\n        $td = $tr.eq(row).find('>td').eq(col);\n\n        if (row < 0 || col < 0 || row >= this.data.length) {\n            return;\n        }\n\n        for (i = row; i < row + rowspan; i++) {\n            for (j = col; j < col + colspan; j++) {\n                $tr.eq(i).find('>td').eq(j).hide();\n            }\n        }\n\n        $td.attr('rowspan', rowspan).attr('colspan', colspan).show();\n    };\n\n    BootstrapTable.prototype.updateCell = function (params) {\n        if (!params.hasOwnProperty('index') ||\n            !params.hasOwnProperty('field') ||\n            !params.hasOwnProperty('value')) {\n            return;\n        }\n        this.data[params.index][params.field] = params.value;\n\n        if (params.reinit === false) {\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    };\n\n    BootstrapTable.prototype.getOptions = function () {\n        return this.options;\n    };\n\n    BootstrapTable.prototype.getSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            // fix #2424: from html with checkbox\n            return row[that.header.stateField] === true;\n        });\n    };\n\n    BootstrapTable.prototype.getAllSelections = function () {\n        var that = this;\n\n        return $.grep(this.options.data, function (row) {\n            return row[that.header.stateField];\n        });\n    };\n\n    BootstrapTable.prototype.checkAll = function () {\n        this.checkAll_(true);\n    };\n\n    BootstrapTable.prototype.uncheckAll = function () {\n        this.checkAll_(false);\n    };\n\n    BootstrapTable.prototype.checkInvert = function () {\n        var that = this;\n        var rows = that.$selectItem.filter(':enabled');\n        var checked = rows.filter(':checked');\n        rows.each(function() {\n            $(this).prop('checked', !$(this).prop('checked'));\n        });\n        that.updateRows();\n        that.updateSelected();\n        that.trigger('uncheck-some', checked);\n        checked = that.getSelections();\n        that.trigger('check-some', checked);\n    };\n\n    BootstrapTable.prototype.checkAll_ = function (checked) {\n        var rows;\n        if (!checked) {\n            rows = this.getSelections();\n        }\n        this.$selectAll.add(this.$selectAll_).prop('checked', checked);\n        this.$selectItem.filter(':enabled').prop('checked', checked);\n        this.updateRows();\n        if (checked) {\n            rows = this.getSelections();\n        }\n        this.trigger(checked ? 'check-all' : 'uncheck-all', rows);\n    };\n\n    BootstrapTable.prototype.check = function (index) {\n        this.check_(true, index);\n    };\n\n    BootstrapTable.prototype.uncheck = function (index) {\n        this.check_(false, index);\n    };\n\n    BootstrapTable.prototype.check_ = function (checked, index) {\n        var $el = this.$selectItem.filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n        this.data[index][this.header.stateField] = checked;\n        this.updateSelected();\n        this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el);\n    };\n\n    BootstrapTable.prototype.checkBy = function (obj) {\n        this.checkBy_(true, obj);\n    };\n\n    BootstrapTable.prototype.uncheckBy = function (obj) {\n        this.checkBy_(false, obj);\n    };\n\n    BootstrapTable.prototype.checkBy_ = function (checked, obj) {\n        if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n            return;\n        }\n\n        var that = this,\n            rows = [];\n        $.each(this.options.data, function (index, row) {\n            if (!row.hasOwnProperty(obj.field)) {\n                return false;\n            }\n            if ($.inArray(row[obj.field], obj.values) !== -1) {\n                var $el = that.$selectItem.filter(':enabled')\n                    .filter(sprintf('[data-index=\"%s\"]', index)).prop('checked', checked);\n                row[that.header.stateField] = checked;\n                rows.push(row);\n                that.trigger(checked ? 'check' : 'uncheck', row, $el);\n            }\n        });\n        this.updateSelected();\n        this.trigger(checked ? 'check-some' : 'uncheck-some', rows);\n    };\n\n    BootstrapTable.prototype.destroy = function () {\n        this.$el.insertBefore(this.$container);\n        $(this.options.toolbar).insertBefore(this.$el);\n        this.$container.next().remove();\n        this.$container.remove();\n        this.$el.html(this.$el_.html())\n            .css('margin-top', '0')\n            .attr('class', this.$el_.attr('class') || ''); // reset the class\n    };\n\n    BootstrapTable.prototype.showLoading = function () {\n        this.$tableLoading.show();\n    };\n\n    BootstrapTable.prototype.hideLoading = function () {\n        this.$tableLoading.hide();\n    };\n\n    BootstrapTable.prototype.togglePagination = function () {\n        this.options.pagination = !this.options.pagination;\n        var button = this.$toolbar.find('button[name=\"paginationSwitch\"] i');\n        if (this.options.pagination) {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchDown);\n        } else {\n            button.attr(\"class\", this.options.iconsPrefix + \" \" + this.options.icons.paginationSwitchUp);\n        }\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.refresh = function (params) {\n        if (params && params.url) {\n            this.options.url = params.url;\n        }\n        if (params && params.pageNumber) {\n            this.options.pageNumber = params.pageNumber;\n        }\n        if (params && params.pageSize) {\n            this.options.pageSize = params.pageSize;\n        }\n        this.initServer(params && params.silent,\n            params && params.query, params && params.url);\n        this.trigger('refresh', params);\n    };\n\n    BootstrapTable.prototype.resetWidth = function () {\n        if (this.options.showHeader && this.options.height) {\n            this.fitHeader();\n        }\n        if (this.options.showFooter) {\n            this.fitFooter();\n        }\n    };\n\n    BootstrapTable.prototype.showColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), true, true);\n    };\n\n    BootstrapTable.prototype.hideColumn = function (field) {\n        this.toggleColumn(getFieldIndex(this.columns, field), false, true);\n    };\n\n    BootstrapTable.prototype.getHiddenColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return !column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.getVisibleColumns = function () {\n        return $.grep(this.columns, function (column) {\n            return column.visible;\n        });\n    };\n\n    BootstrapTable.prototype.toggleAllColumns = function (visible) {\n        $.each(this.columns, function (i, column) {\n            this.columns[i].visible = visible;\n        });\n\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n        if (this.options.showColumns) {\n            var $items = this.$toolbar.find('.keep-open input').prop('disabled', false);\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    };\n\n    BootstrapTable.prototype.showAllColumns = function () {\n        this.toggleAllColumns(true);\n    };\n\n    BootstrapTable.prototype.hideAllColumns = function () {\n        this.toggleAllColumns(false);\n    };\n\n    BootstrapTable.prototype.filterBy = function (columns) {\n        this.filterColumns = $.isEmptyObject(columns) ? {} : columns;\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n    };\n\n    BootstrapTable.prototype.scrollTo = function (value) {\n        if (typeof value === 'string') {\n            value = value === 'bottom' ? this.$tableBody[0].scrollHeight : 0;\n        }\n        if (typeof value === 'number') {\n            this.$tableBody.scrollTop(value);\n        }\n        if (typeof value === 'undefined') {\n            return this.$tableBody.scrollTop();\n        }\n    };\n\n    BootstrapTable.prototype.getScrollPosition = function () {\n        return this.scrollTo();\n    };\n\n    BootstrapTable.prototype.selectPage = function (page) {\n        if (page > 0 && page <= this.options.totalPages) {\n            this.options.pageNumber = page;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.prevPage = function () {\n        if (this.options.pageNumber > 1) {\n            this.options.pageNumber--;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.nextPage = function () {\n        if (this.options.pageNumber < this.options.totalPages) {\n            this.options.pageNumber++;\n            this.updatePagination();\n        }\n    };\n\n    BootstrapTable.prototype.toggleView = function () {\n        this.options.cardView = !this.options.cardView;\n        this.initHeader();\n        // Fixed remove toolbar when click cardView button.\n        //that.initToolbar();\n        this.initBody();\n        this.trigger('toggle', this.options.cardView);\n    };\n\n    BootstrapTable.prototype.refreshOptions = function (options) {\n        //If the objects are equivalent then avoid the call of destroy / init methods\n        if (compareObjects(this.options, options, true)) {\n            return;\n        }\n        this.options = $.extend(this.options, options);\n        this.trigger('refresh-options', this.options);\n        this.destroy();\n        this.init();\n    };\n\n    BootstrapTable.prototype.resetSearch = function (text) {\n        var $search = this.$toolbar.find('.search input');\n        $search.val(text || '');\n        this.onSearch({currentTarget: $search});\n    };\n\n    BootstrapTable.prototype.expandRow_ = function (expand, index) {\n        var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', index));\n        if ($tr.next().is('tr.detail-view') === (expand ? false : true)) {\n            $tr.find('> td > .detail-icon').click();\n        }\n    };\n\n    BootstrapTable.prototype.expandRow = function (index) {\n        this.expandRow_(true, index);\n    };\n\n    BootstrapTable.prototype.collapseRow = function (index) {\n        this.expandRow_(false, index);\n    };\n\n    BootstrapTable.prototype.expandAllRows = function (isSubTable) {\n        if (isSubTable) {\n            var $tr = this.$body.find(sprintf('> tr[data-index=\"%s\"]', 0)),\n                that = this,\n                detailIcon = null,\n                executeInterval = false,\n                idInterval = -1;\n\n            if (!$tr.next().is('tr.detail-view')) {\n                $tr.find('> td > .detail-icon').click();\n                executeInterval = true;\n            } else if (!$tr.next().next().is('tr.detail-view')) {\n                $tr.next().find(\".detail-icon\").click();\n                executeInterval = true;\n            }\n\n            if (executeInterval) {\n                try {\n                    idInterval = setInterval(function () {\n                        detailIcon = that.$body.find(\"tr.detail-view\").last().find(\".detail-icon\");\n                        if (detailIcon.length > 0) {\n                            detailIcon.click();\n                        } else {\n                            clearInterval(idInterval);\n                        }\n                    }, 1);\n                } catch (ex) {\n                    clearInterval(idInterval);\n                }\n            }\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(true, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.collapseAllRows = function (isSubTable) {\n        if (isSubTable) {\n            this.expandRow_(false, 0);\n        } else {\n            var trs = this.$body.children();\n            for (var i = 0; i < trs.length; i++) {\n                this.expandRow_(false, $(trs[i]).data(\"index\"));\n            }\n        }\n    };\n\n    BootstrapTable.prototype.updateFormatText = function (name, text) {\n        if (this.options[sprintf('format%s', name)]) {\n            if (typeof text === 'string') {\n                this.options[sprintf('format%s', name)] = function () {\n                    return text;\n                };\n            } else if (typeof text === 'function') {\n                this.options[sprintf('format%s', name)] = text;\n            }\n        }\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n    };\n\n    // BOOTSTRAP TABLE PLUGIN DEFINITION\n    // =======================\n\n    var allowedMethods = [\n        'getOptions',\n        'getSelections', 'getAllSelections', 'getData',\n        'load', 'append', 'prepend', 'remove', 'removeAll',\n        'insertRow', 'updateRow', 'updateCell', 'updateByUniqueId', 'removeByUniqueId',\n        'getRowByUniqueId', 'showRow', 'hideRow', 'getHiddenRows',\n        'mergeCells',\n        'checkAll', 'uncheckAll', 'checkInvert',\n        'check', 'uncheck',\n        'checkBy', 'uncheckBy',\n        'refresh',\n        'resetView',\n        'resetWidth',\n        'destroy',\n        'showLoading', 'hideLoading',\n        'showColumn', 'hideColumn', 'getHiddenColumns', 'getVisibleColumns',\n        'showAllColumns', 'hideAllColumns',\n        'filterBy',\n        'scrollTo',\n        'getScrollPosition',\n        'selectPage', 'prevPage', 'nextPage',\n        'togglePagination',\n        'toggleView',\n        'refreshOptions',\n        'resetSearch',\n        'expandRow', 'collapseRow', 'expandAllRows', 'collapseAllRows',\n        'updateFormatText'\n    ];\n\n    $.fn.bootstrapTable = function (option) {\n        var value,\n            args = Array.prototype.slice.call(arguments, 1);\n\n        this.each(function () {\n            var $this = $(this),\n                data = $this.data('bootstrap.table'),\n                options = $.extend({}, BootstrapTable.DEFAULTS, $this.data(),\n                    typeof option === 'object' && option);\n\n            if (typeof option === 'string') {\n                if ($.inArray(option, allowedMethods) < 0) {\n                    throw new Error(\"Unknown method: \" + option);\n                }\n\n                if (!data) {\n                    return;\n                }\n\n                value = data[option].apply(data, args);\n\n                if (option === 'destroy') {\n                    $this.removeData('bootstrap.table');\n                }\n            }\n\n            if (!data) {\n                $this.data('bootstrap.table', (data = new BootstrapTable(this, options)));\n            }\n        });\n\n        return typeof value === 'undefined' ? this : value;\n    };\n\n    $.fn.bootstrapTable.Constructor = BootstrapTable;\n    $.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS;\n    $.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS;\n    $.fn.bootstrapTable.locales = BootstrapTable.LOCALES;\n    $.fn.bootstrapTable.methods = allowedMethods;\n    $.fn.bootstrapTable.utils = {\n        sprintf: sprintf,\n        getFieldIndex: getFieldIndex,\n        compareObjects: compareObjects,\n        calculateObjectValue: calculateObjectValue,\n        getItemField: getItemField,\n        objectKeys: objectKeys,\n        isIEBrowser: isIEBrowser\n    };\n\n    // BOOTSTRAP TABLE INIT\n    // =======================\n\n    $(function () {\n        $('[data-toggle=\"table\"]').bootstrapTable();\n    });\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bootstrap-table/dist/bootstrap-table.js\n// module id = 86\n// module chunks = 0 1 2 3 5 6","/**\n * Bootstrap Table Spanish (España) translation\n * Author: Antonio Pérez <anpegar@gmail.com>\n */\n (function ($) {\n    'use strict';\n    \n    $.fn.bootstrapTable.locales['es-SP'] = {\n        formatLoadingMessage: function () {\n            return 'Cargando, por favor espera...';\n        },\n        formatRecordsPerPage: function (pageNumber) {\n            return pageNumber + ' registros por p&#225;gina.';\n        },\n        formatShowingRows: function (pageFrom, pageTo, totalRows) {\n            return pageFrom + ' - ' + pageTo + ' de ' + totalRows + ' registros.';\n        },\n        formatSearch: function () {\n            return 'Buscar';\n        },\n        formatNoMatches: function () {\n            return 'No se han encontrado registros.';\n        },\n        formatRefresh: function () {\n            return 'Actualizar';\n        },\n        formatToggle: function () {\n            return 'Alternar';\n        },\n        formatColumns: function () {\n            return 'Columnas';\n        },\n        formatAllRows: function () {\n            return 'Todo';\n        }\n    };\n\n    $.extend($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales['es-SP']);\n\n})(jQuery);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bootstrap-table/dist/locale/bootstrap-table-es-SP.js\n// module id = 87\n// module chunks = 0 1 2 3 5 6","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"display\",attrs:{\"id\":_vm.ids,\"cellspacing\":\"0\",\"width\":\"100%\"}},[_c('thead'),_c('tbody')])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-357e043f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/template-compiler/preprocessor.js?engine=pug!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/modules/sharedComponents/DataTable.vue\n// module id = 88\n// module chunks = 0 1 2 3 5 6","export default class ClientStore {\n  constructor() {\n    this.columns = [\n      {\n        field: 'orden',\n        title: 'No.',\n        align: 'center',\n        valign:\t'middle'\n      },\n      {\n        field: 'checkbox',\n        checkbox: true,\n        class: 'hide'\n      },\n      {\n        field: 'id',\n        title: 'id',\n        class: 'hide'\n      },\n      {\n        field: 'nombres',\n        title: 'Nombres',\n        align: 'center',\n        valign:\t'middle'\n      },\n      {\n        field: 'apellidos',\n        title: 'Apellidos',\n        align: 'center',\n        valign:\t'middle'\n      },\n      {\n        field: 'cedula',\n        title: 'Cedula',\n        align: 'center',\n        valign:\t'middle'\n      },\n      {\n        field: 'celular',\n        title: 'Celular',\n        align: 'center',\n        valign:\t'middle'\n      },\n      {\n        field: 'estado',\n        title: 'Estado',\n        align: 'center',\n        valign:\t'middle'\n      },\n      {\n        field: 'estadoreal',\n        title: 'Estado Real',\n        class: 'hide',\n        align: 'center',\n        valign:\t'middle'\n      },\n      {\n        field: 'nombre_completo',\n        title: 'Nombre Completo',\n        class: 'hide'\n      },\n    ];\n    this.clientMode = 'add';\n    this.client = {\n      nombres: '',\n      apellidos: '',\n      cedula: '',\n      celular: '',\n      provincia: '',\n      sector: '',\n      calle: '',\n      casa: '',\n      detalles_direccion: '',\n      telefono: '',\n      lugar_trabajo: '',\n      tel_trabajo: '',\n      ingresos: 0\n    };\n  }\n\n  setClientMode(mode) {\n    this.clientMode = mode;\n  }\n\n  setClient(client) {\n    this.client = client;\n  }\n\n  clientEmpty() {\n    this.client = {\n      nombres: '',\n      apellidos: '',\n      cedula: '',\n      celular: '',\n      provincia: '',\n      sector: '',\n      calle: '',\n      casa: '',\n      detalles_direccion: '',\n      telefono: '',\n      lugarTrabajo: '',\n      telTrabajo: '',\n      ingresos: 0\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/clientes/store/clientStore.js"],"sourceRoot":""}